'use strict';

exports.__esModule = true;

var _isNumber = require('./../utils/isNumber');

var _isNumber2 = _interopRequireDefault(_isNumber);

var _computeHeightForBoxSizing = require('./computeHeightForBoxSizing');

var _computeHeightForBoxSizing2 = _interopRequireDefault(_computeHeightForBoxSizing);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Returns height limits
 *
 * @param {{minRows: number, maxRows: number}} [options]
 * @param {Object} style
 * @returns {{min: number, max: number}}
 */
function computeHeightLimits(options, style) {
  var cssHeightLimits = getCssHeightLimits(style);
  var rowsHeightLimits = computeRowsHeightLimits(options, style);

  return {
    min: Math.max(cssHeightLimits.min, rowsHeightLimits.min),
    max: Math.min(cssHeightLimits.max, rowsHeightLimits.max)
  };
}

/**
 * Returns rows height limits
 *
 * @param {{minRows: number, maxRows: number}} options
 * @param {Object} style
 * @returns {{min: number, max: number}}
 */
function computeRowsHeightLimits(_ref, style) {
  var minRows = _ref.minRows;
  var maxRows = _ref.maxRows;

  var rowHeight = parseFloat(style.lineHeight);

  return {
    min: (0, _computeHeightForBoxSizing2.default)(rowHeight * Math.floor(minRows), style),
    max: (0, _computeHeightForBoxSizing2.default)(rowHeight * Math.floor(maxRows), style)
  };
}

/**
 * Returns height limits from cssStyle
 *
 * @param {{minHeight: string, maxHeight: string}} style
 * @returns {{min: number, max: number}}
 */
function getCssHeightLimits(_ref2) {
  var minHeight = _ref2.minHeight;
  var maxHeight = _ref2.maxHeight;

  var DEFAULT_MIN_HEIGHT = 0;
  var DEFAULT_MAX_HEIGHT = Infinity;

  var minHeightValue = parseFloat(minHeight);
  var maxHeightValue = parseFloat(maxHeight);

  var isMaxHeightNumber = (0, _isNumber2.default)(maxHeightValue);

  return {
    min: Math.max(minHeightValue, DEFAULT_MIN_HEIGHT),
    max: isMaxHeightNumber ? Math.min(maxHeightValue, DEFAULT_MAX_HEIGHT) : DEFAULT_MAX_HEIGHT
  };
}

exports.default = computeHeightLimits;


//////////////////
// WEBPACK FOOTER
// ./node_modules/textarea-autoresize/lib/modules/computeHeightLimits.js
// module id = ./node_modules/textarea-autoresize/lib/modules/computeHeightLimits.js
// module chunks = commons