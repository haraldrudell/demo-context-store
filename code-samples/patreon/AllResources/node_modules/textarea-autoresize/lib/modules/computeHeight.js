'use strict';

exports.__esModule = true;

var _computeHeightForBoxSizing = require('./computeHeightForBoxSizing');

var _computeHeightForBoxSizing2 = _interopRequireDefault(_computeHeightForBoxSizing);

var _computeVerticalStyle = require('./computeVerticalStyle');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Returns height of textarea from it's scrollHeight
 *
 * @param {Element} textarea
 * @param {{ canShrink: boolean }} options
 * @param {Object} style
 * @returns {number}
 */
function computeHeight(textarea, options, style) {
  var textareaStyleAttr = textarea.style;

  var originalOverflowY = undefined;

  if (style.overflowY !== 'hidden') {
    originalOverflowY = textareaStyleAttr.overflowY;
    textareaStyleAttr.overflowY = 'hidden';
  }

  var scrollHeight = textarea.scrollHeight;

  // IE10 incorrectly reports `scrollHeight` if `height` is already set higher, than
  // height of content + padding,
  // but correctly reports `clientHeight`
  /* istanbul ignore if */

  if (scrollHeight < textarea.clientHeight) {
    scrollHeight = textarea.clientHeight;
  }

  if (options.canShrink && scrollHeight === textarea.clientHeight) {
    scrollHeight = getMaybeLargerTextareaScrollHeight(textarea);
  }

  if (typeof originalOverflowY !== 'undefined') {
    textareaStyleAttr.overflowY = originalOverflowY;
  }

  var verticalPadding = (0, _computeVerticalStyle.computeVerticalPadding)(style);
  var contentHeight = scrollHeight - verticalPadding;

  return (0, _computeHeightForBoxSizing2.default)(contentHeight, style);
}

/**
 * Gets scrollHeight of textarea, that might be taller, than it's content
 *
 * @param {Element} textarea
 * @returns {number}
 */
function getMaybeLargerTextareaScrollHeight(textarea) {
  var NO_HEIGHT = '0px';
  var textareaStyle = textarea.style;

  var currentHeight = textareaStyle.height;

  // Set height to 0, to get the actual content height
  textareaStyle.height = NO_HEIGHT;
  var realScrollHeight = textarea.scrollHeight;
  textareaStyle.height = currentHeight;

  return realScrollHeight;
}

exports.default = computeHeight;


//////////////////
// WEBPACK FOOTER
// ./node_modules/textarea-autoresize/lib/modules/computeHeight.js
// module id = ./node_modules/textarea-autoresize/lib/modules/computeHeight.js
// module chunks = commons