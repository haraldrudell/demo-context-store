'use strict';

exports.__esModule = true;
exports.default = computeOptions;

var _isNumber = require('./../utils/isNumber');

var _isNumber2 = _interopRequireDefault(_isNumber);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Computes options
 *
 * @param {Element} textarea
 * @param {Options} [options]
 * @returns {Object}
 */
function computeOptions(textarea, options) {
  options = options || {};
  options.canShrink = typeof options.canShrink === 'undefined' ? true : options.canShrink;

  var DEFAULT_MIN_ROWS = 0;
  var DEFAULT_MAX_ROWS = Infinity;

  var minRows = (0, _isNumber2.default)(options.minRows) && options.minRows >= DEFAULT_MIN_ROWS ? options.minRows : DEFAULT_MIN_ROWS;

  var rowsAttribute = parseInt(textarea.getAttribute('rows'));

  minRows = rowsAttribute ? Math.max(minRows, rowsAttribute) : minRows;

  var maxRows = (0, _isNumber2.default)(options.maxRows) && options.maxRows <= DEFAULT_MAX_ROWS ? options.maxRows : DEFAULT_MAX_ROWS;

  options.minRows = minRows;
  options.maxRows = Math.max(maxRows, minRows);

  return options;
}


//////////////////
// WEBPACK FOOTER
// ./node_modules/textarea-autoresize/lib/modules/computeOptions.js
// module id = ./node_modules/textarea-autoresize/lib/modules/computeOptions.js
// module chunks = commons