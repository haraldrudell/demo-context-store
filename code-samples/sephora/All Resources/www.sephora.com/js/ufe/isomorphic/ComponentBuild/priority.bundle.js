/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	var parentJsonpFunction = window["webpackJsonp"];
/******/ 	window["webpackJsonp"] = function webpackJsonpCallback(chunkIds, moreModules) {
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, callbacks = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId])
/******/ 				callbacks.push.apply(callbacks, installedChunks[chunkId]);
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);
/******/ 		while(callbacks.length)
/******/ 			callbacks.shift().call(null, __webpack_require__);
/******/
/******/ 	};
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// "0" means "already loaded"
/******/ 	// Array means "loading", array contains callbacks
/******/ 	var installedChunks = {
/******/ 		0:0
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId, callback) {
/******/ 		// "0" is the signal for "already loaded"
/******/ 		if(installedChunks[chunkId] === 0)
/******/ 			return callback.call(null, __webpack_require__);
/******/
/******/ 		// an array means "currently loading".
/******/ 		if(installedChunks[chunkId] !== undefined) {
/******/ 			installedChunks[chunkId].push(callback);
/******/ 		} else {
/******/ 			// start chunk loading
/******/ 			installedChunks[chunkId] = [callback];
/******/ 			var head = document.getElementsByTagName('head')[0];
/******/ 			var script = document.createElement('script');
/******/ 			script.type = 'text/javascript';
/******/ 			script.charset = 'utf-8';
/******/ 			script.async = true;
/******/
/******/ 			script.src = __webpack_require__.p + "" + ({"1":"components","2":"postload"}[chunkId]||chunkId) + ".chunk.js";
/******/ 			head.appendChild(script);
/******/ 		}
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/js/ufe/isomorphic/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!******************!*\
  !*** multi main ***!
  \******************/
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(/*! ./public_ufe/js/app.js */1);


/***/ }),
/* 1 */
/*!******************************!*\
  !*** ./public_ufe/js/app.js ***!
  \******************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/* eslint-disable */
	
	var UrlUtils = __webpack_require__(/*! utils/Url */ 2);
	var LanguageLocale = __webpack_require__(/*! utils/LanguageLocale */ 4);
	
	if (Sephora.isThirdPartySite) {
	    __webpack_require__.p = UrlUtils.getLink('/js/ufe/isomorphic/');
	} else if (LanguageLocale.getCurrentLanguage() === 'fr') {
	    __webpack_require__.p = '/fr-ca/js/ufe/isomorphic/';
	}
	
	//Polyfills
	__webpack_require__(/*! whatwg-fetch */ 6);
	__webpack_require__(/*! core-js/fn/object/assign */ 7);
	__webpack_require__(/*! core-js/fn/promise */ 44);
	__webpack_require__(/*! core-js/fn/symbol */ 81);
	__webpack_require__(/*! utils/shims/ObjectValues */ 93);
	
	// First file to run when priority.bundle.js has loaded.
	// Any pre-initialization code should be placed in here.
	__webpack_require__(/*! utils/framework/PriorityLoaded */ 94);
	
	// Place all async rendered components in Sephora.Comps.
	// Initialize component inflation logic, e.g. ApplyCtrlr & renderQueue
	// Require.ensure inPageList.js which will add <script src="compnents.chunk.js"> to the page
	__webpack_require__(/*! utils/framework/InflateComponents */ 97);
	
	// = Initialize the third party services = //
	// These are listed in order of priority.
	// Generally speaking each of these hooks up to any third party JS files needed
	// and or requests expected data from the third party service.
	// Once that data is returned it should first poppulate the store with that data
	// and then run renderQueue for any async render components proiritized with that service.
	__webpack_require__(/*! services/UserInfo */ 1176);
	__webpack_require__(/*! services/TestTarget */ 1177);
	__webpack_require__(/*! services/Certona */ 1178);
	__webpack_require__(/*! services/PostLoad */ 1180);

/***/ }),
/* 2 */
/*!************************************!*\
  !*** ./public_ufe/js/utils/Url.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';
	
	/* eslint consistent-return: [0] */
	
	var Location = __webpack_require__(/*! utils/Location */ 3);
	
	var absolutePathRegExp = /^https?:\/\/|^\/\//i;
	var protocolRegExp = /^https?:/i;
	var localHostedPrefixRegExp = /^\/img\//i;
	var captchaRegExp = /^\/challenge.png/i;
	
	function isAbsoluteUrl(url) {
	    return absolutePathRegExp.test(url);
	}
	
	function isImageHostedBySelf(url) {
	    return localHostedPrefixRegExp.test(url) || captchaRegExp.test(url);
	}
	
	/**
	 * Returns an object containing all params as queryParamKey:[array of values]
	 */
	function getParams() {
	    var urlSearch = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Location.getLocation().search;
	
	    var params = {};
	
	    //Not a global since regexp with 'g' flag will have state
	    var queryParamRegexp = /([^?&]+)=([^&]*)/g;
	
	    var result = void 0;
	    while (!!(result = queryParamRegexp.exec(urlSearch))) {
	        var key = result[1];
	        var value = result[2];
	
	        var existingValue = params[key];
	
	        if (existingValue) {
	            existingValue.push(decodeURIComponent(value));
	            params[key] = existingValue;
	        } else {
	            params[key] = [decodeURIComponent(value)];
	        }
	    }
	
	    return params;
	}
	
	var urlUtils = {
	    getParams: getParams,
	
	    /**
	     * Add a parameter to an existing URL after any existing parameters
	     * but before a hash tag if one exists.
	     * @param {string} url        The url to add to
	     * @param {string} paramToAdd The parameter to add
	     * @return {string} The original url with the new param added to it
	     */
	    addParam: function addParam(url, paramName, value) {
	
	        if (typeof url !== 'string') {
	            return url;
	        }
	
	        var parts = url.split('#');
	        var delimiter;
	        var paramToAdd = paramName + '=' + (value || '').toLowerCase();
	
	        if (parts.length < 3) {
	            delimiter = parts[0].indexOf('?') !== -1 ? '&' : '?';
	
	            url = parts[0] + delimiter + paramToAdd + (parts[1] ? '#' + parts[1] : '');
	        }
	
	        return url;
	    },
	
	    addInternalTracking: function addInternalTracking(url, values) {
	        values = values || [];
	
	        if (!values.length) {
	            return url;
	        }
	
	        return this.addParam(url, 'icid2', values.join(':'));
	    },
	
	    /**
	     * Builds a query string out of a Map. If multiple values are included
	     * for the same param, then they should be separate items in the array.
	     *
	     * @param {map} queryParams - Map with query params
	     * @returns {string} - query string
	     */
	    buildQuery: function buildQuery(queryParams) {
	        var index = 0;
	        var queryString = [];
	
	        if (queryParams) {
	            queryString.push('?');
	            queryParams.forEach(function (value, key) {
	                if (index > 0) {
	                    queryString.push('&');
	                }
	
	                if (Array.isArray(value)) {
	                    value.forEach(function (paramValue, paramIndex) {
	                        if (paramIndex > 0) {
	                            queryString.push('&');
	                        }
	
	                        queryString.push(key + '=' + paramValue);
	                    });
	                } else {
	                    queryString.push(key + '=' + value);
	                }
	
	                index++;
	            });
	        }
	
	        return queryString.join('');
	    },
	
	    getLink: function getLink(link) {
	        if (Sephora.isThirdPartySite && typeof link !== 'undefined' && link !== null && link.indexOf('http') < 0) {
	            // TODO: replace domain strings with variables.
	            if (global.process && global.process.env && global.process.env.UFE_ENV) {
	                if (global.process.env.UFE_ENV === 'QA') {
	                    return '//qa.sephora.com' + link;
	                } else {
	                    return '//www.sephora.com' + link;
	                }
	            }
	        } else {
	            return link;
	        }
	    },
	
	    getParamValueAsSingleString: function getParamValueAsSingleString(name) {
	        var url = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
	
	        var valueAsArray = urlUtils.getParamsByName(name, url);
	
	        return (valueAsArray || []).join();
	    },
	
	    getParamsByName: function getParamsByName(name) {
	        var url = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Location.getLocation().search;
	
	        return getParams(url)[name];
	    },
	
	    /**
	     * Update the queryparams in the store and also updates the actual browser url if the url params
	     * don't match.  Browser location changes default to replaceState
	     * @param queryString Should include leading ?
	     * @param hash Should include leading #
	     * @param isReplaceState
	     */
	    updateURL: function updateURL(queryString, hash) {
	        var isReplaceState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
	
	        var url = window.location.origin + window.location.pathname;
	
	        url = url + (queryString || '') + (hash || '');
	
	        if (window.history) {
	            if (isReplaceState) {
	                window.history.replaceState({}, null, url);
	            } else {
	                window.history.pushState({}, null, url);
	            }
	        }
	    },
	
	    isAbsoluteUrl: function isAbsoluteUrl(url) {
	        return !!url && (url.indexOf('http://') === 0 || url.indexOf('https://') === 0);
	    },
	
	    isDataUrl: function isDataUrl(url) {
	        return !!url && url.indexOf('data:') === 0;
	    },
	
	    getImagePath: function getImagePath(url) {
	        return this.isAbsoluteUrl(url) || this.isDataUrl(url) ? url : (Sephora.configurationSettings.imgFixURL || '') + (urlUtils.getLink(url) || '').replace(protocolRegExp, '');
	    },
	
	    /**
	     * Function is created to be able to mock this call for unit-tests,
	     * otherwise your tests will fail with attempt of reload the page
	    */
	    redirectTo: function redirectTo(url) {
	        window.location = url;
	    },
	
	    /**
	     * Converts an object into a query parameters string
	     * @param  {Object} params - The object to be converted to a query string
	     * @return {String} - The query string
	     */
	    makeQueryString: function makeQueryString(params) {
	        var pairs = [];
	
	        var _loop = function _loop(key) {
	            if (params.hasOwnProperty(key)) {
	                var value = params[key];
	
	                if (Array.isArray(value)) {
	                    value.forEach(function (subValue) {
	                        pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(subValue));
	                    });
	                } else if (value !== undefined) {
	                    pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));
	                }
	            }
	        };
	
	        for (var key in params) {
	            _loop(key);
	        }
	
	        return pairs.join('&');
	    }
	};
	
	module.exports = urlUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 3 */
/*!*****************************************!*\
  !*** ./public_ufe/js/utils/Location.js ***!
  \*****************************************/
/***/ (function(module, exports) {

	'use strict';
	
	module.exports = function () {
	    // this will not work for Header and Footer on legacy pages, as they are considered
	    // to be the same on all pages and their `location` is considered as `home page` always
	
	    var Location = {};
	    var basketURL = /^\/basket*/;
	    var productReviewsPageURL = /^\/reviews*/;
	    var addReviewPageURL = /^\/addReview*/;
	    var productURL = /product*/;
	    var CUSTOM_SETS_HASH = '#customsets';
	    function getLocation() {
	        return Sephora.location ? Sephora.location : !Sephora.isRootRender ? window.location : {
	            pathname: ''
	        };
	    }
	
	    function setLocation(url) {
	        var location = Location.getLocation();
	        location.href = url;
	    }
	
	    function isBasketPage() {
	        var location = Location.getLocation();
	        return location.pathname && !!location.pathname.match(basketURL);
	    }
	
	    function isProductReviewsPage() {
	        var location = Location.getLocation();
	        return location.pathname && !!location.pathname.match(productReviewsPageURL);
	    }
	
	    function isAddReviewPage() {
	        var location = Location.getLocation();
	        return location.pathname && !!location.pathname.match(addReviewPageURL);
	    }
	
	    function isGalleryPage() {
	        var location = Location.getLocation();
	        return location.pathname === '/gallery' || location.pathname === '/gallery/';
	    }
	
	    function isGalleryAlbumPage() {
	        var location = Location.getLocation();
	        return (/\/gallery\/album\/.*/.test(location.pathname)
	        );
	    }
	
	    function isCustomSets(hash) {
	        return new RegExp(CUSTOM_SETS_HASH).test(hash || Location.getLocation().hash);
	    }
	
	    function isMyProfilePage() {
	        var location = Location.getLocation();
	        return location.pathname === '/profile/me';
	    }
	
	    function isRichProfilePage() {
	        var location = Location.getLocation();
	        return location.pathname.indexOf('/profile') === 0;
	    }
	
	    function isCheckout() {
	        var location = Location.getLocation();
	        return location.pathname.indexOf('/checkout') === 0;
	    }
	
	    function isPreview() {
	        var location = Location.getLocation();
	        return location.pathname.indexOf('/preview') === 0;
	    }
	
	    function isHomePage() {
	        return Sephora.pagePath === 'Homepage/Homepage';
	    }
	
	    function isProductPage() {
	        var location = Location.getLocation();
	        return location.pathname && !!location.href.match(productURL);
	    }
	
	    function isGalleryProfilePage() {
	        var location = Location.getLocation();
	        return location.pathname === '/myprofile' || location.pathname === '/myprofile/photos' || location.pathname === '/gallery/myprofile/photos' || location.pathname === '/gallery/myprofile/loved';
	    }
	
	    function reload() {
	        window.location.reload();
	    }
	
	    Location = {
	        isBasketPage: isBasketPage,
	        isProductReviewsPage: isProductReviewsPage,
	        isAddReviewPage: isAddReviewPage,
	        isMyProfilePage: isMyProfilePage,
	        isRichProfilePage: isRichProfilePage,
	        isPreview: isPreview,
	        isCheckout: isCheckout,
	        isHomePage: isHomePage,
	        isGalleryPage: isGalleryPage,
	        isProductPage: isProductPage,
	        isGalleryProfilePage: isGalleryProfilePage,
	        isGalleryAlbumPage: isGalleryAlbumPage,
	        isCustomSets: isCustomSets,
	        getLocation: getLocation,
	        setLocation: setLocation,
	        reload: reload,
	        PAGES: { CUSTOM_SETS_HASH: CUSTOM_SETS_HASH }
	    };
	
	    return Location;
	}();

/***/ }),
/* 4 */
/*!***********************************************!*\
  !*** ./public_ufe/js/utils/LanguageLocale.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// Manage Language and Locale
	
	var COOKIE_UTILS = __webpack_require__(/*! utils/Cookies */ 5);
	var LOCALE_COOKIE_KEY = 'site_locale';
	var LANGUAGE_COOKIE_KEY = 'site_language';
	var COUNTRIES = { US: 'US', CA: 'CA' };
	var LANGUAGES = { EN: 'EN', FR: 'FR' };
	var COUNTRY_LONG_NAMES = {
	    US: 'United States',
	    CA: 'Canada'
	};
	
	var ISO_CURRENCY = {
	    US: 'USD',
	    CA: 'CAD',
	    JP: 'JPY',
	    KR: 'KRW',
	    NL: 'EUR',
	    GB: 'GBP',
	    DE: 'EUR',
	    NO: 'NOK'
	};
	
	module.exports = {
	    COUNTRIES: COUNTRIES,
	    COUNTRY_LONG_NAMES: COUNTRY_LONG_NAMES,
	    ISO_CURRENCY: ISO_CURRENCY,
	    LANGUAGES: LANGUAGES,
	
	    // return the current country such as "us" or "canada"
	    getCurrentCountry: function getCurrentCountry() {
	        return Sephora.renderQueryParams.country.toUpperCase() || COUNTRIES.US;
	    },
	
	    setCurrentCountry: function setCurrentCountry(country) {
	        COOKIE_UTILS.write(LOCALE_COOKIE_KEY, country);
	    },
	
	    getCurrentLanguage: function getCurrentLanguage() {
	        return COOKIE_UTILS.read(LANGUAGE_COOKIE_KEY) || LANGUAGES.EN;
	    },
	
	    setCurrentLanguage: function setCurrentLanguage(language) {
	        COOKIE_UTILS.write(LANGUAGE_COOKIE_KEY, language);
	    },
	
	    isCanada: function isCanada() {
	        return this.getCurrentCountry().toUpperCase() === COUNTRIES.CA;
	    },
	
	    isUS: function isUS() {
	        return this.getCurrentCountry().toUpperCase() === COUNTRIES.US;
	    },
	
	    flags: {
	        US: '/contentimages/country-flags/icon-flag-us.png',
	        CA: '/contentimages/country-flags/icon-flag-ca.png'
	    }
	};

/***/ }),
/* 5 */
/*!****************************************!*\
  !*** ./public_ufe/js/utils/Cookies.js ***!
  \****************************************/
/***/ (function(module, exports) {

	'use strict';
	
	// Manage cookies.
	module.exports = {
	
	    KEYS: {
	        SESSIONID: 'JSESSIONID',
	        IS_PREVIEW_ENV_COOKIE: 'preview',
	        PREVIEW_COOKIE: 'previewdate'
	    },
	
	    //temp moved to headerfooter.js remove from headerfooter.js when we are using bTag for analytics
	    write: function write(name, value, days, top) {
	        if (typeof days === 'undefined') {
	            days = 365;
	        }
	
	        this.writeCookieMillis(name, value, days * 86400000, top);
	    },
	
	    writeCookieMillis: function writeCookieMillis(name, value, millis, onTopDomain) {
	        if (typeof onTopDomain === 'undefined') {
	            onTopDomain = false;
	        }
	
	        millis || (millis = 0);
	
	        //use encodeURI, decodeURI, encodeURIComponent, and decodeURIComponent
	        var cookieStr = escape(name) + '=' + escape(value);
	
	        if (millis !== 0) {
	            var now = new Date();
	            var then = new Date(now.getTime() + millis);
	            var exp = then.toGMTString();
	            cookieStr += '; expires=' + exp;
	        }
	
	        cookieStr += '; path=/';
	        if (onTopDomain) {
	            var dom;
	            var parts;
	            if (isNaN(parseInt(document.domain.replace(/\./g, '')))) {
	                parts = document.domain.split('.');
	                dom = parts.slice(-2).join('.');
	            } else {
	                dom = document.domain;
	            }
	
	            cookieStr += ';domain=' + dom;
	        }
	
	        document.cookie = cookieStr;
	        return cookieStr;
	    },
	
	    delete: function _delete(key) {
	        this.writeCookieMillis(key, null, 0);
	    },
	
	    read: function read(key) {
	        var cookies = ('' + document.cookie).split('; ');
	        var i = 0;
	        var currentCookie = [];
	        var name = '';
	
	        for (i = 0; i < cookies.length; ++i) {
	            currentCookie = cookies[i].split('=');
	            if (currentCookie.length !== 2) {
	                /* eslint no-continue: 0 */
	                continue;
	            }
	
	            name = window.unescape(currentCookie[0]);
	
	            if (key === name) {
	                return window.unescape(currentCookie[1]);
	            }
	        }
	
	        return null;
	    }
	};

/***/ }),
/* 6 */
/*!*********************************!*\
  !*** ./~/whatwg-fetch/fetch.js ***!
  \*********************************/
/***/ (function(module, exports) {

	(function(self) {
	  'use strict';
	
	  if (self.fetch) {
	    return
	  }
	
	  var support = {
	    searchParams: 'URLSearchParams' in self,
	    iterable: 'Symbol' in self && 'iterator' in Symbol,
	    blob: 'FileReader' in self && 'Blob' in self && (function() {
	      try {
	        new Blob()
	        return true
	      } catch(e) {
	        return false
	      }
	    })(),
	    formData: 'FormData' in self,
	    arrayBuffer: 'ArrayBuffer' in self
	  }
	
	  function normalizeName(name) {
	    if (typeof name !== 'string') {
	      name = String(name)
	    }
	    if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
	      throw new TypeError('Invalid character in header field name')
	    }
	    return name.toLowerCase()
	  }
	
	  function normalizeValue(value) {
	    if (typeof value !== 'string') {
	      value = String(value)
	    }
	    return value
	  }
	
	  // Build a destructive iterator for the value list
	  function iteratorFor(items) {
	    var iterator = {
	      next: function() {
	        var value = items.shift()
	        return {done: value === undefined, value: value}
	      }
	    }
	
	    if (support.iterable) {
	      iterator[Symbol.iterator] = function() {
	        return iterator
	      }
	    }
	
	    return iterator
	  }
	
	  function Headers(headers) {
	    this.map = {}
	
	    if (headers instanceof Headers) {
	      headers.forEach(function(value, name) {
	        this.append(name, value)
	      }, this)
	
	    } else if (headers) {
	      Object.getOwnPropertyNames(headers).forEach(function(name) {
	        this.append(name, headers[name])
	      }, this)
	    }
	  }
	
	  Headers.prototype.append = function(name, value) {
	    name = normalizeName(name)
	    value = normalizeValue(value)
	    var list = this.map[name]
	    if (!list) {
	      list = []
	      this.map[name] = list
	    }
	    list.push(value)
	  }
	
	  Headers.prototype['delete'] = function(name) {
	    delete this.map[normalizeName(name)]
	  }
	
	  Headers.prototype.get = function(name) {
	    var values = this.map[normalizeName(name)]
	    return values ? values[0] : null
	  }
	
	  Headers.prototype.getAll = function(name) {
	    return this.map[normalizeName(name)] || []
	  }
	
	  Headers.prototype.has = function(name) {
	    return this.map.hasOwnProperty(normalizeName(name))
	  }
	
	  Headers.prototype.set = function(name, value) {
	    this.map[normalizeName(name)] = [normalizeValue(value)]
	  }
	
	  Headers.prototype.forEach = function(callback, thisArg) {
	    Object.getOwnPropertyNames(this.map).forEach(function(name) {
	      this.map[name].forEach(function(value) {
	        callback.call(thisArg, value, name, this)
	      }, this)
	    }, this)
	  }
	
	  Headers.prototype.keys = function() {
	    var items = []
	    this.forEach(function(value, name) { items.push(name) })
	    return iteratorFor(items)
	  }
	
	  Headers.prototype.values = function() {
	    var items = []
	    this.forEach(function(value) { items.push(value) })
	    return iteratorFor(items)
	  }
	
	  Headers.prototype.entries = function() {
	    var items = []
	    this.forEach(function(value, name) { items.push([name, value]) })
	    return iteratorFor(items)
	  }
	
	  if (support.iterable) {
	    Headers.prototype[Symbol.iterator] = Headers.prototype.entries
	  }
	
	  function consumed(body) {
	    if (body.bodyUsed) {
	      return Promise.reject(new TypeError('Already read'))
	    }
	    body.bodyUsed = true
	  }
	
	  function fileReaderReady(reader) {
	    return new Promise(function(resolve, reject) {
	      reader.onload = function() {
	        resolve(reader.result)
	      }
	      reader.onerror = function() {
	        reject(reader.error)
	      }
	    })
	  }
	
	  function readBlobAsArrayBuffer(blob) {
	    var reader = new FileReader()
	    reader.readAsArrayBuffer(blob)
	    return fileReaderReady(reader)
	  }
	
	  function readBlobAsText(blob) {
	    var reader = new FileReader()
	    reader.readAsText(blob)
	    return fileReaderReady(reader)
	  }
	
	  function Body() {
	    this.bodyUsed = false
	
	    this._initBody = function(body) {
	      this._bodyInit = body
	      if (typeof body === 'string') {
	        this._bodyText = body
	      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
	        this._bodyBlob = body
	      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
	        this._bodyFormData = body
	      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
	        this._bodyText = body.toString()
	      } else if (!body) {
	        this._bodyText = ''
	      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {
	        // Only support ArrayBuffers for POST method.
	        // Receiving ArrayBuffers happens via Blobs, instead.
	      } else {
	        throw new Error('unsupported BodyInit type')
	      }
	
	      if (!this.headers.get('content-type')) {
	        if (typeof body === 'string') {
	          this.headers.set('content-type', 'text/plain;charset=UTF-8')
	        } else if (this._bodyBlob && this._bodyBlob.type) {
	          this.headers.set('content-type', this._bodyBlob.type)
	        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
	          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')
	        }
	      }
	    }
	
	    if (support.blob) {
	      this.blob = function() {
	        var rejected = consumed(this)
	        if (rejected) {
	          return rejected
	        }
	
	        if (this._bodyBlob) {
	          return Promise.resolve(this._bodyBlob)
	        } else if (this._bodyFormData) {
	          throw new Error('could not read FormData body as blob')
	        } else {
	          return Promise.resolve(new Blob([this._bodyText]))
	        }
	      }
	
	      this.arrayBuffer = function() {
	        return this.blob().then(readBlobAsArrayBuffer)
	      }
	
	      this.text = function() {
	        var rejected = consumed(this)
	        if (rejected) {
	          return rejected
	        }
	
	        if (this._bodyBlob) {
	          return readBlobAsText(this._bodyBlob)
	        } else if (this._bodyFormData) {
	          throw new Error('could not read FormData body as text')
	        } else {
	          return Promise.resolve(this._bodyText)
	        }
	      }
	    } else {
	      this.text = function() {
	        var rejected = consumed(this)
	        return rejected ? rejected : Promise.resolve(this._bodyText)
	      }
	    }
	
	    if (support.formData) {
	      this.formData = function() {
	        return this.text().then(decode)
	      }
	    }
	
	    this.json = function() {
	      return this.text().then(JSON.parse)
	    }
	
	    return this
	  }
	
	  // HTTP methods whose capitalization should be normalized
	  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']
	
	  function normalizeMethod(method) {
	    var upcased = method.toUpperCase()
	    return (methods.indexOf(upcased) > -1) ? upcased : method
	  }
	
	  function Request(input, options) {
	    options = options || {}
	    var body = options.body
	    if (Request.prototype.isPrototypeOf(input)) {
	      if (input.bodyUsed) {
	        throw new TypeError('Already read')
	      }
	      this.url = input.url
	      this.credentials = input.credentials
	      if (!options.headers) {
	        this.headers = new Headers(input.headers)
	      }
	      this.method = input.method
	      this.mode = input.mode
	      if (!body) {
	        body = input._bodyInit
	        input.bodyUsed = true
	      }
	    } else {
	      this.url = input
	    }
	
	    this.credentials = options.credentials || this.credentials || 'omit'
	    if (options.headers || !this.headers) {
	      this.headers = new Headers(options.headers)
	    }
	    this.method = normalizeMethod(options.method || this.method || 'GET')
	    this.mode = options.mode || this.mode || null
	    this.referrer = null
	
	    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
	      throw new TypeError('Body not allowed for GET or HEAD requests')
	    }
	    this._initBody(body)
	  }
	
	  Request.prototype.clone = function() {
	    return new Request(this)
	  }
	
	  function decode(body) {
	    var form = new FormData()
	    body.trim().split('&').forEach(function(bytes) {
	      if (bytes) {
	        var split = bytes.split('=')
	        var name = split.shift().replace(/\+/g, ' ')
	        var value = split.join('=').replace(/\+/g, ' ')
	        form.append(decodeURIComponent(name), decodeURIComponent(value))
	      }
	    })
	    return form
	  }
	
	  function headers(xhr) {
	    var head = new Headers()
	    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\n')
	    pairs.forEach(function(header) {
	      var split = header.trim().split(':')
	      var key = split.shift().trim()
	      var value = split.join(':').trim()
	      head.append(key, value)
	    })
	    return head
	  }
	
	  Body.call(Request.prototype)
	
	  function Response(bodyInit, options) {
	    if (!options) {
	      options = {}
	    }
	
	    this.type = 'default'
	    this.status = options.status
	    this.ok = this.status >= 200 && this.status < 300
	    this.statusText = options.statusText
	    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)
	    this.url = options.url || ''
	    this._initBody(bodyInit)
	  }
	
	  Body.call(Response.prototype)
	
	  Response.prototype.clone = function() {
	    return new Response(this._bodyInit, {
	      status: this.status,
	      statusText: this.statusText,
	      headers: new Headers(this.headers),
	      url: this.url
	    })
	  }
	
	  Response.error = function() {
	    var response = new Response(null, {status: 0, statusText: ''})
	    response.type = 'error'
	    return response
	  }
	
	  var redirectStatuses = [301, 302, 303, 307, 308]
	
	  Response.redirect = function(url, status) {
	    if (redirectStatuses.indexOf(status) === -1) {
	      throw new RangeError('Invalid status code')
	    }
	
	    return new Response(null, {status: status, headers: {location: url}})
	  }
	
	  self.Headers = Headers
	  self.Request = Request
	  self.Response = Response
	
	  self.fetch = function(input, init) {
	    return new Promise(function(resolve, reject) {
	      var request
	      if (Request.prototype.isPrototypeOf(input) && !init) {
	        request = input
	      } else {
	        request = new Request(input, init)
	      }
	
	      var xhr = new XMLHttpRequest()
	
	      function responseURL() {
	        if ('responseURL' in xhr) {
	          return xhr.responseURL
	        }
	
	        // Avoid security warnings on getResponseHeader when not allowed by CORS
	        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {
	          return xhr.getResponseHeader('X-Request-URL')
	        }
	
	        return
	      }
	
	      xhr.onload = function() {
	        var options = {
	          status: xhr.status,
	          statusText: xhr.statusText,
	          headers: headers(xhr),
	          url: responseURL()
	        }
	        var body = 'response' in xhr ? xhr.response : xhr.responseText
	        resolve(new Response(body, options))
	      }
	
	      xhr.onerror = function() {
	        reject(new TypeError('Network request failed'))
	      }
	
	      xhr.ontimeout = function() {
	        reject(new TypeError('Network request failed'))
	      }
	
	      xhr.open(request.method, request.url, true)
	
	      if (request.credentials === 'include') {
	        xhr.withCredentials = true
	      }
	
	      if ('responseType' in xhr && support.blob) {
	        xhr.responseType = 'blob'
	      }
	
	      request.headers.forEach(function(value, name) {
	        xhr.setRequestHeader(name, value)
	      })
	
	      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)
	    })
	  }
	  self.fetch.polyfill = true
	})(typeof self !== 'undefined' ? self : this);


/***/ }),
/* 7 */
/*!***************************************!*\
  !*** ./~/core-js/fn/object/assign.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(/*! ../../modules/es6.object.assign */ 8);
	module.exports = __webpack_require__(/*! ../../modules/_core */ 11).Object.assign;


/***/ }),
/* 8 */
/*!************************************************!*\
  !*** ./~/core-js/modules/es6.object.assign.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(/*! ./_export */ 9);
	
	$export($export.S + $export.F, 'Object', { assign: __webpack_require__(/*! ./_object-assign */ 27) });


/***/ }),
/* 9 */
/*!**************************************!*\
  !*** ./~/core-js/modules/_export.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(/*! ./_global */ 10);
	var core = __webpack_require__(/*! ./_core */ 11);
	var hide = __webpack_require__(/*! ./_hide */ 12);
	var redefine = __webpack_require__(/*! ./_redefine */ 22);
	var ctx = __webpack_require__(/*! ./_ctx */ 25);
	var PROTOTYPE = 'prototype';
	
	var $export = function (type, name, source) {
	  var IS_FORCED = type & $export.F;
	  var IS_GLOBAL = type & $export.G;
	  var IS_STATIC = type & $export.S;
	  var IS_PROTO = type & $export.P;
	  var IS_BIND = type & $export.B;
	  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
	  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
	  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
	  var key, own, out, exp;
	  if (IS_GLOBAL) source = name;
	  for (key in source) {
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    // export native or passed
	    out = (own ? target : source)[key];
	    // bind timers to global for call from export context
	    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // extend global
	    if (target) redefine(target, key, out, type & $export.U);
	    // export
	    if (exports[key] != out) hide(exports, key, exp);
	    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
	  }
	};
	global.core = core;
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library`
	module.exports = $export;


/***/ }),
/* 10 */
/*!**************************************!*\
  !*** ./~/core-js/modules/_global.js ***!
  \**************************************/
/***/ (function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self
	  // eslint-disable-next-line no-new-func
	  : Function('return this')();
	if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),
/* 11 */
/*!************************************!*\
  !*** ./~/core-js/modules/_core.js ***!
  \************************************/
/***/ (function(module, exports) {

	var core = module.exports = { version: '2.5.1' };
	if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),
/* 12 */
/*!************************************!*\
  !*** ./~/core-js/modules/_hide.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

	var dP = __webpack_require__(/*! ./_object-dp */ 13);
	var createDesc = __webpack_require__(/*! ./_property-desc */ 21);
	module.exports = __webpack_require__(/*! ./_descriptors */ 17) ? function (object, key, value) {
	  return dP.f(object, key, createDesc(1, value));
	} : function (object, key, value) {
	  object[key] = value;
	  return object;
	};


/***/ }),
/* 13 */
/*!*****************************************!*\
  !*** ./~/core-js/modules/_object-dp.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	var anObject = __webpack_require__(/*! ./_an-object */ 14);
	var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ 16);
	var toPrimitive = __webpack_require__(/*! ./_to-primitive */ 20);
	var dP = Object.defineProperty;
	
	exports.f = __webpack_require__(/*! ./_descriptors */ 17) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if (IE8_DOM_DEFINE) try {
	    return dP(O, P, Attributes);
	  } catch (e) { /* empty */ }
	  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
	  if ('value' in Attributes) O[P] = Attributes.value;
	  return O;
	};


/***/ }),
/* 14 */
/*!*****************************************!*\
  !*** ./~/core-js/modules/_an-object.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(/*! ./_is-object */ 15);
	module.exports = function (it) {
	  if (!isObject(it)) throw TypeError(it + ' is not an object!');
	  return it;
	};


/***/ }),
/* 15 */
/*!*****************************************!*\
  !*** ./~/core-js/modules/_is-object.js ***!
  \*****************************************/
/***/ (function(module, exports) {

	module.exports = function (it) {
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};


/***/ }),
/* 16 */
/*!**********************************************!*\
  !*** ./~/core-js/modules/_ie8-dom-define.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(/*! ./_descriptors */ 17) && !__webpack_require__(/*! ./_fails */ 18)(function () {
	  return Object.defineProperty(__webpack_require__(/*! ./_dom-create */ 19)('div'), 'a', { get: function () { return 7; } }).a != 7;
	});


/***/ }),
/* 17 */
/*!*******************************************!*\
  !*** ./~/core-js/modules/_descriptors.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(/*! ./_fails */ 18)(function () {
	  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
	});


/***/ }),
/* 18 */
/*!*************************************!*\
  !*** ./~/core-js/modules/_fails.js ***!
  \*************************************/
/***/ (function(module, exports) {

	module.exports = function (exec) {
	  try {
	    return !!exec();
	  } catch (e) {
	    return true;
	  }
	};


/***/ }),
/* 19 */
/*!******************************************!*\
  !*** ./~/core-js/modules/_dom-create.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(/*! ./_is-object */ 15);
	var document = __webpack_require__(/*! ./_global */ 10).document;
	// typeof document.createElement is 'object' in old IE
	var is = isObject(document) && isObject(document.createElement);
	module.exports = function (it) {
	  return is ? document.createElement(it) : {};
	};


/***/ }),
/* 20 */
/*!********************************************!*\
  !*** ./~/core-js/modules/_to-primitive.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(/*! ./_is-object */ 15);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function (it, S) {
	  if (!isObject(it)) return it;
	  var fn, val;
	  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  throw TypeError("Can't convert object to primitive value");
	};


/***/ }),
/* 21 */
/*!*********************************************!*\
  !*** ./~/core-js/modules/_property-desc.js ***!
  \*********************************************/
/***/ (function(module, exports) {

	module.exports = function (bitmap, value) {
	  return {
	    enumerable: !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable: !(bitmap & 4),
	    value: value
	  };
	};


/***/ }),
/* 22 */
/*!****************************************!*\
  !*** ./~/core-js/modules/_redefine.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(/*! ./_global */ 10);
	var hide = __webpack_require__(/*! ./_hide */ 12);
	var has = __webpack_require__(/*! ./_has */ 23);
	var SRC = __webpack_require__(/*! ./_uid */ 24)('src');
	var TO_STRING = 'toString';
	var $toString = Function[TO_STRING];
	var TPL = ('' + $toString).split(TO_STRING);
	
	__webpack_require__(/*! ./_core */ 11).inspectSource = function (it) {
	  return $toString.call(it);
	};
	
	(module.exports = function (O, key, val, safe) {
	  var isFunction = typeof val == 'function';
	  if (isFunction) has(val, 'name') || hide(val, 'name', key);
	  if (O[key] === val) return;
	  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
	  if (O === global) {
	    O[key] = val;
	  } else if (!safe) {
	    delete O[key];
	    hide(O, key, val);
	  } else if (O[key]) {
	    O[key] = val;
	  } else {
	    hide(O, key, val);
	  }
	// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
	})(Function.prototype, TO_STRING, function toString() {
	  return typeof this == 'function' && this[SRC] || $toString.call(this);
	});


/***/ }),
/* 23 */
/*!***********************************!*\
  !*** ./~/core-js/modules/_has.js ***!
  \***********************************/
/***/ (function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function (it, key) {
	  return hasOwnProperty.call(it, key);
	};


/***/ }),
/* 24 */
/*!***********************************!*\
  !*** ./~/core-js/modules/_uid.js ***!
  \***********************************/
/***/ (function(module, exports) {

	var id = 0;
	var px = Math.random();
	module.exports = function (key) {
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};


/***/ }),
/* 25 */
/*!***********************************!*\
  !*** ./~/core-js/modules/_ctx.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(/*! ./_a-function */ 26);
	module.exports = function (fn, that, length) {
	  aFunction(fn);
	  if (that === undefined) return fn;
	  switch (length) {
	    case 1: return function (a) {
	      return fn.call(that, a);
	    };
	    case 2: return function (a, b) {
	      return fn.call(that, a, b);
	    };
	    case 3: return function (a, b, c) {
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function (/* ...args */) {
	    return fn.apply(that, arguments);
	  };
	};


/***/ }),
/* 26 */
/*!******************************************!*\
  !*** ./~/core-js/modules/_a-function.js ***!
  \******************************************/
/***/ (function(module, exports) {

	module.exports = function (it) {
	  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
	  return it;
	};


/***/ }),
/* 27 */
/*!*********************************************!*\
  !*** ./~/core-js/modules/_object-assign.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.2.1 Object.assign(target, source, ...)
	var getKeys = __webpack_require__(/*! ./_object-keys */ 28);
	var gOPS = __webpack_require__(/*! ./_object-gops */ 41);
	var pIE = __webpack_require__(/*! ./_object-pie */ 42);
	var toObject = __webpack_require__(/*! ./_to-object */ 43);
	var IObject = __webpack_require__(/*! ./_iobject */ 31);
	var $assign = Object.assign;
	
	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = !$assign || __webpack_require__(/*! ./_fails */ 18)(function () {
	  var A = {};
	  var B = {};
	  // eslint-disable-next-line no-undef
	  var S = Symbol();
	  var K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function (k) { B[k] = k; });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
	  var T = toObject(target);
	  var aLen = arguments.length;
	  var index = 1;
	  var getSymbols = gOPS.f;
	  var isEnum = pIE.f;
	  while (aLen > index) {
	    var S = IObject(arguments[index++]);
	    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
	    var length = keys.length;
	    var j = 0;
	    var key;
	    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
	  } return T;
	} : $assign;


/***/ }),
/* 28 */
/*!*******************************************!*\
  !*** ./~/core-js/modules/_object-keys.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys = __webpack_require__(/*! ./_object-keys-internal */ 29);
	var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ 40);
	
	module.exports = Object.keys || function keys(O) {
	  return $keys(O, enumBugKeys);
	};


/***/ }),
/* 29 */
/*!****************************************************!*\
  !*** ./~/core-js/modules/_object-keys-internal.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	var has = __webpack_require__(/*! ./_has */ 23);
	var toIObject = __webpack_require__(/*! ./_to-iobject */ 30);
	var arrayIndexOf = __webpack_require__(/*! ./_array-includes */ 34)(false);
	var IE_PROTO = __webpack_require__(/*! ./_shared-key */ 38)('IE_PROTO');
	
	module.exports = function (object, names) {
	  var O = toIObject(object);
	  var i = 0;
	  var result = [];
	  var key;
	  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while (names.length > i) if (has(O, key = names[i++])) {
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};


/***/ }),
/* 30 */
/*!******************************************!*\
  !*** ./~/core-js/modules/_to-iobject.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(/*! ./_iobject */ 31);
	var defined = __webpack_require__(/*! ./_defined */ 33);
	module.exports = function (it) {
	  return IObject(defined(it));
	};


/***/ }),
/* 31 */
/*!***************************************!*\
  !*** ./~/core-js/modules/_iobject.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(/*! ./_cof */ 32);
	// eslint-disable-next-line no-prototype-builtins
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};


/***/ }),
/* 32 */
/*!***********************************!*\
  !*** ./~/core-js/modules/_cof.js ***!
  \***********************************/
/***/ (function(module, exports) {

	var toString = {}.toString;
	
	module.exports = function (it) {
	  return toString.call(it).slice(8, -1);
	};


/***/ }),
/* 33 */
/*!***************************************!*\
  !*** ./~/core-js/modules/_defined.js ***!
  \***************************************/
/***/ (function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function (it) {
	  if (it == undefined) throw TypeError("Can't call method on  " + it);
	  return it;
	};


/***/ }),
/* 34 */
/*!**********************************************!*\
  !*** ./~/core-js/modules/_array-includes.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(/*! ./_to-iobject */ 30);
	var toLength = __webpack_require__(/*! ./_to-length */ 35);
	var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ 37);
	module.exports = function (IS_INCLUDES) {
	  return function ($this, el, fromIndex) {
	    var O = toIObject($this);
	    var length = toLength(O.length);
	    var index = toAbsoluteIndex(fromIndex, length);
	    var value;
	    // Array#includes uses SameValueZero equality algorithm
	    // eslint-disable-next-line no-self-compare
	    if (IS_INCLUDES && el != el) while (length > index) {
	      value = O[index++];
	      // eslint-disable-next-line no-self-compare
	      if (value != value) return true;
	    // Array#indexOf ignores holes, Array#includes - not
	    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
	      if (O[index] === el) return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};


/***/ }),
/* 35 */
/*!*****************************************!*\
  !*** ./~/core-js/modules/_to-length.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(/*! ./_to-integer */ 36);
	var min = Math.min;
	module.exports = function (it) {
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};


/***/ }),
/* 36 */
/*!******************************************!*\
  !*** ./~/core-js/modules/_to-integer.js ***!
  \******************************************/
/***/ (function(module, exports) {

	// 7.1.4 ToInteger
	var ceil = Math.ceil;
	var floor = Math.floor;
	module.exports = function (it) {
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};


/***/ }),
/* 37 */
/*!*************************************************!*\
  !*** ./~/core-js/modules/_to-absolute-index.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(/*! ./_to-integer */ 36);
	var max = Math.max;
	var min = Math.min;
	module.exports = function (index, length) {
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};


/***/ }),
/* 38 */
/*!******************************************!*\
  !*** ./~/core-js/modules/_shared-key.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(/*! ./_shared */ 39)('keys');
	var uid = __webpack_require__(/*! ./_uid */ 24);
	module.exports = function (key) {
	  return shared[key] || (shared[key] = uid(key));
	};


/***/ }),
/* 39 */
/*!**************************************!*\
  !*** ./~/core-js/modules/_shared.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(/*! ./_global */ 10);
	var SHARED = '__core-js_shared__';
	var store = global[SHARED] || (global[SHARED] = {});
	module.exports = function (key) {
	  return store[key] || (store[key] = {});
	};


/***/ }),
/* 40 */
/*!*********************************************!*\
  !*** ./~/core-js/modules/_enum-bug-keys.js ***!
  \*********************************************/
/***/ (function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');


/***/ }),
/* 41 */
/*!*******************************************!*\
  !*** ./~/core-js/modules/_object-gops.js ***!
  \*******************************************/
/***/ (function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;


/***/ }),
/* 42 */
/*!******************************************!*\
  !*** ./~/core-js/modules/_object-pie.js ***!
  \******************************************/
/***/ (function(module, exports) {

	exports.f = {}.propertyIsEnumerable;


/***/ }),
/* 43 */
/*!*****************************************!*\
  !*** ./~/core-js/modules/_to-object.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(/*! ./_defined */ 33);
	module.exports = function (it) {
	  return Object(defined(it));
	};


/***/ }),
/* 44 */
/*!*********************************!*\
  !*** ./~/core-js/fn/promise.js ***!
  \*********************************/
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(/*! ../modules/es6.object.to-string */ 45);
	__webpack_require__(/*! ../modules/es6.string.iterator */ 48);
	__webpack_require__(/*! ../modules/web.dom.iterable */ 59);
	__webpack_require__(/*! ../modules/es6.promise */ 63);
	__webpack_require__(/*! ../modules/es7.promise.finally */ 79);
	__webpack_require__(/*! ../modules/es7.promise.try */ 80);
	module.exports = __webpack_require__(/*! ../modules/_core */ 11).Promise;


/***/ }),
/* 45 */
/*!***************************************************!*\
  !*** ./~/core-js/modules/es6.object.to-string.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.3.6 Object.prototype.toString()
	var classof = __webpack_require__(/*! ./_classof */ 46);
	var test = {};
	test[__webpack_require__(/*! ./_wks */ 47)('toStringTag')] = 'z';
	if (test + '' != '[object z]') {
	  __webpack_require__(/*! ./_redefine */ 22)(Object.prototype, 'toString', function toString() {
	    return '[object ' + classof(this) + ']';
	  }, true);
	}


/***/ }),
/* 46 */
/*!***************************************!*\
  !*** ./~/core-js/modules/_classof.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(/*! ./_cof */ 32);
	var TAG = __webpack_require__(/*! ./_wks */ 47)('toStringTag');
	// ES3 wrong here
	var ARG = cof(function () { return arguments; }()) == 'Arguments';
	
	// fallback for IE11 Script Access Denied error
	var tryGet = function (it, key) {
	  try {
	    return it[key];
	  } catch (e) { /* empty */ }
	};
	
	module.exports = function (it) {
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};


/***/ }),
/* 47 */
/*!***********************************!*\
  !*** ./~/core-js/modules/_wks.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

	var store = __webpack_require__(/*! ./_shared */ 39)('wks');
	var uid = __webpack_require__(/*! ./_uid */ 24);
	var Symbol = __webpack_require__(/*! ./_global */ 10).Symbol;
	var USE_SYMBOL = typeof Symbol == 'function';
	
	var $exports = module.exports = function (name) {
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};
	
	$exports.store = store;


/***/ }),
/* 48 */
/*!**************************************************!*\
  !*** ./~/core-js/modules/es6.string.iterator.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var $at = __webpack_require__(/*! ./_string-at */ 49)(true);
	
	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(/*! ./_iter-define */ 50)(String, 'String', function (iterated) {
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function () {
	  var O = this._t;
	  var index = this._i;
	  var point;
	  if (index >= O.length) return { value: undefined, done: true };
	  point = $at(O, index);
	  this._i += point.length;
	  return { value: point, done: false };
	});


/***/ }),
/* 49 */
/*!*****************************************!*\
  !*** ./~/core-js/modules/_string-at.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(/*! ./_to-integer */ 36);
	var defined = __webpack_require__(/*! ./_defined */ 33);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function (TO_STRING) {
	  return function (that, pos) {
	    var s = String(defined(that));
	    var i = toInteger(pos);
	    var l = s.length;
	    var a, b;
	    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};


/***/ }),
/* 50 */
/*!*******************************************!*\
  !*** ./~/core-js/modules/_iter-define.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY = __webpack_require__(/*! ./_library */ 51);
	var $export = __webpack_require__(/*! ./_export */ 9);
	var redefine = __webpack_require__(/*! ./_redefine */ 22);
	var hide = __webpack_require__(/*! ./_hide */ 12);
	var has = __webpack_require__(/*! ./_has */ 23);
	var Iterators = __webpack_require__(/*! ./_iterators */ 52);
	var $iterCreate = __webpack_require__(/*! ./_iter-create */ 53);
	var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ 57);
	var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ 58);
	var ITERATOR = __webpack_require__(/*! ./_wks */ 47)('iterator');
	var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
	var FF_ITERATOR = '@@iterator';
	var KEYS = 'keys';
	var VALUES = 'values';
	
	var returnThis = function () { return this; };
	
	module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function (kind) {
	    if (!BUGGY && kind in proto) return proto[kind];
	    switch (kind) {
	      case KEYS: return function keys() { return new Constructor(this, kind); };
	      case VALUES: return function values() { return new Constructor(this, kind); };
	    } return function entries() { return new Constructor(this, kind); };
	  };
	  var TAG = NAME + ' Iterator';
	  var DEF_VALUES = DEFAULT == VALUES;
	  var VALUES_BUG = false;
	  var proto = Base.prototype;
	  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
	  var $default = $native || getMethod(DEFAULT);
	  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
	  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
	  var methods, key, IteratorPrototype;
	  // Fix native
	  if ($anyNative) {
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
	    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if (DEF_VALUES && $native && $native.name !== VALUES) {
	    VALUES_BUG = true;
	    $default = function values() { return $native.call(this); };
	  }
	  // Define iterator
	  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG] = returnThis;
	  if (DEFAULT) {
	    methods = {
	      values: DEF_VALUES ? $default : getMethod(VALUES),
	      keys: IS_SET ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if (FORCED) for (key in methods) {
	      if (!(key in proto)) redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};


/***/ }),
/* 51 */
/*!***************************************!*\
  !*** ./~/core-js/modules/_library.js ***!
  \***************************************/
/***/ (function(module, exports) {

	module.exports = false;


/***/ }),
/* 52 */
/*!*****************************************!*\
  !*** ./~/core-js/modules/_iterators.js ***!
  \*****************************************/
/***/ (function(module, exports) {

	module.exports = {};


/***/ }),
/* 53 */
/*!*******************************************!*\
  !*** ./~/core-js/modules/_iter-create.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var create = __webpack_require__(/*! ./_object-create */ 54);
	var descriptor = __webpack_require__(/*! ./_property-desc */ 21);
	var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ 57);
	var IteratorPrototype = {};
	
	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(/*! ./_hide */ 12)(IteratorPrototype, __webpack_require__(/*! ./_wks */ 47)('iterator'), function () { return this; });
	
	module.exports = function (Constructor, NAME, next) {
	  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
	  setToStringTag(Constructor, NAME + ' Iterator');
	};


/***/ }),
/* 54 */
/*!*********************************************!*\
  !*** ./~/core-js/modules/_object-create.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject = __webpack_require__(/*! ./_an-object */ 14);
	var dPs = __webpack_require__(/*! ./_object-dps */ 55);
	var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ 40);
	var IE_PROTO = __webpack_require__(/*! ./_shared-key */ 38)('IE_PROTO');
	var Empty = function () { /* empty */ };
	var PROTOTYPE = 'prototype';
	
	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function () {
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(/*! ./_dom-create */ 19)('iframe');
	  var i = enumBugKeys.length;
	  var lt = '<';
	  var gt = '>';
	  var iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(/*! ./_html */ 56).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};
	
	module.exports = Object.create || function create(O, Properties) {
	  var result;
	  if (O !== null) {
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty();
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};


/***/ }),
/* 55 */
/*!******************************************!*\
  !*** ./~/core-js/modules/_object-dps.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	var dP = __webpack_require__(/*! ./_object-dp */ 13);
	var anObject = __webpack_require__(/*! ./_an-object */ 14);
	var getKeys = __webpack_require__(/*! ./_object-keys */ 28);
	
	module.exports = __webpack_require__(/*! ./_descriptors */ 17) ? Object.defineProperties : function defineProperties(O, Properties) {
	  anObject(O);
	  var keys = getKeys(Properties);
	  var length = keys.length;
	  var i = 0;
	  var P;
	  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};


/***/ }),
/* 56 */
/*!************************************!*\
  !*** ./~/core-js/modules/_html.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

	var document = __webpack_require__(/*! ./_global */ 10).document;
	module.exports = document && document.documentElement;


/***/ }),
/* 57 */
/*!*************************************************!*\
  !*** ./~/core-js/modules/_set-to-string-tag.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

	var def = __webpack_require__(/*! ./_object-dp */ 13).f;
	var has = __webpack_require__(/*! ./_has */ 23);
	var TAG = __webpack_require__(/*! ./_wks */ 47)('toStringTag');
	
	module.exports = function (it, tag, stat) {
	  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
	};


/***/ }),
/* 58 */
/*!******************************************!*\
  !*** ./~/core-js/modules/_object-gpo.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has = __webpack_require__(/*! ./_has */ 23);
	var toObject = __webpack_require__(/*! ./_to-object */ 43);
	var IE_PROTO = __webpack_require__(/*! ./_shared-key */ 38)('IE_PROTO');
	var ObjectProto = Object.prototype;
	
	module.exports = Object.getPrototypeOf || function (O) {
	  O = toObject(O);
	  if (has(O, IE_PROTO)) return O[IE_PROTO];
	  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};


/***/ }),
/* 59 */
/*!***********************************************!*\
  !*** ./~/core-js/modules/web.dom.iterable.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

	var $iterators = __webpack_require__(/*! ./es6.array.iterator */ 60);
	var getKeys = __webpack_require__(/*! ./_object-keys */ 28);
	var redefine = __webpack_require__(/*! ./_redefine */ 22);
	var global = __webpack_require__(/*! ./_global */ 10);
	var hide = __webpack_require__(/*! ./_hide */ 12);
	var Iterators = __webpack_require__(/*! ./_iterators */ 52);
	var wks = __webpack_require__(/*! ./_wks */ 47);
	var ITERATOR = wks('iterator');
	var TO_STRING_TAG = wks('toStringTag');
	var ArrayValues = Iterators.Array;
	
	var DOMIterables = {
	  CSSRuleList: true, // TODO: Not spec compliant, should be false.
	  CSSStyleDeclaration: false,
	  CSSValueList: false,
	  ClientRectList: false,
	  DOMRectList: false,
	  DOMStringList: false,
	  DOMTokenList: true,
	  DataTransferItemList: false,
	  FileList: false,
	  HTMLAllCollection: false,
	  HTMLCollection: false,
	  HTMLFormElement: false,
	  HTMLSelectElement: false,
	  MediaList: true, // TODO: Not spec compliant, should be false.
	  MimeTypeArray: false,
	  NamedNodeMap: false,
	  NodeList: true,
	  PaintRequestList: false,
	  Plugin: false,
	  PluginArray: false,
	  SVGLengthList: false,
	  SVGNumberList: false,
	  SVGPathSegList: false,
	  SVGPointList: false,
	  SVGStringList: false,
	  SVGTransformList: false,
	  SourceBufferList: false,
	  StyleSheetList: true, // TODO: Not spec compliant, should be false.
	  TextTrackCueList: false,
	  TextTrackList: false,
	  TouchList: false
	};
	
	for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
	  var NAME = collections[i];
	  var explicit = DOMIterables[NAME];
	  var Collection = global[NAME];
	  var proto = Collection && Collection.prototype;
	  var key;
	  if (proto) {
	    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
	    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
	    Iterators[NAME] = ArrayValues;
	    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
	  }
	}


/***/ }),
/* 60 */
/*!*************************************************!*\
  !*** ./~/core-js/modules/es6.array.iterator.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(/*! ./_add-to-unscopables */ 61);
	var step = __webpack_require__(/*! ./_iter-step */ 62);
	var Iterators = __webpack_require__(/*! ./_iterators */ 52);
	var toIObject = __webpack_require__(/*! ./_to-iobject */ 30);
	
	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(/*! ./_iter-define */ 50)(Array, 'Array', function (iterated, kind) {
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function () {
	  var O = this._t;
	  var kind = this._k;
	  var index = this._i++;
	  if (!O || index >= O.length) {
	    this._t = undefined;
	    return step(1);
	  }
	  if (kind == 'keys') return step(0, index);
	  if (kind == 'values') return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');
	
	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;
	
	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');


/***/ }),
/* 61 */
/*!**************************************************!*\
  !*** ./~/core-js/modules/_add-to-unscopables.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// 22.1.3.31 Array.prototype[@@unscopables]
	var UNSCOPABLES = __webpack_require__(/*! ./_wks */ 47)('unscopables');
	var ArrayProto = Array.prototype;
	if (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__(/*! ./_hide */ 12)(ArrayProto, UNSCOPABLES, {});
	module.exports = function (key) {
	  ArrayProto[UNSCOPABLES][key] = true;
	};


/***/ }),
/* 62 */
/*!*****************************************!*\
  !*** ./~/core-js/modules/_iter-step.js ***!
  \*****************************************/
/***/ (function(module, exports) {

	module.exports = function (done, value) {
	  return { value: value, done: !!done };
	};


/***/ }),
/* 63 */
/*!******************************************!*\
  !*** ./~/core-js/modules/es6.promise.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY = __webpack_require__(/*! ./_library */ 51);
	var global = __webpack_require__(/*! ./_global */ 10);
	var ctx = __webpack_require__(/*! ./_ctx */ 25);
	var classof = __webpack_require__(/*! ./_classof */ 46);
	var $export = __webpack_require__(/*! ./_export */ 9);
	var isObject = __webpack_require__(/*! ./_is-object */ 15);
	var aFunction = __webpack_require__(/*! ./_a-function */ 26);
	var anInstance = __webpack_require__(/*! ./_an-instance */ 64);
	var forOf = __webpack_require__(/*! ./_for-of */ 65);
	var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ 69);
	var task = __webpack_require__(/*! ./_task */ 70).set;
	var microtask = __webpack_require__(/*! ./_microtask */ 72)();
	var newPromiseCapabilityModule = __webpack_require__(/*! ./_new-promise-capability */ 73);
	var perform = __webpack_require__(/*! ./_perform */ 74);
	var promiseResolve = __webpack_require__(/*! ./_promise-resolve */ 75);
	var PROMISE = 'Promise';
	var TypeError = global.TypeError;
	var process = global.process;
	var $Promise = global[PROMISE];
	var isNode = classof(process) == 'process';
	var empty = function () { /* empty */ };
	var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
	var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;
	
	var USE_NATIVE = !!function () {
	  try {
	    // correct subclassing with @@species support
	    var promise = $Promise.resolve(1);
	    var FakePromise = (promise.constructor = {})[__webpack_require__(/*! ./_wks */ 47)('species')] = function (exec) {
	      exec(empty, empty);
	    };
	    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
	    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
	  } catch (e) { /* empty */ }
	}();
	
	// helpers
	var isThenable = function (it) {
	  var then;
	  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
	};
	var notify = function (promise, isReject) {
	  if (promise._n) return;
	  promise._n = true;
	  var chain = promise._c;
	  microtask(function () {
	    var value = promise._v;
	    var ok = promise._s == 1;
	    var i = 0;
	    var run = function (reaction) {
	      var handler = ok ? reaction.ok : reaction.fail;
	      var resolve = reaction.resolve;
	      var reject = reaction.reject;
	      var domain = reaction.domain;
	      var result, then;
	      try {
	        if (handler) {
	          if (!ok) {
	            if (promise._h == 2) onHandleUnhandled(promise);
	            promise._h = 1;
	          }
	          if (handler === true) result = value;
	          else {
	            if (domain) domain.enter();
	            result = handler(value);
	            if (domain) domain.exit();
	          }
	          if (result === reaction.promise) {
	            reject(TypeError('Promise-chain cycle'));
	          } else if (then = isThenable(result)) {
	            then.call(result, resolve, reject);
	          } else resolve(result);
	        } else reject(value);
	      } catch (e) {
	        reject(e);
	      }
	    };
	    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
	    promise._c = [];
	    promise._n = false;
	    if (isReject && !promise._h) onUnhandled(promise);
	  });
	};
	var onUnhandled = function (promise) {
	  task.call(global, function () {
	    var value = promise._v;
	    var unhandled = isUnhandled(promise);
	    var result, handler, console;
	    if (unhandled) {
	      result = perform(function () {
	        if (isNode) {
	          process.emit('unhandledRejection', value, promise);
	        } else if (handler = global.onunhandledrejection) {
	          handler({ promise: promise, reason: value });
	        } else if ((console = global.console) && console.error) {
	          console.error('Unhandled promise rejection', value);
	        }
	      });
	      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
	      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
	    } promise._a = undefined;
	    if (unhandled && result.e) throw result.v;
	  });
	};
	var isUnhandled = function (promise) {
	  if (promise._h == 1) return false;
	  var chain = promise._a || promise._c;
	  var i = 0;
	  var reaction;
	  while (chain.length > i) {
	    reaction = chain[i++];
	    if (reaction.fail || !isUnhandled(reaction.promise)) return false;
	  } return true;
	};
	var onHandleUnhandled = function (promise) {
	  task.call(global, function () {
	    var handler;
	    if (isNode) {
	      process.emit('rejectionHandled', promise);
	    } else if (handler = global.onrejectionhandled) {
	      handler({ promise: promise, reason: promise._v });
	    }
	  });
	};
	var $reject = function (value) {
	  var promise = this;
	  if (promise._d) return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  promise._v = value;
	  promise._s = 2;
	  if (!promise._a) promise._a = promise._c.slice();
	  notify(promise, true);
	};
	var $resolve = function (value) {
	  var promise = this;
	  var then;
	  if (promise._d) return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  try {
	    if (promise === value) throw TypeError("Promise can't be resolved itself");
	    if (then = isThenable(value)) {
	      microtask(function () {
	        var wrapper = { _w: promise, _d: false }; // wrap
	        try {
	          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
	        } catch (e) {
	          $reject.call(wrapper, e);
	        }
	      });
	    } else {
	      promise._v = value;
	      promise._s = 1;
	      notify(promise, false);
	    }
	  } catch (e) {
	    $reject.call({ _w: promise, _d: false }, e); // wrap
	  }
	};
	
	// constructor polyfill
	if (!USE_NATIVE) {
	  // 25.4.3.1 Promise(executor)
	  $Promise = function Promise(executor) {
	    anInstance(this, $Promise, PROMISE, '_h');
	    aFunction(executor);
	    Internal.call(this);
	    try {
	      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
	    } catch (err) {
	      $reject.call(this, err);
	    }
	  };
	  // eslint-disable-next-line no-unused-vars
	  Internal = function Promise(executor) {
	    this._c = [];             // <- awaiting reactions
	    this._a = undefined;      // <- checked in isUnhandled reactions
	    this._s = 0;              // <- state
	    this._d = false;          // <- done
	    this._v = undefined;      // <- value
	    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
	    this._n = false;          // <- notify
	  };
	  Internal.prototype = __webpack_require__(/*! ./_redefine-all */ 76)($Promise.prototype, {
	    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
	    then: function then(onFulfilled, onRejected) {
	      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
	      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
	      reaction.fail = typeof onRejected == 'function' && onRejected;
	      reaction.domain = isNode ? process.domain : undefined;
	      this._c.push(reaction);
	      if (this._a) this._a.push(reaction);
	      if (this._s) notify(this, false);
	      return reaction.promise;
	    },
	    // 25.4.5.1 Promise.prototype.catch(onRejected)
	    'catch': function (onRejected) {
	      return this.then(undefined, onRejected);
	    }
	  });
	  OwnPromiseCapability = function () {
	    var promise = new Internal();
	    this.promise = promise;
	    this.resolve = ctx($resolve, promise, 1);
	    this.reject = ctx($reject, promise, 1);
	  };
	  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
	    return C === $Promise || C === Wrapper
	      ? new OwnPromiseCapability(C)
	      : newGenericPromiseCapability(C);
	  };
	}
	
	$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
	__webpack_require__(/*! ./_set-to-string-tag */ 57)($Promise, PROMISE);
	__webpack_require__(/*! ./_set-species */ 77)(PROMISE);
	Wrapper = __webpack_require__(/*! ./_core */ 11)[PROMISE];
	
	// statics
	$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
	  // 25.4.4.5 Promise.reject(r)
	  reject: function reject(r) {
	    var capability = newPromiseCapability(this);
	    var $$reject = capability.reject;
	    $$reject(r);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
	  // 25.4.4.6 Promise.resolve(x)
	  resolve: function resolve(x) {
	    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
	  }
	});
	$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(/*! ./_iter-detect */ 78)(function (iter) {
	  $Promise.all(iter)['catch'](empty);
	})), PROMISE, {
	  // 25.4.4.1 Promise.all(iterable)
	  all: function all(iterable) {
	    var C = this;
	    var capability = newPromiseCapability(C);
	    var resolve = capability.resolve;
	    var reject = capability.reject;
	    var result = perform(function () {
	      var values = [];
	      var index = 0;
	      var remaining = 1;
	      forOf(iterable, false, function (promise) {
	        var $index = index++;
	        var alreadyCalled = false;
	        values.push(undefined);
	        remaining++;
	        C.resolve(promise).then(function (value) {
	          if (alreadyCalled) return;
	          alreadyCalled = true;
	          values[$index] = value;
	          --remaining || resolve(values);
	        }, reject);
	      });
	      --remaining || resolve(values);
	    });
	    if (result.e) reject(result.v);
	    return capability.promise;
	  },
	  // 25.4.4.4 Promise.race(iterable)
	  race: function race(iterable) {
	    var C = this;
	    var capability = newPromiseCapability(C);
	    var reject = capability.reject;
	    var result = perform(function () {
	      forOf(iterable, false, function (promise) {
	        C.resolve(promise).then(capability.resolve, reject);
	      });
	    });
	    if (result.e) reject(result.v);
	    return capability.promise;
	  }
	});


/***/ }),
/* 64 */
/*!*******************************************!*\
  !*** ./~/core-js/modules/_an-instance.js ***!
  \*******************************************/
/***/ (function(module, exports) {

	module.exports = function (it, Constructor, name, forbiddenField) {
	  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
	    throw TypeError(name + ': incorrect invocation!');
	  } return it;
	};


/***/ }),
/* 65 */
/*!**************************************!*\
  !*** ./~/core-js/modules/_for-of.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

	var ctx = __webpack_require__(/*! ./_ctx */ 25);
	var call = __webpack_require__(/*! ./_iter-call */ 66);
	var isArrayIter = __webpack_require__(/*! ./_is-array-iter */ 67);
	var anObject = __webpack_require__(/*! ./_an-object */ 14);
	var toLength = __webpack_require__(/*! ./_to-length */ 35);
	var getIterFn = __webpack_require__(/*! ./core.get-iterator-method */ 68);
	var BREAK = {};
	var RETURN = {};
	var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
	  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
	  var f = ctx(fn, that, entries ? 2 : 1);
	  var index = 0;
	  var length, step, iterator, result;
	  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
	  // fast case for arrays with default iterator
	  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
	    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
	    if (result === BREAK || result === RETURN) return result;
	  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
	    result = call(iterator, f, step.value, entries);
	    if (result === BREAK || result === RETURN) return result;
	  }
	};
	exports.BREAK = BREAK;
	exports.RETURN = RETURN;


/***/ }),
/* 66 */
/*!*****************************************!*\
  !*** ./~/core-js/modules/_iter-call.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// call something on iterator step with safe closing on error
	var anObject = __webpack_require__(/*! ./_an-object */ 14);
	module.exports = function (iterator, fn, value, entries) {
	  try {
	    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
	  // 7.4.6 IteratorClose(iterator, completion)
	  } catch (e) {
	    var ret = iterator['return'];
	    if (ret !== undefined) anObject(ret.call(iterator));
	    throw e;
	  }
	};


/***/ }),
/* 67 */
/*!*********************************************!*\
  !*** ./~/core-js/modules/_is-array-iter.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// check on default Array iterator
	var Iterators = __webpack_require__(/*! ./_iterators */ 52);
	var ITERATOR = __webpack_require__(/*! ./_wks */ 47)('iterator');
	var ArrayProto = Array.prototype;
	
	module.exports = function (it) {
	  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
	};


/***/ }),
/* 68 */
/*!*******************************************************!*\
  !*** ./~/core-js/modules/core.get-iterator-method.js ***!
  \*******************************************************/
/***/ (function(module, exports, __webpack_require__) {

	var classof = __webpack_require__(/*! ./_classof */ 46);
	var ITERATOR = __webpack_require__(/*! ./_wks */ 47)('iterator');
	var Iterators = __webpack_require__(/*! ./_iterators */ 52);
	module.exports = __webpack_require__(/*! ./_core */ 11).getIteratorMethod = function (it) {
	  if (it != undefined) return it[ITERATOR]
	    || it['@@iterator']
	    || Iterators[classof(it)];
	};


/***/ }),
/* 69 */
/*!***************************************************!*\
  !*** ./~/core-js/modules/_species-constructor.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// 7.3.20 SpeciesConstructor(O, defaultConstructor)
	var anObject = __webpack_require__(/*! ./_an-object */ 14);
	var aFunction = __webpack_require__(/*! ./_a-function */ 26);
	var SPECIES = __webpack_require__(/*! ./_wks */ 47)('species');
	module.exports = function (O, D) {
	  var C = anObject(O).constructor;
	  var S;
	  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
	};


/***/ }),
/* 70 */
/*!************************************!*\
  !*** ./~/core-js/modules/_task.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

	var ctx = __webpack_require__(/*! ./_ctx */ 25);
	var invoke = __webpack_require__(/*! ./_invoke */ 71);
	var html = __webpack_require__(/*! ./_html */ 56);
	var cel = __webpack_require__(/*! ./_dom-create */ 19);
	var global = __webpack_require__(/*! ./_global */ 10);
	var process = global.process;
	var setTask = global.setImmediate;
	var clearTask = global.clearImmediate;
	var MessageChannel = global.MessageChannel;
	var Dispatch = global.Dispatch;
	var counter = 0;
	var queue = {};
	var ONREADYSTATECHANGE = 'onreadystatechange';
	var defer, channel, port;
	var run = function () {
	  var id = +this;
	  // eslint-disable-next-line no-prototype-builtins
	  if (queue.hasOwnProperty(id)) {
	    var fn = queue[id];
	    delete queue[id];
	    fn();
	  }
	};
	var listener = function (event) {
	  run.call(event.data);
	};
	// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
	if (!setTask || !clearTask) {
	  setTask = function setImmediate(fn) {
	    var args = [];
	    var i = 1;
	    while (arguments.length > i) args.push(arguments[i++]);
	    queue[++counter] = function () {
	      // eslint-disable-next-line no-new-func
	      invoke(typeof fn == 'function' ? fn : Function(fn), args);
	    };
	    defer(counter);
	    return counter;
	  };
	  clearTask = function clearImmediate(id) {
	    delete queue[id];
	  };
	  // Node.js 0.8-
	  if (__webpack_require__(/*! ./_cof */ 32)(process) == 'process') {
	    defer = function (id) {
	      process.nextTick(ctx(run, id, 1));
	    };
	  // Sphere (JS game engine) Dispatch API
	  } else if (Dispatch && Dispatch.now) {
	    defer = function (id) {
	      Dispatch.now(ctx(run, id, 1));
	    };
	  // Browsers with MessageChannel, includes WebWorkers
	  } else if (MessageChannel) {
	    channel = new MessageChannel();
	    port = channel.port2;
	    channel.port1.onmessage = listener;
	    defer = ctx(port.postMessage, port, 1);
	  // Browsers with postMessage, skip WebWorkers
	  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
	  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
	    defer = function (id) {
	      global.postMessage(id + '', '*');
	    };
	    global.addEventListener('message', listener, false);
	  // IE8-
	  } else if (ONREADYSTATECHANGE in cel('script')) {
	    defer = function (id) {
	      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
	        html.removeChild(this);
	        run.call(id);
	      };
	    };
	  // Rest old browsers
	  } else {
	    defer = function (id) {
	      setTimeout(ctx(run, id, 1), 0);
	    };
	  }
	}
	module.exports = {
	  set: setTask,
	  clear: clearTask
	};


/***/ }),
/* 71 */
/*!**************************************!*\
  !*** ./~/core-js/modules/_invoke.js ***!
  \**************************************/
/***/ (function(module, exports) {

	// fast apply, http://jsperf.lnkit.com/fast-apply/5
	module.exports = function (fn, args, that) {
	  var un = that === undefined;
	  switch (args.length) {
	    case 0: return un ? fn()
	                      : fn.call(that);
	    case 1: return un ? fn(args[0])
	                      : fn.call(that, args[0]);
	    case 2: return un ? fn(args[0], args[1])
	                      : fn.call(that, args[0], args[1]);
	    case 3: return un ? fn(args[0], args[1], args[2])
	                      : fn.call(that, args[0], args[1], args[2]);
	    case 4: return un ? fn(args[0], args[1], args[2], args[3])
	                      : fn.call(that, args[0], args[1], args[2], args[3]);
	  } return fn.apply(that, args);
	};


/***/ }),
/* 72 */
/*!*****************************************!*\
  !*** ./~/core-js/modules/_microtask.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(/*! ./_global */ 10);
	var macrotask = __webpack_require__(/*! ./_task */ 70).set;
	var Observer = global.MutationObserver || global.WebKitMutationObserver;
	var process = global.process;
	var Promise = global.Promise;
	var isNode = __webpack_require__(/*! ./_cof */ 32)(process) == 'process';
	
	module.exports = function () {
	  var head, last, notify;
	
	  var flush = function () {
	    var parent, fn;
	    if (isNode && (parent = process.domain)) parent.exit();
	    while (head) {
	      fn = head.fn;
	      head = head.next;
	      try {
	        fn();
	      } catch (e) {
	        if (head) notify();
	        else last = undefined;
	        throw e;
	      }
	    } last = undefined;
	    if (parent) parent.enter();
	  };
	
	  // Node.js
	  if (isNode) {
	    notify = function () {
	      process.nextTick(flush);
	    };
	  // browsers with MutationObserver
	  } else if (Observer) {
	    var toggle = true;
	    var node = document.createTextNode('');
	    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
	    notify = function () {
	      node.data = toggle = !toggle;
	    };
	  // environments with maybe non-completely correct, but existent Promise
	  } else if (Promise && Promise.resolve) {
	    var promise = Promise.resolve();
	    notify = function () {
	      promise.then(flush);
	    };
	  // for other environments - macrotask based on:
	  // - setImmediate
	  // - MessageChannel
	  // - window.postMessag
	  // - onreadystatechange
	  // - setTimeout
	  } else {
	    notify = function () {
	      // strange IE + webpack dev server bug - use .call(global)
	      macrotask.call(global, flush);
	    };
	  }
	
	  return function (fn) {
	    var task = { fn: fn, next: undefined };
	    if (last) last.next = task;
	    if (!head) {
	      head = task;
	      notify();
	    } last = task;
	  };
	};


/***/ }),
/* 73 */
/*!******************************************************!*\
  !*** ./~/core-js/modules/_new-promise-capability.js ***!
  \******************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	// 25.4.1.5 NewPromiseCapability(C)
	var aFunction = __webpack_require__(/*! ./_a-function */ 26);
	
	function PromiseCapability(C) {
	  var resolve, reject;
	  this.promise = new C(function ($$resolve, $$reject) {
	    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
	    resolve = $$resolve;
	    reject = $$reject;
	  });
	  this.resolve = aFunction(resolve);
	  this.reject = aFunction(reject);
	}
	
	module.exports.f = function (C) {
	  return new PromiseCapability(C);
	};


/***/ }),
/* 74 */
/*!***************************************!*\
  !*** ./~/core-js/modules/_perform.js ***!
  \***************************************/
/***/ (function(module, exports) {

	module.exports = function (exec) {
	  try {
	    return { e: false, v: exec() };
	  } catch (e) {
	    return { e: true, v: e };
	  }
	};


/***/ }),
/* 75 */
/*!***********************************************!*\
  !*** ./~/core-js/modules/_promise-resolve.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

	var anObject = __webpack_require__(/*! ./_an-object */ 14);
	var isObject = __webpack_require__(/*! ./_is-object */ 15);
	var newPromiseCapability = __webpack_require__(/*! ./_new-promise-capability */ 73);
	
	module.exports = function (C, x) {
	  anObject(C);
	  if (isObject(x) && x.constructor === C) return x;
	  var promiseCapability = newPromiseCapability.f(C);
	  var resolve = promiseCapability.resolve;
	  resolve(x);
	  return promiseCapability.promise;
	};


/***/ }),
/* 76 */
/*!********************************************!*\
  !*** ./~/core-js/modules/_redefine-all.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

	var redefine = __webpack_require__(/*! ./_redefine */ 22);
	module.exports = function (target, src, safe) {
	  for (var key in src) redefine(target, key, src[key], safe);
	  return target;
	};


/***/ }),
/* 77 */
/*!*******************************************!*\
  !*** ./~/core-js/modules/_set-species.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var global = __webpack_require__(/*! ./_global */ 10);
	var dP = __webpack_require__(/*! ./_object-dp */ 13);
	var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ 17);
	var SPECIES = __webpack_require__(/*! ./_wks */ 47)('species');
	
	module.exports = function (KEY) {
	  var C = global[KEY];
	  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
	    configurable: true,
	    get: function () { return this; }
	  });
	};


/***/ }),
/* 78 */
/*!*******************************************!*\
  !*** ./~/core-js/modules/_iter-detect.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	var ITERATOR = __webpack_require__(/*! ./_wks */ 47)('iterator');
	var SAFE_CLOSING = false;
	
	try {
	  var riter = [7][ITERATOR]();
	  riter['return'] = function () { SAFE_CLOSING = true; };
	  // eslint-disable-next-line no-throw-literal
	  Array.from(riter, function () { throw 2; });
	} catch (e) { /* empty */ }
	
	module.exports = function (exec, skipClosing) {
	  if (!skipClosing && !SAFE_CLOSING) return false;
	  var safe = false;
	  try {
	    var arr = [7];
	    var iter = arr[ITERATOR]();
	    iter.next = function () { return { done: safe = true }; };
	    arr[ITERATOR] = function () { return iter; };
	    exec(arr);
	  } catch (e) { /* empty */ }
	  return safe;
	};


/***/ }),
/* 79 */
/*!**************************************************!*\
  !*** ./~/core-js/modules/es7.promise.finally.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-promise-finally
	'use strict';
	var $export = __webpack_require__(/*! ./_export */ 9);
	var core = __webpack_require__(/*! ./_core */ 11);
	var global = __webpack_require__(/*! ./_global */ 10);
	var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ 69);
	var promiseResolve = __webpack_require__(/*! ./_promise-resolve */ 75);
	
	$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
	  var C = speciesConstructor(this, core.Promise || global.Promise);
	  var isFunction = typeof onFinally == 'function';
	  return this.then(
	    isFunction ? function (x) {
	      return promiseResolve(C, onFinally()).then(function () { return x; });
	    } : onFinally,
	    isFunction ? function (e) {
	      return promiseResolve(C, onFinally()).then(function () { throw e; });
	    } : onFinally
	  );
	} });


/***/ }),
/* 80 */
/*!**********************************************!*\
  !*** ./~/core-js/modules/es7.promise.try.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/proposal-promise-try
	var $export = __webpack_require__(/*! ./_export */ 9);
	var newPromiseCapability = __webpack_require__(/*! ./_new-promise-capability */ 73);
	var perform = __webpack_require__(/*! ./_perform */ 74);
	
	$export($export.S, 'Promise', { 'try': function (callbackfn) {
	  var promiseCapability = newPromiseCapability.f(this);
	  var result = perform(callbackfn);
	  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
	  return promiseCapability.promise;
	} });


/***/ }),
/* 81 */
/*!**************************************!*\
  !*** ./~/core-js/fn/symbol/index.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(/*! ../../modules/es6.symbol */ 82);
	__webpack_require__(/*! ../../modules/es6.object.to-string */ 45);
	__webpack_require__(/*! ../../modules/es7.symbol.async-iterator */ 91);
	__webpack_require__(/*! ../../modules/es7.symbol.observable */ 92);
	module.exports = __webpack_require__(/*! ../../modules/_core */ 11).Symbol;


/***/ }),
/* 82 */
/*!*****************************************!*\
  !*** ./~/core-js/modules/es6.symbol.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	// ECMAScript 6 symbols shim
	var global = __webpack_require__(/*! ./_global */ 10);
	var has = __webpack_require__(/*! ./_has */ 23);
	var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ 17);
	var $export = __webpack_require__(/*! ./_export */ 9);
	var redefine = __webpack_require__(/*! ./_redefine */ 22);
	var META = __webpack_require__(/*! ./_meta */ 83).KEY;
	var $fails = __webpack_require__(/*! ./_fails */ 18);
	var shared = __webpack_require__(/*! ./_shared */ 39);
	var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ 57);
	var uid = __webpack_require__(/*! ./_uid */ 24);
	var wks = __webpack_require__(/*! ./_wks */ 47);
	var wksExt = __webpack_require__(/*! ./_wks-ext */ 84);
	var wksDefine = __webpack_require__(/*! ./_wks-define */ 85);
	var enumKeys = __webpack_require__(/*! ./_enum-keys */ 86);
	var isArray = __webpack_require__(/*! ./_is-array */ 87);
	var anObject = __webpack_require__(/*! ./_an-object */ 14);
	var toIObject = __webpack_require__(/*! ./_to-iobject */ 30);
	var toPrimitive = __webpack_require__(/*! ./_to-primitive */ 20);
	var createDesc = __webpack_require__(/*! ./_property-desc */ 21);
	var _create = __webpack_require__(/*! ./_object-create */ 54);
	var gOPNExt = __webpack_require__(/*! ./_object-gopn-ext */ 88);
	var $GOPD = __webpack_require__(/*! ./_object-gopd */ 90);
	var $DP = __webpack_require__(/*! ./_object-dp */ 13);
	var $keys = __webpack_require__(/*! ./_object-keys */ 28);
	var gOPD = $GOPD.f;
	var dP = $DP.f;
	var gOPN = gOPNExt.f;
	var $Symbol = global.Symbol;
	var $JSON = global.JSON;
	var _stringify = $JSON && $JSON.stringify;
	var PROTOTYPE = 'prototype';
	var HIDDEN = wks('_hidden');
	var TO_PRIMITIVE = wks('toPrimitive');
	var isEnum = {}.propertyIsEnumerable;
	var SymbolRegistry = shared('symbol-registry');
	var AllSymbols = shared('symbols');
	var OPSymbols = shared('op-symbols');
	var ObjectProto = Object[PROTOTYPE];
	var USE_NATIVE = typeof $Symbol == 'function';
	var QObject = global.QObject;
	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
	
	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function () {
	  return _create(dP({}, 'a', {
	    get: function () { return dP(this, 'a', { value: 7 }).a; }
	  })).a != 7;
	}) ? function (it, key, D) {
	  var protoDesc = gOPD(ObjectProto, key);
	  if (protoDesc) delete ObjectProto[key];
	  dP(it, key, D);
	  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
	} : dP;
	
	var wrap = function (tag) {
	  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
	  sym._k = tag;
	  return sym;
	};
	
	var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
	  return typeof it == 'symbol';
	} : function (it) {
	  return it instanceof $Symbol;
	};
	
	var $defineProperty = function defineProperty(it, key, D) {
	  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
	  anObject(it);
	  key = toPrimitive(key, true);
	  anObject(D);
	  if (has(AllSymbols, key)) {
	    if (!D.enumerable) {
	      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
	      D = _create(D, { enumerable: createDesc(0, false) });
	    } return setSymbolDesc(it, key, D);
	  } return dP(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P) {
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P));
	  var i = 0;
	  var l = keys.length;
	  var key;
	  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P) {
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key) {
	  var E = isEnum.call(this, key = toPrimitive(key, true));
	  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
	  it = toIObject(it);
	  key = toPrimitive(key, true);
	  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
	  var D = gOPD(it, key);
	  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it) {
	  var names = gOPN(toIObject(it));
	  var result = [];
	  var i = 0;
	  var key;
	  while (names.length > i) {
	    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
	  } return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
	  var IS_OP = it === ObjectProto;
	  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
	  var result = [];
	  var i = 0;
	  var key;
	  while (names.length > i) {
	    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
	  } return result;
	};
	
	// 19.4.1.1 Symbol([description])
	if (!USE_NATIVE) {
	  $Symbol = function Symbol() {
	    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
	    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function (value) {
	      if (this === ObjectProto) $set.call(OPSymbols, value);
	      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    };
	    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
	    return wrap(tag);
	  };
	  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
	    return this._k;
	  });
	
	  $GOPD.f = $getOwnPropertyDescriptor;
	  $DP.f = $defineProperty;
	  __webpack_require__(/*! ./_object-gopn */ 89).f = gOPNExt.f = $getOwnPropertyNames;
	  __webpack_require__(/*! ./_object-pie */ 42).f = $propertyIsEnumerable;
	  __webpack_require__(/*! ./_object-gops */ 41).f = $getOwnPropertySymbols;
	
	  if (DESCRIPTORS && !__webpack_require__(/*! ./_library */ 51)) {
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }
	
	  wksExt.f = function (name) {
	    return wrap(wks(name));
	  };
	}
	
	$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });
	
	for (var es6Symbols = (
	  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
	).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);
	
	for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);
	
	$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function (key) {
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(sym) {
	    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
	    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
	  },
	  useSetter: function () { setter = true; },
	  useSimple: function () { setter = false; }
	});
	
	$export($export.S + $export.F * !USE_NATIVE, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});
	
	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it) {
	    if (it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
	    var args = [it];
	    var i = 1;
	    var replacer, $replacer;
	    while (arguments.length > i) args.push(arguments[i++]);
	    replacer = args[1];
	    if (typeof replacer == 'function') $replacer = replacer;
	    if ($replacer || !isArray(replacer)) replacer = function (key, value) {
	      if ($replacer) value = $replacer.call(this, key, value);
	      if (!isSymbol(value)) return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});
	
	// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
	$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(/*! ./_hide */ 12)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);


/***/ }),
/* 83 */
/*!************************************!*\
  !*** ./~/core-js/modules/_meta.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

	var META = __webpack_require__(/*! ./_uid */ 24)('meta');
	var isObject = __webpack_require__(/*! ./_is-object */ 15);
	var has = __webpack_require__(/*! ./_has */ 23);
	var setDesc = __webpack_require__(/*! ./_object-dp */ 13).f;
	var id = 0;
	var isExtensible = Object.isExtensible || function () {
	  return true;
	};
	var FREEZE = !__webpack_require__(/*! ./_fails */ 18)(function () {
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function (it) {
	  setDesc(it, META, { value: {
	    i: 'O' + ++id, // object ID
	    w: {}          // weak collections IDs
	  } });
	};
	var fastKey = function (it, create) {
	  // return primitive with prefix
	  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if (!has(it, META)) {
	    // can't set metadata to uncaught frozen object
	    if (!isExtensible(it)) return 'F';
	    // not necessary to add metadata
	    if (!create) return 'E';
	    // add missing metadata
	    setMeta(it);
	  // return object ID
	  } return it[META].i;
	};
	var getWeak = function (it, create) {
	  if (!has(it, META)) {
	    // can't set metadata to uncaught frozen object
	    if (!isExtensible(it)) return true;
	    // not necessary to add metadata
	    if (!create) return false;
	    // add missing metadata
	    setMeta(it);
	  // return hash weak collections IDs
	  } return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function (it) {
	  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY: META,
	  NEED: false,
	  fastKey: fastKey,
	  getWeak: getWeak,
	  onFreeze: onFreeze
	};


/***/ }),
/* 84 */
/*!***************************************!*\
  !*** ./~/core-js/modules/_wks-ext.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	exports.f = __webpack_require__(/*! ./_wks */ 47);


/***/ }),
/* 85 */
/*!******************************************!*\
  !*** ./~/core-js/modules/_wks-define.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(/*! ./_global */ 10);
	var core = __webpack_require__(/*! ./_core */ 11);
	var LIBRARY = __webpack_require__(/*! ./_library */ 51);
	var wksExt = __webpack_require__(/*! ./_wks-ext */ 84);
	var defineProperty = __webpack_require__(/*! ./_object-dp */ 13).f;
	module.exports = function (name) {
	  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
	  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
	};


/***/ }),
/* 86 */
/*!*****************************************!*\
  !*** ./~/core-js/modules/_enum-keys.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// all enumerable object keys, includes symbols
	var getKeys = __webpack_require__(/*! ./_object-keys */ 28);
	var gOPS = __webpack_require__(/*! ./_object-gops */ 41);
	var pIE = __webpack_require__(/*! ./_object-pie */ 42);
	module.exports = function (it) {
	  var result = getKeys(it);
	  var getSymbols = gOPS.f;
	  if (getSymbols) {
	    var symbols = getSymbols(it);
	    var isEnum = pIE.f;
	    var i = 0;
	    var key;
	    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
	  } return result;
	};


/***/ }),
/* 87 */
/*!****************************************!*\
  !*** ./~/core-js/modules/_is-array.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(/*! ./_cof */ 32);
	module.exports = Array.isArray || function isArray(arg) {
	  return cof(arg) == 'Array';
	};


/***/ }),
/* 88 */
/*!***********************************************!*\
  !*** ./~/core-js/modules/_object-gopn-ext.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(/*! ./_to-iobject */ 30);
	var gOPN = __webpack_require__(/*! ./_object-gopn */ 89).f;
	var toString = {}.toString;
	
	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];
	
	var getWindowNames = function (it) {
	  try {
	    return gOPN(it);
	  } catch (e) {
	    return windowNames.slice();
	  }
	};
	
	module.exports.f = function getOwnPropertyNames(it) {
	  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
	};


/***/ }),
/* 89 */
/*!*******************************************!*\
  !*** ./~/core-js/modules/_object-gopn.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys = __webpack_require__(/*! ./_object-keys-internal */ 29);
	var hiddenKeys = __webpack_require__(/*! ./_enum-bug-keys */ 40).concat('length', 'prototype');
	
	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
	  return $keys(O, hiddenKeys);
	};


/***/ }),
/* 90 */
/*!*******************************************!*\
  !*** ./~/core-js/modules/_object-gopd.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	var pIE = __webpack_require__(/*! ./_object-pie */ 42);
	var createDesc = __webpack_require__(/*! ./_property-desc */ 21);
	var toIObject = __webpack_require__(/*! ./_to-iobject */ 30);
	var toPrimitive = __webpack_require__(/*! ./_to-primitive */ 20);
	var has = __webpack_require__(/*! ./_has */ 23);
	var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ 16);
	var gOPD = Object.getOwnPropertyDescriptor;
	
	exports.f = __webpack_require__(/*! ./_descriptors */ 17) ? gOPD : function getOwnPropertyDescriptor(O, P) {
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if (IE8_DOM_DEFINE) try {
	    return gOPD(O, P);
	  } catch (e) { /* empty */ }
	  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
	};


/***/ }),
/* 91 */
/*!********************************************************!*\
  !*** ./~/core-js/modules/es7.symbol.async-iterator.js ***!
  \********************************************************/
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(/*! ./_wks-define */ 85)('asyncIterator');


/***/ }),
/* 92 */
/*!****************************************************!*\
  !*** ./~/core-js/modules/es7.symbol.observable.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(/*! ./_wks-define */ 85)('observable');


/***/ }),
/* 93 */
/*!***************************************************!*\
  !*** ./public_ufe/js/utils/shims/ObjectValues.js ***!
  \***************************************************/
/***/ (function(module, exports) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	if (!Object.values) {
	    Object.values = function (object) {
	        return object && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' ? Object.keys(object).map(function (key) {
	            return object[key];
	        }) : [];
	    };
	}

/***/ }),
/* 94 */
/*!*********************************************************!*\
  !*** ./public_ufe/js/utils/framework/PriorityLoaded.js ***!
  \*********************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var Events = __webpack_require__(/*! utils/framework/Events */ 95),
	    frameworkActions = __webpack_require__(/*! actions/FrameworkActions */ 96),
	    InflatorComps = __webpack_require__(/*! utils/framework/InflateComponents */ 97),
	    store = __webpack_require__(/*! store/Store */ 146),
	    urlUtils = __webpack_require__(/*! utils/Url */ 2),
	    watch = __webpack_require__(/*! redux-watch */ 187),
	    Perf = __webpack_require__(/*! utils/framework/Perf */ 99);
	
	// Anything that would normally go into DOMContentLoaded related to
	// components functionality should be placed here.
	Events.onLastLoadEvent(window, ['DOMContentLoaded'], function () {
	
	    /** Reposition header on mobile when scrolling **/
	    if (Sephora.isMobile()) {
	        var headerPosition = '',
	            header = document.querySelector('#HeaderMain'),
	            initialOffset = header.offsetParent.offsetTop;
	
	        var updateHeaderPosition = function updateHeaderPosition(newPosition) {
	            if (newPosition !== headerPosition) {
	                header.style.position = newPosition;
	            }
	        };
	        var checkHeaderPosition = function checkHeaderPosition() {
	            var position = window.scrollY > initialOffset ? 'fixed' : 'absolute';
	            updateHeaderPosition(position);
	        };
	
	        var searchWatch = watch(store.getState, 'search');
	        store.subscribe(searchWatch(function (newVal) {
	            if (newVal.isFixed) {
	                header.style.top = window.scrollY;
	            }
	        }));
	
	        checkHeaderPosition();
	        window.addEventListener(Events.DebouncedScroll, checkHeaderPosition);
	    }
	
	    // Add all url params to the store
	    var queryParams = urlUtils.getParams();
	    store.dispatch(frameworkActions.updateQueryParams(queryParams));
	});
	
	// The Immediate event fires once all priority code is loaded but prior to any third party or api
	// dependencies.  Immediate should be used for components that need to potentially re-render ASAP
	// based on information that is available in the initial page load but which might not be correct
	// in the initial server-side render.
	//
	// The prime example of this is product pages, which render on the server (and cached by akamai)
	// generically by product id, but which display differently depending on the skuId url parameter.
	InflatorComps.services.loadEvents.ImmediateReady = true;
	window.dispatchEvent(new CustomEvent(Events.ImmediateReady, { detail: {} }));
	Perf.report('Immediate Ready');
	
	InflatorComps.renderQueue(Events.Immediate);

/***/ }),
/* 95 */
/*!*************************************************!*\
  !*** ./public_ufe/js/utils/framework/Events.js ***!
  \*************************************************/
/***/ (function(module, exports) {

	'use strict';
	
	// jscs:disable maximumLineLength
	// jscs:disable disallowMultipleVarDecl
	
	var DebouncedScroll = 'DebouncedScroll',
	    UserInfoLoaded = 'UserInfoLoaded',
	    UserInfoReady = 'UserInfoReady',
	    DOMContentLoaded = 'DOMContentLoaded',
	    CertonaReady = 'CertonaReady',
	    Immediate = 'Immediate',
	    ImmediateReady = 'ImmediateReady',
	    VisitorAPILoaded = 'VisitorAPILoaded',
	    TestTarget = 'TestTarget',
	    TestTargetReady = 'TestTargetReady',
	    TestTargetLoaded = 'TestTargetLoaded',
	    TestTargetResult = 'TestTargetResult',
	    UserInfoCtrlrsApplied = 'UserInfoCtrlrsApplied',
	    CertonaCtrlrsApplied = 'CertonaCtrlrsApplied',
	    TestTargetCtrlrsApplied = 'TestTargetCtrlrsApplied',
	    InPageCompsCtrlrsApplied = 'InPageCompsCtrlrsApplied',
	    LazyLoadComplete = 'LazyLoadComplete',
	    load = 'load',
	    PostLoad = 'PostLoad',
	    PostLoadCtrlrsApplied = 'PostLoadCtrlrsApplied';
	
	// This function should run immediately the first time its called.
	// It will then run at the specified interval if called again
	// before that interval is up.
	function debounce(func, wait, immediate) {
	    var lastRun,
	        timeout,
	        args,
	        _this,
	        later = function later() {
	        clearTimeout(timeout);
	        timeout = null;
	        lastRun = new Date().getTime();
	        func.apply(_this, args);
	    };
	
	    return function () {
	        /* eslint-disable no-invalid-this */
	        _this = this;
	        args = arguments;
	
	        var sinceLastRun = new Date().getTime() - lastRun;
	        if (sinceLastRun > wait) {
	            later();
	        } else if (!timeout) {
	            timeout = setTimeout(later, wait - sinceLastRun);
	        }
	    };
	}
	
	//TODO: Add debounced window resize
	var debouncedScrollHandler = debounce(function () {
	    window.dispatchEvent(new CustomEvent(DebouncedScroll, { detail: {} }));
	}, 50, true);
	
	window.addEventListener('scroll', debouncedScrollHandler);
	
	var services = window.Sephora.Util.InflatorComps.services;
	
	// const onLast = function (target, events, callback) {
	//     var count = 0;
	//
	//     for (var i = 0; i < events.length; i++) {
	//         target.addEventListener(events[i], function () {
	//             if (++count === events.length) callback();
	//         }, false);
	//     }
	// }
	
	var onLastLoadEvent = function onLastLoadEvent(target, events, callback) {
	
	    var count = 0;
	
	    for (var i = 0; i < events.length; i++) {
	        if (services.loadEvents[events[i]] && ++count === events.length) {
	            callback();
	        } else {
	            target.addEventListener(events[i], function () {
	                if (++count === events.length) {
	                    callback();
	                }
	            }, false);
	        }
	    }
	};
	
	module.exports = {
	    DebouncedScroll: DebouncedScroll,
	    onLastLoadEvent: onLastLoadEvent,
	    UserInfoLoaded: UserInfoLoaded,
	    UserInfoReady: UserInfoReady,
	    DOMContentLoaded: DOMContentLoaded,
	    CertonaReady: CertonaReady,
	    Immediate: Immediate,
	    VisitorAPILoaded: VisitorAPILoaded,
	    TestTarget: TestTarget,
	    TestTargetReady: TestTargetReady,
	    TestTargetLoaded: TestTargetLoaded,
	    TestTargetResult: TestTargetResult,
	    UserInfoCtrlrsApplied: UserInfoCtrlrsApplied,
	    CertonaCtrlrsApplied: CertonaCtrlrsApplied,
	    TestTargetCtrlrsApplied: TestTargetCtrlrsApplied,
	    InPageCompsCtrlrsApplied: InPageCompsCtrlrsApplied,
	    LazyLoadComplete: LazyLoadComplete,
	    load: load,
	    PostLoad: PostLoad,
	    PostLoadCtrlrsApplied: PostLoadCtrlrsApplied
	};

/***/ }),
/* 96 */
/*!***************************************************!*\
  !*** ./public_ufe/js/actions/FrameworkActions.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var urlUtils = __webpack_require__(/*! utils/Url */ 2);
	
	var TYPES = {
	    UPDATE_QUERY_PARAMS: 'UPDATE_QUERY_PARAMS'
	};
	
	/**
	 *
	 * Updates queryparams in both the store and the url
	 *
	 * @param queryParams object of key:[array_of_values]
	 * @param isReplaceState
	 * @returns {{type: string, queryParams: *}}
	 */
	var updateQueryParams = function updateQueryParams(queryParams) {
	    var isReplaceState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
	
	    if (JSON.stringify(urlUtils.getParams()) !== JSON.stringify(queryParams)) {
	        var params = new Map();
	
	        // TODO 17.7: Update url utils so they all use Map and remove this conversion
	        Object.keys(queryParams).forEach(function (key) {
	            params.set(key, queryParams[key]);
	        });
	
	        urlUtils.updateURL(urlUtils.buildQuery(params), '', isReplaceState);
	    }
	
	    return {
	        type: TYPES.UPDATE_QUERY_PARAMS,
	        queryParams: queryParams
	    };
	};
	
	/**
	 *
	 * Update only a single query param
	 *
	 * @param queryParam Key for query param
	 * @param value Array of values or a single value
	 * @param isReplaceState
	 * @returns {{type: string, queryParams: *}}
	 */
	var updateQueryParam = function updateQueryParam(queryParam, value, isReplaceState) {
	    var queryParams = urlUtils.getParams();
	    queryParams[queryParam] = value;
	
	    return updateQueryParams(queryParams, isReplaceState);
	};
	
	module.exports = {
	    TYPES: TYPES,
	    updateQueryParams: updateQueryParams,
	    updateQueryParam: updateQueryParam
	};

/***/ }),
/* 97 */
/*!************************************************************!*\
  !*** ./public_ufe/js/utils/framework/InflateComponents.js ***!
  \************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/*eslint max-len: 0*/
	/*eslint no-param-reassign: 0*/
	/*eslint no-console: 0*/
	
	/* Helper Functions */
	function isFn(obj) {
	    return typeof obj === 'function';
	}
	
	module.exports = function () {
	    'use strict';
	
	    var performance = __webpack_require__(/*! performance-polyfill */ 98);
	    var Perf = __webpack_require__(/*! utils/framework/Perf */ 99);
	
	    var React = __webpack_require__(/*! react */ 100),
	        ReactDOM = __webpack_require__(/*! react-dom */ 100),
	        Comps = {},
	        InflatorComps = Sephora.Util.InflatorComps,
	        isPageClientRendered = false;
	
	    // All Async Loadable Components Should Be Included Here
	    Comps = InflatorComps.Comps = {};
	    var asyncComponents = __webpack_require__(/*! ../../build/asyncList */ 101);
	    Object.assign(Comps, asyncComponents);
	
	    /**
	     * Fires the callback only when all events have been fired
	     * @param target
	     * @param events
	     * @param callback
	     */
	    var services = InflatorComps.services;
	
	    /**
	     * Actually render the component (wraps react)
	     * @param componentClass
	     * @param props
	     * @param element
	     * @returns {*}
	     */
	    InflatorComps.render = function (componentClass, props, element) {
	        var createdReactElement;
	
	        if (typeof componentClass === 'string') {
	            componentClass = Comps[componentClass]();
	        } else {
	            Comps[componentClass.prototype.class] = componentClass;
	        }
	
	        // Mark root components with red border
	        if (false) {
	            element.style.border = '1px solid red';
	        }
	
	        if (typeof props === 'string') {
	            try {
	                props = JSON.parse(props);
	            } catch (e) {
	                console.error(e);
	                return null;
	            }
	        } else {
	            props = props;
	        }
	
	        createdReactElement = React.createElement(componentClass, props);
	        return ReactDOM.render(createdReactElement, element);
	    };
	
	    var fireAppliedEvent = function fireAppliedEvent(service) {
	        Perf.report(service + ' Service Ctrlrs Applied');
	        window.dispatchEvent(new CustomEvent(service + 'CtrlrsApplied', { detail: {} }));
	        services.loadEvents[service + 'CtrlrsApplied'] = true;
	    };
	
	    /**
	     * Called when a service is ready so all dependent components can be rendered
	     * and their controllers applied
	     * @param service
	     */
	    InflatorComps.renderQueue = function (service) {
	        var component;
	
	        Perf.report(service + ' Service AsyncRendering');
	
	        if (services[service] && services[service].queue) {
	            for (var i = 0; i < services[service].queue.length; i++) {
	                services[service].queue[i].instance = InflatorComps.render(services[service].queue[i].class, services[service].queue[i].props, services[service].queue[i].element);
	                Perf.report([services[service].queue[i].class + ' Component Async Rendered', services[service].queue[i].element], false);
	            }
	
	            // InflatorComps.applyCtrlr(services[service].queue, service);
	        }
	        // else {
	        //     console.log(performance.now() + ': No ' + service + ' Ctrlrs - firing applied event immediately');
	        // }
	
	        fireAppliedEvent(service);
	    };
	
	    /* inflate-comps.js is loaded into the front end asyncronusly. The call to
	     * InflatorComps.applyCtrlr below adds the script tag to the DOM.
	     * inflate-comps.js should load before the page has finished parsing. However, if
	     * it doesn't this will be slowing down applying the component controllers to the
	     * components already on the page. This could be a good thing or a bad thing, but basically as long
	     * as there is no noticable delay between a button appearing on the screen and its
	     * click event listener being applied then it shouldn't matter.
	     * If this does become a problem you will need to use webpack to add another entry point
	     * to the dependency management, so that the components already on the page can be
	     * initialized on DOMContentLoaded.
	     */
	    InflatorComps.applyCtrlr = function (components, name) {
	        // Since we don't know at this point if DOMContentLoaded has fired we need to check first
	        // then apply then initialize the controllers apropriatly.
	        if (!Sephora.DOMContentLoadedFired) {
	            window.addEventListener('DOMContentLoaded', function () {
	                InflatorComps.applyCtrlr(components, name);
	            });
	            return;
	        }
	
	        Perf.report(name + ' Applying Ctrlrs');
	
	        var i, compCtrlr;
	
	        if (typeof components === 'string') {
	            var componentDataElementId = components;
	
	            components = null;
	            // Retrieve link JSON data and parse the object
	            var componentsElement = document.body.querySelector('#' + componentDataElementId);
	            if (componentsElement) {
	                components = JSON.parse(componentsElement.innerHTML);
	            }
	
	            if (!components) {
	                return;
	            }
	
	            for (i = 0; i < components.length; i++) {
	                // Comps[components[i].class] = require('../../components/' + components[i].path + '/' + components[i].class + '.r.jsx');
	                components[i].element = document.body.querySelector('[data-sephid="' + components[i].id + '"]');
	
	                // If a page component is marked to be rendered completely in the client
	                if (!isPageClientRendered && components[i].pageClientRender) {
	                    isPageClientRendered = true;
	                }
	            }
	        }
	
	        for (i = 0; i < components.length; i++) {
	            var component = components[i];
	
	            if (component.postload) {
	                InflatorComps.queue(component.class, component.props, 'PostLoad', component.element);
	            } else if (isPageClientRendered) {
	                InflatorComps.queue(component.class, component.props, 'UserInfo', component.element);
	            } else {
	                InflatorComps.render(component.class, component.props, component.element);
	                Perf.report([component.class + ' Ctrlr Applied', component.class + ' was backend rendered, and ctrlr is now applied at: ', component.element], false);
	            }
	        }
	
	        fireAppliedEvent(name);
	    };
	
	    // Initialize page components
	    Perf.report('Add Components Chunk to Page');
	    __webpack_require__.e/* nsure */(1/*! components */, function (require) {
	
	        // ---------------------------------------------------------------------
	        // WHEN WE MOVE FROM HAVING OLAPIC WIDGETS ON LEGACY PAGES (add-photo),
	        // THE BELOW WILL BE PROVIDED ON ALL TARGET PAGES WITH MEANS OF
	        // <OlapicComponent name={componentName} />.
	        // UNTIL THEN, THIS `window.getBeautyBoardUser` SNIPPET STAYS HERE.
	        // THIS IS DUPLICATE CODE FROM components/BeautyBoard/OlapicComponent.
	        // ---------------------------------------------------------------------
	
	        /*eslint-disable camelcase*/
	        window.getBeautyBoardUser = function () {
	            var userUtils = __webpack_require__(/*! utils/User */ 186);
	            return userUtils.validateUserStatus().then(function (user) {
	                if (user) {
	                    var personalInfo = user.beautyInsiderAccount ? userUtils.biPersonalInfoDisplayCleanUp(user.beautyInsiderAccount.personalizedInformation) : {};
	                    var colorIQ = user.beautyInsiderAccount && user.beautyInsiderAccount.skinTones ? user.beautyInsiderAccount.skinTones[0].shadeCode : '';
	                    var beautyBoardUserInfo = {
	                        bi_status: userUtils.getBiStatus(),
	                        email: user.login,
	                        eye_color: personalInfo.eyeColor || '',
	                        first_name: user.firstName,
	                        hair_color: personalInfo.hairColor || '',
	                        hair_concern: personalInfo.hairConcerns || '',
	                        public_id: user.publicId,
	                        last_name: user.lastName,
	                        skin_tone: personalInfo.skinTone || '',
	                        skin_type: personalInfo.skinType || '',
	                        skincare_concerns: personalInfo.skinConcerns || '',
	                        nick_name: user.nickName,
	                        your_hair: personalInfo.hairDescrible || '',
	                        color_iq: colorIQ,
	                        store_id: '',
	                        store_name: '',
	                        store_token: '',
	                        roles: ''
	                    };
	                    return beautyBoardUserInfo;
	                } else {
	                    return Promise.reject();
	                }
	            });
	        };
	
	        var inPageComponents = __webpack_require__(/*! ../../build/inPageList */ 405);
	        Object.assign(Comps, inPageComponents);
	
	        InflatorComps.applyCtrlr('linkJSON', 'InPageComps');
	
	        if (Sephora.isLazyLoadEnabled) {
	            var LazyLoader = __webpack_require__(/*! utils/framework/LazyLoad */ 374);
	            LazyLoader.start();
	        }
	    });
	
	    return InflatorComps;
	}();

/***/ }),
/* 98 */
/*!*********************************************!*\
  !*** ./~/performance-polyfill/src/index.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * User Timing polyfill (http://www.w3.org/TR/user-timing/)
	 * @author RubaXa <trash@rubaxa.org>
	 */
	(function (window){
		var
			  startOffset = Date.now ? Date.now() : +(new Date)
			, performance = window.performance || {}
	
			, _entries = []
			, _marksIndex = {}
	
			, _filterEntries = function (key, value){
				var i = 0, n = _entries.length, result = [];
				for( ; i < n; i++ ){
					if( _entries[i][key] == value ){
						result.push(_entries[i]);
					}
				}
				return	result;
			}
	
			, _clearEntries = function (type, name){
				var i = _entries.length, entry;
				while( i-- ){
					entry = _entries[i];
					if( entry.entryType == type && (name === void 0 || entry.name == name) ){
						_entries.splice(i, 1);
					}
				}
			}
		;
	
	
		if( !performance.now ){
			performance.now = performance.webkitNow || performance.mozNow || performance.msNow || function (){
				return (Date.now ? Date.now() : +(new Date)) - startOffset;
			};
		}
	
	
		if( !performance.mark ){
			performance.mark = performance.webkitMark || function (name){
				var mark = {
					  name:			name
					, entryType:	'mark'
					, startTime:	performance.now()
					, duration:		0
				};
				_entries.push(mark);
				_marksIndex[name] = mark;
			};
		}
	
	
		if( !performance.measure ){
			performance.measure = performance.webkitMeasure || function (name, startMark, endMark){
				startMark	= _marksIndex[startMark].startTime;
				endMark		= _marksIndex[endMark].startTime;
	
				_entries.push({
					  name:			name
					, entryType:	'measure'
					, startTime:	startMark
					, duration:		endMark - startMark
				});
			};
		}
	
	
		if( !performance.getEntriesByType ){
			performance.getEntriesByType = performance.webkitGetEntriesByType || function (type){
				return _filterEntries('entryType', type);
			};
		}
	
	
		if( !performance.getEntriesByName ){
			performance.getEntriesByName = performance.webkitGetEntriesByName || function (name){
				return _filterEntries('name', name);
			};
		}
	
	
		if( !performance.clearMarks ){
			performance.clearMarks = performance.webkitClearMarks || function (name){
				_clearEntries('mark', name);
			};
		}
	
	
		if( !performance.clearMeasures ){
			performance.clearMeasures = performance.webkitClearMeasures || function (name){
				_clearEntries('measure', name);
			};
		}
	
	
		// exports
		window.performance = performance;
	
		if( true ){
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function (){ return performance }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		}
	})(window);


/***/ }),
/* 99 */
/*!***********************************************!*\
  !*** ./public_ufe/js/utils/framework/Perf.js ***!
  \***********************************************/
/***/ (function(module, exports) {

	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var Perf = Sephora.isRootRender ? {} : Sephora.Util.Perf;
	
	function normalizeTime(time) {
	    return Math.round(time * 1000) / 1000;
	}
	
	Perf.getLogs = function () {
	    var outputAsTable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
	
	    if (outputAsTable) {
	        var table = Perf.loadEvents.map(function (event) {
	            var output = { time: normalizeTime(event.time) };
	            output.data = Array.isArray(event.data) ? event.data[0] : event.data;
	            return output;
	        });
	
	        console.table(table);
	    } else {
	        for (var i = 0, max = Perf.loadEvents.length; i < max; i++) {
	            var event = Perf.loadEvents[i];
	            var time = normalizeTime(event.time);
	            var prefix = time + ':';
	
	            if (typeof event.data === 'string') {
	                console.log(prefix + ' ' + event.data);
	            } else if (Array.isArray(event.data)) {
	                // Support for reports with multiple console arguments
	                var logData = event.data.slice();
	                logData.unshift(prefix);
	                console.log.apply(console, logData);
	            }
	        }
	    }
	};
	
	Perf.getSummary = function () {
	    var summary = {};
	    Perf.loadEvents.filter(function (event) {
	        return event.timestamp;
	    }).forEach(function (event) {
	        return summary[event.label] = normalizeTime(event.time);
	    });
	
	    console.table(summary);
	};
	
	Perf.getMeasurements = function () {
	    var eventMap = {};
	    var measurements = {};
	
	    // Group load events by event type
	    Perf.loadEvents.filter(function (event) {
	        return event.timestamp;
	    }).forEach(function (event) {
	        var eventPrefix = event.data.split(' ')[0];
	
	        if (!eventMap[eventPrefix]) {
	            eventMap[eventPrefix] = [event.data];
	        } else {
	            eventMap[eventPrefix].push(event.data);
	            eventMap[eventPrefix].sort(function (a, b) {
	                return a.time - b.time;
	            });
	        }
	    });
	
	    // Set measurement between first and last recorded events of every event type
	    Object.keys(eventMap).forEach(function (event) {
	        var events = eventMap[event];
	        var eventsLength = events.length;
	
	        /*jshint ignore:start*/
	        function addEntry() {
	            for (var _len = arguments.length, entries = Array(_len), _key = 0; _key < _len; _key++) {
	                entries[_key] = arguments[_key];
	            }
	
	            entries.forEach(function (item) {
	                var entry = void 0;
	
	                var name = item.name,
	                    data = _objectWithoutProperties(item, ['name']);
	
	                window.performance.measure(name, item.eventStart, item.eventEnd);
	                entry = window.performance.getEntriesByName(name);
	                measurements[name] = _extends({}, data, {
	                    duration: entry.length ? normalizeTime(entry[0].duration) : null
	                });
	            });
	        }
	        /*jshint ignore:end*/
	
	        if (eventsLength < 2) {
	            // We cannot measure deltas with only one event
	            return;
	        }
	
	        if (eventsLength === 4) {
	            // Service entries have 3 different deltas we want to measure
	            addEntry({
	                name: event + '_loading',
	                eventStart: events[0],
	                eventEnd: events[1]
	            }, {
	                name: event + '_rendering',
	                eventStart: events[2],
	                eventEnd: events[3]
	            }, {
	                name: event + '_total',
	                eventStart: events[0],
	                eventEnd: events[3]
	            });
	        } else {
	            // For all others we measure delta between first and last associated events
	            addEntry({
	                name: event,
	                eventStart: events[0],
	                eventEnd: events[eventsLength - 1]
	            });
	        }
	    });
	
	    console.table(measurements);
	};
	
	module.exports = Perf;

/***/ }),
/* 100 */
/*!************************************************!*\
  !*** ./~/react-lite/dist/react-lite.common.js ***!
  \************************************************/
/***/ (function(module, exports) {

	/*!
	 * react-lite.js v0.15.34
	 * (c) 2017 Jade Gu
	 * Released under the MIT License.
	 */
	'use strict';
	
	var HTML_KEY = 'dangerouslySetInnerHTML';
	var SVGNamespaceURI = 'http://www.w3.org/2000/svg';
	var COMPONENT_ID = 'liteid';
	var VELEMENT = 2;
	var VSTATELESS = 3;
	var VCOMPONENT = 4;
	var VCOMMENT = 5;
	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	/**
	 * current stateful component's refs property
	 * will attach to every vnode created by calling component.render method
	 */
	var refs = null;
	
	function createVnode(vtype, type, props, key, ref) {
	    var vnode = {
	        vtype: vtype,
	        type: type,
	        props: props,
	        refs: refs,
	        key: key,
	        ref: ref
	    };
	    if (vtype === VSTATELESS || vtype === VCOMPONENT) {
	        vnode.uid = getUid();
	    }
	    return vnode;
	}
	
	function initVnode(vnode, parentContext, namespaceURI) {
	    var vtype = vnode.vtype;
	
	    var node = null;
	    if (!vtype) {
	        // init text
	        node = document.createTextNode(vnode);
	    } else if (vtype === VELEMENT) {
	        // init element
	        node = initVelem(vnode, parentContext, namespaceURI);
	    } else if (vtype === VCOMPONENT) {
	        // init stateful component
	        node = initVcomponent(vnode, parentContext, namespaceURI);
	    } else if (vtype === VSTATELESS) {
	        // init stateless component
	        node = initVstateless(vnode, parentContext, namespaceURI);
	    } else if (vtype === VCOMMENT) {
	        // init comment
	        node = document.createComment('react-text: ' + (vnode.uid || getUid()));
	    }
	    return node;
	}
	
	function updateVnode(vnode, newVnode, node, parentContext) {
	    var vtype = vnode.vtype;
	
	    if (vtype === VCOMPONENT) {
	        return updateVcomponent(vnode, newVnode, node, parentContext);
	    }
	
	    if (vtype === VSTATELESS) {
	        return updateVstateless(vnode, newVnode, node, parentContext);
	    }
	
	    // ignore VCOMMENT and other vtypes
	    if (vtype !== VELEMENT) {
	        return node;
	    }
	
	    var oldHtml = vnode.props[HTML_KEY] && vnode.props[HTML_KEY].__html;
	    if (oldHtml != null) {
	        updateVelem(vnode, newVnode, node, parentContext);
	        initVchildren(newVnode, node, parentContext);
	    } else {
	        updateVChildren(vnode, newVnode, node, parentContext);
	        updateVelem(vnode, newVnode, node, parentContext);
	    }
	    return node;
	}
	
	function updateVChildren(vnode, newVnode, node, parentContext) {
	    var patches = {
	        removes: [],
	        updates: [],
	        creates: []
	    };
	    diffVchildren(patches, vnode, newVnode, node, parentContext);
	    flatEach(patches.removes, applyDestroy);
	    flatEach(patches.updates, applyUpdate);
	    flatEach(patches.creates, applyCreate);
	}
	
	function applyUpdate(data) {
	    if (!data) {
	        return;
	    }
	    var vnode = data.vnode;
	    var newNode = data.node;
	
	    // update
	    if (!data.shouldIgnore) {
	        if (!vnode.vtype) {
	            newNode.replaceData(0, newNode.length, data.newVnode);
	        } else if (vnode.vtype === VELEMENT) {
	            updateVelem(vnode, data.newVnode, newNode, data.parentContext);
	        } else if (vnode.vtype === VSTATELESS) {
	            newNode = updateVstateless(vnode, data.newVnode, newNode, data.parentContext);
	        } else if (vnode.vtype === VCOMPONENT) {
	            newNode = updateVcomponent(vnode, data.newVnode, newNode, data.parentContext);
	        }
	    }
	
	    // re-order
	    var currentNode = newNode.parentNode.childNodes[data.index];
	    if (currentNode !== newNode) {
	        newNode.parentNode.insertBefore(newNode, currentNode);
	    }
	    return newNode;
	}
	
	function applyDestroy(data) {
	    destroyVnode(data.vnode, data.node);
	    data.node.parentNode.removeChild(data.node);
	}
	
	function applyCreate(data) {
	    var node = initVnode(data.vnode, data.parentContext, data.parentNode.namespaceURI);
	    data.parentNode.insertBefore(node, data.parentNode.childNodes[data.index]);
	}
	
	/**
	 * Only vnode which has props.children need to call destroy function
	 * to check whether subTree has component that need to call lify-cycle method and release cache.
	 */
	
	function destroyVnode(vnode, node) {
	    var vtype = vnode.vtype;
	
	    if (vtype === VELEMENT) {
	        // destroy element
	        destroyVelem(vnode, node);
	    } else if (vtype === VCOMPONENT) {
	        // destroy state component
	        destroyVcomponent(vnode, node);
	    } else if (vtype === VSTATELESS) {
	        // destroy stateless component
	        destroyVstateless(vnode, node);
	    }
	}
	
	function initVelem(velem, parentContext, namespaceURI) {
	    var type = velem.type;
	    var props = velem.props;
	
	    var node = null;
	
	    if (type === 'svg' || namespaceURI === SVGNamespaceURI) {
	        node = document.createElementNS(SVGNamespaceURI, type);
	        namespaceURI = SVGNamespaceURI;
	    } else {
	        node = document.createElement(type);
	    }
	
	    initVchildren(velem, node, parentContext);
	
	    var isCustomComponent = type.indexOf('-') >= 0 || props.is != null;
	    setProps(node, props, isCustomComponent);
	
	    if (velem.ref != null) {
	        addItem(pendingRefs, velem);
	        addItem(pendingRefs, node);
	    }
	
	    return node;
	}
	
	function initVchildren(velem, node, parentContext) {
	    var vchildren = node.vchildren = getFlattenChildren(velem);
	    var namespaceURI = node.namespaceURI;
	    for (var i = 0, len = vchildren.length; i < len; i++) {
	        node.appendChild(initVnode(vchildren[i], parentContext, namespaceURI));
	    }
	}
	
	function getFlattenChildren(vnode) {
	    var children = vnode.props.children;
	
	    var vchildren = [];
	    if (isArr(children)) {
	        flatEach(children, collectChild, vchildren);
	    } else {
	        collectChild(children, vchildren);
	    }
	    return vchildren;
	}
	
	function collectChild(child, children) {
	    if (child != null && typeof child !== 'boolean') {
	        if (!child.vtype) {
	            // convert immutablejs data
	            if (child.toJS) {
	                child = child.toJS();
	                if (isArr(child)) {
	                    flatEach(child, collectChild, children);
	                } else {
	                    collectChild(child, children);
	                }
	                return;
	            }
	            child = '' + child;
	        }
	        children[children.length] = child;
	    }
	}
	
	function diffVchildren(patches, vnode, newVnode, node, parentContext) {
	    if (!node.vchildren) return; // react-lite hasn't seen this DOM node before
	
	    var childNodes = node.childNodes;
	    var vchildren = node.vchildren;
	
	    var newVchildren = node.vchildren = getFlattenChildren(newVnode);
	    var vchildrenLen = vchildren.length;
	    var newVchildrenLen = newVchildren.length;
	
	    if (vchildrenLen === 0) {
	        if (newVchildrenLen > 0) {
	            for (var i = 0; i < newVchildrenLen; i++) {
	                addItem(patches.creates, {
	                    vnode: newVchildren[i],
	                    parentNode: node,
	                    parentContext: parentContext,
	                    index: i
	                });
	            }
	        }
	        return;
	    } else if (newVchildrenLen === 0) {
	        for (var i = 0; i < vchildrenLen; i++) {
	            addItem(patches.removes, {
	                vnode: vchildren[i],
	                node: childNodes[i]
	            });
	        }
	        return;
	    }
	
	    var updates = Array(newVchildrenLen);
	    var removes = null;
	    var creates = null;
	
	    // isEqual
	    for (var i = 0; i < vchildrenLen; i++) {
	        var _vnode = vchildren[i];
	        for (var j = 0; j < newVchildrenLen; j++) {
	            if (updates[j]) {
	                continue;
	            }
	            var _newVnode = newVchildren[j];
	            if (_vnode === _newVnode) {
	                var shouldIgnore = true;
	                if (parentContext) {
	                    if (_vnode.vtype === VCOMPONENT || _vnode.vtype === VSTATELESS) {
	                        if (_vnode.type.contextTypes) {
	                            shouldIgnore = false;
	                        }
	                    }
	                }
	                updates[j] = {
	                    shouldIgnore: shouldIgnore,
	                    vnode: _vnode,
	                    newVnode: _newVnode,
	                    node: childNodes[i],
	                    parentContext: parentContext,
	                    index: j
	                };
	                vchildren[i] = null;
	                break;
	            }
	        }
	    }
	
	    // isSimilar
	    for (var i = 0; i < vchildrenLen; i++) {
	        var _vnode2 = vchildren[i];
	        if (_vnode2 === null) {
	            continue;
	        }
	        var shouldRemove = true;
	        for (var j = 0; j < newVchildrenLen; j++) {
	            if (updates[j]) {
	                continue;
	            }
	            var _newVnode2 = newVchildren[j];
	            if (_newVnode2.type === _vnode2.type && _newVnode2.key === _vnode2.key && _newVnode2.refs === _vnode2.refs) {
	                updates[j] = {
	                    vnode: _vnode2,
	                    newVnode: _newVnode2,
	                    node: childNodes[i],
	                    parentContext: parentContext,
	                    index: j
	                };
	                shouldRemove = false;
	                break;
	            }
	        }
	        if (shouldRemove) {
	            if (!removes) {
	                removes = [];
	            }
	            addItem(removes, {
	                vnode: _vnode2,
	                node: childNodes[i]
	            });
	        }
	    }
	
	    for (var i = 0; i < newVchildrenLen; i++) {
	        var item = updates[i];
	        if (!item) {
	            if (!creates) {
	                creates = [];
	            }
	            addItem(creates, {
	                vnode: newVchildren[i],
	                parentNode: node,
	                parentContext: parentContext,
	                index: i
	            });
	        } else if (item.vnode.vtype === VELEMENT) {
	            diffVchildren(patches, item.vnode, item.newVnode, item.node, item.parentContext);
	        }
	    }
	
	    if (removes) {
	        addItem(patches.removes, removes);
	    }
	    if (creates) {
	        addItem(patches.creates, creates);
	    }
	    addItem(patches.updates, updates);
	}
	
	function updateVelem(velem, newVelem, node) {
	    var isCustomComponent = velem.type.indexOf('-') >= 0 || velem.props.is != null;
	    patchProps(node, velem.props, newVelem.props, isCustomComponent);
	    if (velem.ref !== newVelem.ref) {
	        detachRef(velem.refs, velem.ref, node);
	        attachRef(newVelem.refs, newVelem.ref, node);
	    }
	    return node;
	}
	
	function destroyVelem(velem, node) {
	    var props = velem.props;
	    var vchildren = node.vchildren;
	    var childNodes = node.childNodes;
	
	    if (vchildren) {
	        for (var i = 0, len = vchildren.length; i < len; i++) {
	            destroyVnode(vchildren[i], childNodes[i]);
	        }
	    }
	    detachRef(velem.refs, velem.ref, node);
	    node.eventStore = node.vchildren = null;
	}
	
	function initVstateless(vstateless, parentContext, namespaceURI) {
	    var vnode = renderVstateless(vstateless, parentContext);
	    var node = initVnode(vnode, parentContext, namespaceURI);
	    node.cache = node.cache || {};
	    node.cache[vstateless.uid] = vnode;
	    return node;
	}
	
	function updateVstateless(vstateless, newVstateless, node, parentContext) {
	    var uid = vstateless.uid;
	    var vnode = node.cache[uid];
	    delete node.cache[uid];
	    var newVnode = renderVstateless(newVstateless, parentContext);
	    var newNode = compareTwoVnodes(vnode, newVnode, node, parentContext);
	    newNode.cache = newNode.cache || {};
	    newNode.cache[newVstateless.uid] = newVnode;
	    if (newNode !== node) {
	        syncCache(newNode.cache, node.cache, newNode);
	    }
	    return newNode;
	}
	
	function destroyVstateless(vstateless, node) {
	    var uid = vstateless.uid;
	    var vnode = node.cache[uid];
	    delete node.cache[uid];
	    destroyVnode(vnode, node);
	}
	
	function renderVstateless(vstateless, parentContext) {
	    var factory = vstateless.type;
	    var props = vstateless.props;
	
	    var componentContext = getContextByTypes(parentContext, factory.contextTypes);
	    var vnode = factory(props, componentContext);
	    if (vnode && vnode.render) {
	        vnode = vnode.render();
	    }
	    if (vnode === null || vnode === false) {
	        vnode = createVnode(VCOMMENT);
	    } else if (!vnode || !vnode.vtype) {
	        throw new Error('@' + factory.name + '#render:You may have returned undefined, an array or some other invalid object');
	    }
	    return vnode;
	}
	
	function initVcomponent(vcomponent, parentContext, namespaceURI) {
	    var Component = vcomponent.type;
	    var props = vcomponent.props;
	    var uid = vcomponent.uid;
	
	    var componentContext = getContextByTypes(parentContext, Component.contextTypes);
	    var component = new Component(props, componentContext);
	    var updater = component.$updater;
	    var cache = component.$cache;
	
	    cache.parentContext = parentContext;
	    updater.isPending = true;
	    component.props = component.props || props;
	    component.context = component.context || componentContext;
	    if (component.componentWillMount) {
	        component.componentWillMount();
	        component.state = updater.getState();
	    }
	    var vnode = renderComponent(component);
	    var node = initVnode(vnode, getChildContext(component, parentContext), namespaceURI);
	    node.cache = node.cache || {};
	    node.cache[uid] = component;
	    cache.vnode = vnode;
	    cache.node = node;
	    cache.isMounted = true;
	    addItem(pendingComponents, component);
	
	    if (vcomponent.ref != null) {
	        addItem(pendingRefs, vcomponent);
	        addItem(pendingRefs, component);
	    }
	
	    return node;
	}
	
	function updateVcomponent(vcomponent, newVcomponent, node, parentContext) {
	    var uid = vcomponent.uid;
	    var component = node.cache[uid];
	    var updater = component.$updater;
	    var cache = component.$cache;
	    var Component = newVcomponent.type;
	    var nextProps = newVcomponent.props;
	
	    var componentContext = getContextByTypes(parentContext, Component.contextTypes);
	    delete node.cache[uid];
	    node.cache[newVcomponent.uid] = component;
	    cache.parentContext = parentContext;
	    if (component.componentWillReceiveProps) {
	        var needToggleIsPending = !updater.isPending;
	        if (needToggleIsPending) updater.isPending = true;
	        component.componentWillReceiveProps(nextProps, componentContext);
	        if (needToggleIsPending) updater.isPending = false;
	    }
	
	    if (vcomponent.ref !== newVcomponent.ref) {
	        detachRef(vcomponent.refs, vcomponent.ref, component);
	        attachRef(newVcomponent.refs, newVcomponent.ref, component);
	    }
	
	    updater.emitUpdate(nextProps, componentContext);
	
	    return cache.node;
	}
	
	function destroyVcomponent(vcomponent, node) {
	    var uid = vcomponent.uid;
	    var component = node.cache[uid];
	    var cache = component.$cache;
	    delete node.cache[uid];
	    detachRef(vcomponent.refs, vcomponent.ref, component);
	    component.setState = component.forceUpdate = noop;
	    if (component.componentWillUnmount) {
	        component.componentWillUnmount();
	    }
	    destroyVnode(cache.vnode, node);
	    delete component.setState;
	    cache.isMounted = false;
	    cache.node = cache.parentContext = cache.vnode = component.refs = component.context = null;
	}
	
	function getContextByTypes(curContext, contextTypes) {
	    var context = {};
	    if (!contextTypes || !curContext) {
	        return context;
	    }
	    for (var key in contextTypes) {
	        if (contextTypes.hasOwnProperty(key)) {
	            context[key] = curContext[key];
	        }
	    }
	    return context;
	}
	
	function renderComponent(component, parentContext) {
	    refs = component.refs;
	    var vnode = component.render();
	    if (vnode === null || vnode === false) {
	        vnode = createVnode(VCOMMENT);
	    } else if (!vnode || !vnode.vtype) {
	        throw new Error('@' + component.constructor.name + '#render:You may have returned undefined, an array or some other invalid object');
	    }
	    refs = null;
	    return vnode;
	}
	
	function getChildContext(component, parentContext) {
	    if (component.getChildContext) {
	        var curContext = component.getChildContext();
	        if (curContext) {
	            parentContext = extend(extend({}, parentContext), curContext);
	        }
	    }
	    return parentContext;
	}
	
	var pendingComponents = [];
	function clearPendingComponents() {
	    var len = pendingComponents.length;
	    if (!len) {
	        return;
	    }
	    var components = pendingComponents;
	    pendingComponents = [];
	    var i = -1;
	    while (len--) {
	        var component = components[++i];
	        var updater = component.$updater;
	        if (component.componentDidMount) {
	            component.componentDidMount();
	        }
	        updater.isPending = false;
	        updater.emitUpdate();
	    }
	}
	
	var pendingRefs = [];
	function clearPendingRefs() {
	    var len = pendingRefs.length;
	    if (!len) {
	        return;
	    }
	    var list = pendingRefs;
	    pendingRefs = [];
	    for (var i = 0; i < len; i += 2) {
	        var vnode = list[i];
	        var refValue = list[i + 1];
	        attachRef(vnode.refs, vnode.ref, refValue);
	    }
	}
	
	function clearPending() {
	    clearPendingRefs();
	    clearPendingComponents();
	}
	
	function compareTwoVnodes(vnode, newVnode, node, parentContext) {
	    var newNode = node;
	    if (newVnode == null) {
	        // remove
	        destroyVnode(vnode, node);
	        node.parentNode.removeChild(node);
	    } else if (vnode.type !== newVnode.type || vnode.key !== newVnode.key) {
	        // replace
	        destroyVnode(vnode, node);
	        newNode = initVnode(newVnode, parentContext, node.namespaceURI);
	        node.parentNode.replaceChild(newNode, node);
	    } else if (vnode !== newVnode || parentContext) {
	        // same type and same key -> update
	        newNode = updateVnode(vnode, newVnode, node, parentContext);
	    }
	    return newNode;
	}
	
	function getDOMNode() {
	    return this;
	}
	
	function attachRef(refs, refKey, refValue) {
	    if (refKey == null || !refValue) {
	        return;
	    }
	    if (refValue.nodeName && !refValue.getDOMNode) {
	        // support react v0.13 style: this.refs.myInput.getDOMNode()
	        refValue.getDOMNode = getDOMNode;
	    }
	    if (isFn(refKey)) {
	        refKey(refValue);
	    } else if (refs) {
	        refs[refKey] = refValue;
	    }
	}
	
	function detachRef(refs, refKey, refValue) {
	    if (refKey == null) {
	        return;
	    }
	    if (isFn(refKey)) {
	        refKey(null);
	    } else if (refs && refs[refKey] === refValue) {
	        delete refs[refKey];
	    }
	}
	
	function syncCache(cache, oldCache, node) {
	    for (var key in oldCache) {
	        if (!oldCache.hasOwnProperty(key)) {
	            continue;
	        }
	        var value = oldCache[key];
	        cache[key] = value;
	
	        // is component, update component.$cache.node
	        if (value.forceUpdate) {
	            value.$cache.node = node;
	        }
	    }
	}
	
	var updateQueue = {
		updaters: [],
		isPending: false,
		add: function add(updater) {
			addItem(this.updaters, updater);
		},
		batchUpdate: function batchUpdate() {
			if (this.isPending) {
				return;
			}
			this.isPending = true;
			/*
	   each updater.update may add new updater to updateQueue
	   clear them with a loop
	   event bubbles from bottom-level to top-level
	   reverse the updater order can merge some props and state and reduce the refresh times
	   see Updater.update method below to know why
	  */
			var updaters = this.updaters;
	
			var updater = undefined;
			while (updater = updaters.pop()) {
				updater.updateComponent();
			}
			this.isPending = false;
		}
	};
	
	function Updater(instance) {
		this.instance = instance;
		this.pendingStates = [];
		this.pendingCallbacks = [];
		this.isPending = false;
		this.nextProps = this.nextContext = null;
		this.clearCallbacks = this.clearCallbacks.bind(this);
	}
	
	Updater.prototype = {
		emitUpdate: function emitUpdate(nextProps, nextContext) {
			this.nextProps = nextProps;
			this.nextContext = nextContext;
			// receive nextProps!! should update immediately
			nextProps || !updateQueue.isPending ? this.updateComponent() : updateQueue.add(this);
		},
		updateComponent: function updateComponent() {
			var instance = this.instance;
			var pendingStates = this.pendingStates;
			var nextProps = this.nextProps;
			var nextContext = this.nextContext;
	
			if (nextProps || pendingStates.length > 0) {
				nextProps = nextProps || instance.props;
				nextContext = nextContext || instance.context;
				this.nextProps = this.nextContext = null;
				// merge the nextProps and nextState and update by one time
				shouldUpdate(instance, nextProps, this.getState(), nextContext, this.clearCallbacks);
			}
		},
		addState: function addState(nextState) {
			if (nextState) {
				addItem(this.pendingStates, nextState);
				if (!this.isPending) {
					this.emitUpdate();
				}
			}
		},
		replaceState: function replaceState(nextState) {
			var pendingStates = this.pendingStates;
	
			pendingStates.pop();
			// push special params to point out should replace state
			addItem(pendingStates, [nextState]);
		},
		getState: function getState() {
			var instance = this.instance;
			var pendingStates = this.pendingStates;
			var state = instance.state;
			var props = instance.props;
	
			if (pendingStates.length) {
				state = extend({}, state);
				pendingStates.forEach(function (nextState) {
					var isReplace = isArr(nextState);
					if (isReplace) {
						nextState = nextState[0];
					}
					if (isFn(nextState)) {
						nextState = nextState.call(instance, state, props);
					}
					// replace state
					if (isReplace) {
						state = extend({}, nextState);
					} else {
						extend(state, nextState);
					}
				});
				pendingStates.length = 0;
			}
			return state;
		},
		clearCallbacks: function clearCallbacks() {
			var pendingCallbacks = this.pendingCallbacks;
			var instance = this.instance;
	
			if (pendingCallbacks.length > 0) {
				this.pendingCallbacks = [];
				pendingCallbacks.forEach(function (callback) {
					return callback.call(instance);
				});
			}
		},
		addCallback: function addCallback(callback) {
			if (isFn(callback)) {
				addItem(this.pendingCallbacks, callback);
			}
		}
	};
	function Component(props, context) {
		this.$updater = new Updater(this);
		this.$cache = { isMounted: false };
		this.props = props;
		this.state = {};
		this.refs = {};
		this.context = context;
	}
	
	var ReactComponentSymbol = {};
	
	Component.prototype = {
		constructor: Component,
		isReactComponent: ReactComponentSymbol,
		// getChildContext: _.noop,
		// componentWillUpdate: _.noop,
		// componentDidUpdate: _.noop,
		// componentWillReceiveProps: _.noop,
		// componentWillMount: _.noop,
		// componentDidMount: _.noop,
		// componentWillUnmount: _.noop,
		// shouldComponentUpdate(nextProps, nextState) {
		// 	return true
		// },
		forceUpdate: function forceUpdate(callback) {
			var $updater = this.$updater;
			var $cache = this.$cache;
			var props = this.props;
			var state = this.state;
			var context = this.context;
	
			if (!$cache.isMounted) {
				return;
			}
			// if updater is pending, add state to trigger nexttick update
			if ($updater.isPending) {
				$updater.addState(state);
				return;
			}
			var nextProps = $cache.props || props;
			var nextState = $cache.state || state;
			var nextContext = $cache.context || context;
			var parentContext = $cache.parentContext;
			var node = $cache.node;
			var vnode = $cache.vnode;
			$cache.props = $cache.state = $cache.context = null;
			$updater.isPending = true;
			if (this.componentWillUpdate) {
				this.componentWillUpdate(nextProps, nextState, nextContext);
			}
			this.state = nextState;
			this.props = nextProps;
			this.context = nextContext;
			var newVnode = renderComponent(this);
			var newNode = compareTwoVnodes(vnode, newVnode, node, getChildContext(this, parentContext));
			if (newNode !== node) {
				newNode.cache = newNode.cache || {};
				syncCache(newNode.cache, node.cache, newNode);
			}
			$cache.vnode = newVnode;
			$cache.node = newNode;
			clearPending();
			if (this.componentDidUpdate) {
				this.componentDidUpdate(props, state, context);
			}
			if (callback) {
				callback.call(this);
			}
			$updater.isPending = false;
			$updater.emitUpdate();
		},
		setState: function setState(nextState, callback) {
			var $updater = this.$updater;
	
			$updater.addCallback(callback);
			$updater.addState(nextState);
		},
		replaceState: function replaceState(nextState, callback) {
			var $updater = this.$updater;
	
			$updater.addCallback(callback);
			$updater.replaceState(nextState);
		},
		getDOMNode: function getDOMNode() {
			var node = this.$cache.node;
			return node && node.nodeName === '#comment' ? null : node;
		},
		isMounted: function isMounted() {
			return this.$cache.isMounted;
		}
	};
	
	function shouldUpdate(component, nextProps, nextState, nextContext, callback) {
		var shouldComponentUpdate = true;
		if (component.shouldComponentUpdate) {
			shouldComponentUpdate = component.shouldComponentUpdate(nextProps, nextState, nextContext);
		}
		if (shouldComponentUpdate === false) {
			component.props = nextProps;
			component.state = nextState;
			component.context = nextContext || {};
			return;
		}
		var cache = component.$cache;
		cache.props = nextProps;
		cache.state = nextState;
		cache.context = nextContext || {};
		component.forceUpdate(callback);
	}
	
	// event config
	var unbubbleEvents = {
	    /**
	     * should not bind mousemove in document scope
	     * even though mousemove event can bubble
	     */
	    onmousemove: 1,
	    ontouchmove: 1,
	    onmouseleave: 1,
	    onmouseenter: 1,
	    onload: 1,
	    onunload: 1,
	    onscroll: 1,
	    onfocus: 1,
	    onblur: 1,
	    onrowexit: 1,
	    onbeforeunload: 1,
	    onstop: 1,
	    ondragdrop: 1,
	    ondragenter: 1,
	    ondragexit: 1,
	    ondraggesture: 1,
	    ondragover: 1,
	    oncontextmenu: 1,
	    onerror: 1
	};
	
	function getEventName(key) {
	    if (key === 'onDoubleClick') {
	        key = 'ondblclick';
	    } else if (key === 'onTouchTap') {
	        key = 'onclick';
	    }
	
	    return key.toLowerCase();
	}
	
	// Mobile Safari does not fire properly bubble click events on
	// non-interactive elements, which means delegated click listeners do not
	// fire. The workaround for this bug involves attaching an empty click
	// listener on the target node.
	var inMobile = ('ontouchstart' in document);
	var emptyFunction = function emptyFunction() {};
	var ON_CLICK_KEY = 'onclick';
	
	var eventTypes = {};
	
	function addEvent(elem, eventType, listener) {
	    eventType = getEventName(eventType);
	
	    var eventStore = elem.eventStore || (elem.eventStore = {});
	    eventStore[eventType] = listener;
	
	    if (unbubbleEvents[eventType] === 1) {
	        elem[eventType] = dispatchUnbubbleEvent;
	        return;
	    } else if (!eventTypes[eventType]) {
	        // onclick -> click
	        document.addEventListener(eventType.substr(2), dispatchEvent, false);
	        eventTypes[eventType] = true;
	    }
	
	    if (inMobile && eventType === ON_CLICK_KEY) {
	        elem.addEventListener('click', emptyFunction, false);
	        return;
	    }
	
	    var nodeName = elem.nodeName;
	
	    if (eventType === 'onchange') {
	        addEvent(elem, 'oninput', listener);
	    }
	}
	
	function removeEvent(elem, eventType) {
	    eventType = getEventName(eventType);
	
	    var eventStore = elem.eventStore || (elem.eventStore = {});
	    delete eventStore[eventType];
	
	    if (unbubbleEvents[eventType] === 1) {
	        elem[eventType] = null;
	        return;
	    } else if (inMobile && eventType === ON_CLICK_KEY) {
	        elem.removeEventListener('click', emptyFunction, false);
	        return;
	    }
	
	    var nodeName = elem.nodeName;
	
	    if (eventType === 'onchange') {
	        delete eventStore['oninput'];
	    }
	}
	
	function dispatchEvent(event) {
	    var target = event.target;
	    var type = event.type;
	
	    var eventType = 'on' + type;
	    var syntheticEvent = undefined;
	
	    updateQueue.isPending = true;
	    while (target) {
	        var _target = target;
	        var eventStore = _target.eventStore;
	
	        var listener = eventStore && eventStore[eventType];
	        if (!listener) {
	            target = target.parentNode;
	            continue;
	        }
	        if (!syntheticEvent) {
	            syntheticEvent = createSyntheticEvent(event);
	        }
	        syntheticEvent.currentTarget = target;
	        listener.call(target, syntheticEvent);
	        if (syntheticEvent.$cancelBubble) {
	            break;
	        }
	        target = target.parentNode;
	    }
	    updateQueue.isPending = false;
	    updateQueue.batchUpdate();
	}
	
	function dispatchUnbubbleEvent(event) {
	    var target = event.currentTarget || event.target;
	    var eventType = 'on' + event.type;
	    var syntheticEvent = createSyntheticEvent(event);
	
	    syntheticEvent.currentTarget = target;
	    updateQueue.isPending = true;
	
	    var eventStore = target.eventStore;
	
	    var listener = eventStore && eventStore[eventType];
	    if (listener) {
	        listener.call(target, syntheticEvent);
	    }
	
	    updateQueue.isPending = false;
	    updateQueue.batchUpdate();
	}
	
	function createSyntheticEvent(nativeEvent) {
	    var syntheticEvent = {};
	    var cancelBubble = function cancelBubble() {
	        return syntheticEvent.$cancelBubble = true;
	    };
	    syntheticEvent.nativeEvent = nativeEvent;
	    syntheticEvent.persist = noop;
	    for (var key in nativeEvent) {
	        if (typeof nativeEvent[key] !== 'function') {
	            syntheticEvent[key] = nativeEvent[key];
	        } else if (key === 'stopPropagation' || key === 'stopImmediatePropagation') {
	            syntheticEvent[key] = cancelBubble;
	        } else {
	            syntheticEvent[key] = nativeEvent[key].bind(nativeEvent);
	        }
	    }
	    return syntheticEvent;
	}
	
	function setStyle(elemStyle, styles) {
	    for (var styleName in styles) {
	        if (styles.hasOwnProperty(styleName)) {
	            setStyleValue(elemStyle, styleName, styles[styleName]);
	        }
	    }
	}
	
	function removeStyle(elemStyle, styles) {
	    for (var styleName in styles) {
	        if (styles.hasOwnProperty(styleName)) {
	            elemStyle[styleName] = '';
	        }
	    }
	}
	
	function patchStyle(elemStyle, style, newStyle) {
	    if (style === newStyle) {
	        return;
	    }
	    if (!newStyle && style) {
	        removeStyle(elemStyle, style);
	        return;
	    } else if (newStyle && !style) {
	        setStyle(elemStyle, newStyle);
	        return;
	    }
	
	    for (var key in style) {
	        if (newStyle.hasOwnProperty(key)) {
	            if (newStyle[key] !== style[key]) {
	                setStyleValue(elemStyle, key, newStyle[key]);
	            }
	        } else {
	            elemStyle[key] = '';
	        }
	    }
	    for (var key in newStyle) {
	        if (!style.hasOwnProperty(key)) {
	            setStyleValue(elemStyle, key, newStyle[key]);
	        }
	    }
	}
	
	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	var isUnitlessNumber = {
	    animationIterationCount: 1,
	    borderImageOutset: 1,
	    borderImageSlice: 1,
	    borderImageWidth: 1,
	    boxFlex: 1,
	    boxFlexGroup: 1,
	    boxOrdinalGroup: 1,
	    columnCount: 1,
	    flex: 1,
	    flexGrow: 1,
	    flexPositive: 1,
	    flexShrink: 1,
	    flexNegative: 1,
	    flexOrder: 1,
	    gridRow: 1,
	    gridColumn: 1,
	    fontWeight: 1,
	    lineClamp: 1,
	    lineHeight: 1,
	    opacity: 1,
	    order: 1,
	    orphans: 1,
	    tabSize: 1,
	    widows: 1,
	    zIndex: 1,
	    zoom: 1,
	
	    // SVG-related properties
	    fillOpacity: 1,
	    floodOpacity: 1,
	    stopOpacity: 1,
	    strokeDasharray: 1,
	    strokeDashoffset: 1,
	    strokeMiterlimit: 1,
	    strokeOpacity: 1,
	    strokeWidth: 1
	};
	
	function prefixKey(prefix, key) {
	    return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}
	
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
	
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	    prefixes.forEach(function (prefix) {
	        isUnitlessNumber[prefixKey(prefix, prop)] = 1;
	    });
	});
	
	var RE_NUMBER = /^-?\d+(\.\d+)?$/;
	function setStyleValue(elemStyle, styleName, styleValue) {
	
	    if (!isUnitlessNumber[styleName] && RE_NUMBER.test(styleValue)) {
	        elemStyle[styleName] = styleValue + 'px';
	        return;
	    }
	
	    if (styleName === 'float') {
	        styleName = 'cssFloat';
	    }
	
	    if (styleValue == null || typeof styleValue === 'boolean') {
	        styleValue = '';
	    }
	
	    elemStyle[styleName] = styleValue;
	}
	
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\uB7\\u0300-\\u036F\\u203F-\\u2040';
	
	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');
	
	var isCustomAttribute = RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$'));
	// will merge some data in properties below
	var properties = {};
	
	/**
	 * Mapping from normalized, camelcased property names to a configuration that
	 * specifies how the associated DOM property should be accessed or rendered.
	 */
	var MUST_USE_PROPERTY = 0x1;
	var HAS_BOOLEAN_VALUE = 0x4;
	var HAS_NUMERIC_VALUE = 0x8;
	var HAS_POSITIVE_NUMERIC_VALUE = 0x10 | 0x8;
	var HAS_OVERLOADED_BOOLEAN_VALUE = 0x20;
	
	// html config
	var HTMLDOMPropertyConfig = {
	    props: {
	        /**
	         * Standard Properties
	         */
	        accept: 0,
	        acceptCharset: 0,
	        accessKey: 0,
	        action: 0,
	        allowFullScreen: HAS_BOOLEAN_VALUE,
	        allowTransparency: 0,
	        alt: 0,
	        async: HAS_BOOLEAN_VALUE,
	        autoComplete: 0,
	        autoFocus: HAS_BOOLEAN_VALUE,
	        autoPlay: HAS_BOOLEAN_VALUE,
	        capture: HAS_BOOLEAN_VALUE,
	        cellPadding: 0,
	        cellSpacing: 0,
	        charSet: 0,
	        challenge: 0,
	        checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	        cite: 0,
	        classID: 0,
	        className: 0,
	        cols: HAS_POSITIVE_NUMERIC_VALUE,
	        colSpan: 0,
	        content: 0,
	        contentEditable: 0,
	        contextMenu: 0,
	        controls: HAS_BOOLEAN_VALUE,
	        coords: 0,
	        crossOrigin: 0,
	        data: 0, // For `<object />` acts as `src`.
	        dateTime: 0,
	        'default': HAS_BOOLEAN_VALUE,
	        // not in regular react, they did it in other way
	        defaultValue: MUST_USE_PROPERTY,
	        // not in regular react, they did it in other way
	        defaultChecked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	        defer: HAS_BOOLEAN_VALUE,
	        dir: 0,
	        disabled: HAS_BOOLEAN_VALUE,
	        download: HAS_OVERLOADED_BOOLEAN_VALUE,
	        draggable: 0,
	        encType: 0,
	        form: 0,
	        formAction: 0,
	        formEncType: 0,
	        formMethod: 0,
	        formNoValidate: HAS_BOOLEAN_VALUE,
	        formTarget: 0,
	        frameBorder: 0,
	        headers: 0,
	        height: 0,
	        hidden: HAS_BOOLEAN_VALUE,
	        high: 0,
	        href: 0,
	        hrefLang: 0,
	        htmlFor: 0,
	        httpEquiv: 0,
	        icon: 0,
	        id: 0,
	        inputMode: 0,
	        integrity: 0,
	        is: 0,
	        keyParams: 0,
	        keyType: 0,
	        kind: 0,
	        label: 0,
	        lang: 0,
	        list: 0,
	        loop: HAS_BOOLEAN_VALUE,
	        low: 0,
	        manifest: 0,
	        marginHeight: 0,
	        marginWidth: 0,
	        max: 0,
	        maxLength: 0,
	        media: 0,
	        mediaGroup: 0,
	        method: 0,
	        min: 0,
	        minLength: 0,
	        // Caution; `option.selected` is not updated if `select.multiple` is
	        // disabled with `removeAttribute`.
	        multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	        muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	        name: 0,
	        nonce: 0,
	        noValidate: HAS_BOOLEAN_VALUE,
	        open: HAS_BOOLEAN_VALUE,
	        optimum: 0,
	        pattern: 0,
	        placeholder: 0,
	        poster: 0,
	        preload: 0,
	        profile: 0,
	        radioGroup: 0,
	        readOnly: HAS_BOOLEAN_VALUE,
	        referrerPolicy: 0,
	        rel: 0,
	        required: HAS_BOOLEAN_VALUE,
	        reversed: HAS_BOOLEAN_VALUE,
	        role: 0,
	        rows: HAS_POSITIVE_NUMERIC_VALUE,
	        rowSpan: HAS_NUMERIC_VALUE,
	        sandbox: 0,
	        scope: 0,
	        scoped: HAS_BOOLEAN_VALUE,
	        scrolling: 0,
	        seamless: HAS_BOOLEAN_VALUE,
	        selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	        shape: 0,
	        size: HAS_POSITIVE_NUMERIC_VALUE,
	        sizes: 0,
	        span: HAS_POSITIVE_NUMERIC_VALUE,
	        spellCheck: 0,
	        src: 0,
	        srcDoc: 0,
	        srcLang: 0,
	        srcSet: 0,
	        start: HAS_NUMERIC_VALUE,
	        step: 0,
	        style: 0,
	        summary: 0,
	        tabIndex: 0,
	        target: 0,
	        title: 0,
	        // Setting .type throws on non-<input> tags
	        type: 0,
	        useMap: 0,
	        value: MUST_USE_PROPERTY,
	        width: 0,
	        wmode: 0,
	        wrap: 0,
	
	        /**
	         * RDFa Properties
	         */
	        about: 0,
	        datatype: 0,
	        inlist: 0,
	        prefix: 0,
	        // property is also supported for OpenGraph in meta tags.
	        property: 0,
	        resource: 0,
	        'typeof': 0,
	        vocab: 0,
	
	        /**
	         * Non-standard Properties
	         */
	        // autoCapitalize and autoCorrect are supported in Mobile Safari for
	        // keyboard hints.
	        autoCapitalize: 0,
	        autoCorrect: 0,
	        // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	        autoSave: 0,
	        // color is for Safari mask-icon link
	        color: 0,
	        // itemProp, itemScope, itemType are for
	        // Microdata support. See http://schema.org/docs/gs.html
	        itemProp: 0,
	        itemScope: HAS_BOOLEAN_VALUE,
	        itemType: 0,
	        // itemID and itemRef are for Microdata support as well but
	        // only specified in the WHATWG spec document. See
	        // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	        itemID: 0,
	        itemRef: 0,
	        // results show looking glass icon and recent searches on input
	        // search fields in WebKit/Blink
	        results: 0,
	        // IE-only attribute that specifies security restrictions on an iframe
	        // as an alternative to the sandbox attribute on IE<10
	        security: 0,
	        // IE-only attribute that controls focus behavior
	        unselectable: 0
	    },
	    attrNS: {},
	    domAttrs: {
	        acceptCharset: 'accept-charset',
	        className: 'class',
	        htmlFor: 'for',
	        httpEquiv: 'http-equiv'
	    },
	    domProps: {}
	};
	
	// svg config
	var xlink = 'http://www.w3.org/1999/xlink';
	var xml = 'http://www.w3.org/XML/1998/namespace';
	
	// We use attributes for everything SVG so let's avoid some duplication and run
	// code instead.
	// The following are all specified in the HTML config already so we exclude here.
	// - class (as className)
	// - color
	// - height
	// - id
	// - lang
	// - max
	// - media
	// - method
	// - min
	// - name
	// - style
	// - target
	// - type
	// - width
	var ATTRS = {
	    accentHeight: 'accent-height',
	    accumulate: 0,
	    additive: 0,
	    alignmentBaseline: 'alignment-baseline',
	    allowReorder: 'allowReorder',
	    alphabetic: 0,
	    amplitude: 0,
	    arabicForm: 'arabic-form',
	    ascent: 0,
	    attributeName: 'attributeName',
	    attributeType: 'attributeType',
	    autoReverse: 'autoReverse',
	    azimuth: 0,
	    baseFrequency: 'baseFrequency',
	    baseProfile: 'baseProfile',
	    baselineShift: 'baseline-shift',
	    bbox: 0,
	    begin: 0,
	    bias: 0,
	    by: 0,
	    calcMode: 'calcMode',
	    capHeight: 'cap-height',
	    clip: 0,
	    clipPath: 'clip-path',
	    clipRule: 'clip-rule',
	    clipPathUnits: 'clipPathUnits',
	    colorInterpolation: 'color-interpolation',
	    colorInterpolationFilters: 'color-interpolation-filters',
	    colorProfile: 'color-profile',
	    colorRendering: 'color-rendering',
	    contentScriptType: 'contentScriptType',
	    contentStyleType: 'contentStyleType',
	    cursor: 0,
	    cx: 0,
	    cy: 0,
	    d: 0,
	    decelerate: 0,
	    descent: 0,
	    diffuseConstant: 'diffuseConstant',
	    direction: 0,
	    display: 0,
	    divisor: 0,
	    dominantBaseline: 'dominant-baseline',
	    dur: 0,
	    dx: 0,
	    dy: 0,
	    edgeMode: 'edgeMode',
	    elevation: 0,
	    enableBackground: 'enable-background',
	    end: 0,
	    exponent: 0,
	    externalResourcesRequired: 'externalResourcesRequired',
	    fill: 0,
	    fillOpacity: 'fill-opacity',
	    fillRule: 'fill-rule',
	    filter: 0,
	    filterRes: 'filterRes',
	    filterUnits: 'filterUnits',
	    floodColor: 'flood-color',
	    floodOpacity: 'flood-opacity',
	    focusable: 0,
	    fontFamily: 'font-family',
	    fontSize: 'font-size',
	    fontSizeAdjust: 'font-size-adjust',
	    fontStretch: 'font-stretch',
	    fontStyle: 'font-style',
	    fontVariant: 'font-variant',
	    fontWeight: 'font-weight',
	    format: 0,
	    from: 0,
	    fx: 0,
	    fy: 0,
	    g1: 0,
	    g2: 0,
	    glyphName: 'glyph-name',
	    glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	    glyphOrientationVertical: 'glyph-orientation-vertical',
	    glyphRef: 'glyphRef',
	    gradientTransform: 'gradientTransform',
	    gradientUnits: 'gradientUnits',
	    hanging: 0,
	    horizAdvX: 'horiz-adv-x',
	    horizOriginX: 'horiz-origin-x',
	    ideographic: 0,
	    imageRendering: 'image-rendering',
	    'in': 0,
	    in2: 0,
	    intercept: 0,
	    k: 0,
	    k1: 0,
	    k2: 0,
	    k3: 0,
	    k4: 0,
	    kernelMatrix: 'kernelMatrix',
	    kernelUnitLength: 'kernelUnitLength',
	    kerning: 0,
	    keyPoints: 'keyPoints',
	    keySplines: 'keySplines',
	    keyTimes: 'keyTimes',
	    lengthAdjust: 'lengthAdjust',
	    letterSpacing: 'letter-spacing',
	    lightingColor: 'lighting-color',
	    limitingConeAngle: 'limitingConeAngle',
	    local: 0,
	    markerEnd: 'marker-end',
	    markerMid: 'marker-mid',
	    markerStart: 'marker-start',
	    markerHeight: 'markerHeight',
	    markerUnits: 'markerUnits',
	    markerWidth: 'markerWidth',
	    mask: 0,
	    maskContentUnits: 'maskContentUnits',
	    maskUnits: 'maskUnits',
	    mathematical: 0,
	    mode: 0,
	    numOctaves: 'numOctaves',
	    offset: 0,
	    opacity: 0,
	    operator: 0,
	    order: 0,
	    orient: 0,
	    orientation: 0,
	    origin: 0,
	    overflow: 0,
	    overlinePosition: 'overline-position',
	    overlineThickness: 'overline-thickness',
	    paintOrder: 'paint-order',
	    panose1: 'panose-1',
	    pathLength: 'pathLength',
	    patternContentUnits: 'patternContentUnits',
	    patternTransform: 'patternTransform',
	    patternUnits: 'patternUnits',
	    pointerEvents: 'pointer-events',
	    points: 0,
	    pointsAtX: 'pointsAtX',
	    pointsAtY: 'pointsAtY',
	    pointsAtZ: 'pointsAtZ',
	    preserveAlpha: 'preserveAlpha',
	    preserveAspectRatio: 'preserveAspectRatio',
	    primitiveUnits: 'primitiveUnits',
	    r: 0,
	    radius: 0,
	    refX: 'refX',
	    refY: 'refY',
	    renderingIntent: 'rendering-intent',
	    repeatCount: 'repeatCount',
	    repeatDur: 'repeatDur',
	    requiredExtensions: 'requiredExtensions',
	    requiredFeatures: 'requiredFeatures',
	    restart: 0,
	    result: 0,
	    rotate: 0,
	    rx: 0,
	    ry: 0,
	    scale: 0,
	    seed: 0,
	    shapeRendering: 'shape-rendering',
	    slope: 0,
	    spacing: 0,
	    specularConstant: 'specularConstant',
	    specularExponent: 'specularExponent',
	    speed: 0,
	    spreadMethod: 'spreadMethod',
	    startOffset: 'startOffset',
	    stdDeviation: 'stdDeviation',
	    stemh: 0,
	    stemv: 0,
	    stitchTiles: 'stitchTiles',
	    stopColor: 'stop-color',
	    stopOpacity: 'stop-opacity',
	    strikethroughPosition: 'strikethrough-position',
	    strikethroughThickness: 'strikethrough-thickness',
	    string: 0,
	    stroke: 0,
	    strokeDasharray: 'stroke-dasharray',
	    strokeDashoffset: 'stroke-dashoffset',
	    strokeLinecap: 'stroke-linecap',
	    strokeLinejoin: 'stroke-linejoin',
	    strokeMiterlimit: 'stroke-miterlimit',
	    strokeOpacity: 'stroke-opacity',
	    strokeWidth: 'stroke-width',
	    surfaceScale: 'surfaceScale',
	    systemLanguage: 'systemLanguage',
	    tableValues: 'tableValues',
	    targetX: 'targetX',
	    targetY: 'targetY',
	    textAnchor: 'text-anchor',
	    textDecoration: 'text-decoration',
	    textRendering: 'text-rendering',
	    textLength: 'textLength',
	    to: 0,
	    transform: 0,
	    u1: 0,
	    u2: 0,
	    underlinePosition: 'underline-position',
	    underlineThickness: 'underline-thickness',
	    unicode: 0,
	    unicodeBidi: 'unicode-bidi',
	    unicodeRange: 'unicode-range',
	    unitsPerEm: 'units-per-em',
	    vAlphabetic: 'v-alphabetic',
	    vHanging: 'v-hanging',
	    vIdeographic: 'v-ideographic',
	    vMathematical: 'v-mathematical',
	    values: 0,
	    vectorEffect: 'vector-effect',
	    version: 0,
	    vertAdvY: 'vert-adv-y',
	    vertOriginX: 'vert-origin-x',
	    vertOriginY: 'vert-origin-y',
	    viewBox: 'viewBox',
	    viewTarget: 'viewTarget',
	    visibility: 0,
	    widths: 0,
	    wordSpacing: 'word-spacing',
	    writingMode: 'writing-mode',
	    x: 0,
	    xHeight: 'x-height',
	    x1: 0,
	    x2: 0,
	    xChannelSelector: 'xChannelSelector',
	    xlinkActuate: 'xlink:actuate',
	    xlinkArcrole: 'xlink:arcrole',
	    xlinkHref: 'xlink:href',
	    xlinkRole: 'xlink:role',
	    xlinkShow: 'xlink:show',
	    xlinkTitle: 'xlink:title',
	    xlinkType: 'xlink:type',
	    xmlBase: 'xml:base',
	    xmlns: 0,
	    xmlnsXlink: 'xmlns:xlink',
	    xmlLang: 'xml:lang',
	    xmlSpace: 'xml:space',
	    y: 0,
	    y1: 0,
	    y2: 0,
	    yChannelSelector: 'yChannelSelector',
	    z: 0,
	    zoomAndPan: 'zoomAndPan'
	};
	
	var SVGDOMPropertyConfig = {
	    props: {},
	    attrNS: {
	        xlinkActuate: xlink,
	        xlinkArcrole: xlink,
	        xlinkHref: xlink,
	        xlinkRole: xlink,
	        xlinkShow: xlink,
	        xlinkTitle: xlink,
	        xlinkType: xlink,
	        xmlBase: xml,
	        xmlLang: xml,
	        xmlSpace: xml
	    },
	    domAttrs: {},
	    domProps: {}
	};
	
	Object.keys(ATTRS).map(function (key) {
	    SVGDOMPropertyConfig.props[key] = 0;
	    if (ATTRS[key]) {
	        SVGDOMPropertyConfig.domAttrs[key] = ATTRS[key];
	    }
	});
	
	// merge html and svg config into properties
	mergeConfigToProperties(HTMLDOMPropertyConfig);
	mergeConfigToProperties(SVGDOMPropertyConfig);
	
	function mergeConfigToProperties(config) {
	    var
	    // all react/react-lite supporting property names in here
	    props = config.props;
	    var
	    // attributes namespace in here
	    attrNS = config.attrNS;
	    var
	    // propName in props which should use to be dom-attribute in here
	    domAttrs = config.domAttrs;
	    var
	    // propName in props which should use to be dom-property in here
	    domProps = config.domProps;
	
	    for (var propName in props) {
	        if (!props.hasOwnProperty(propName)) {
	            continue;
	        }
	        var propConfig = props[propName];
	        properties[propName] = {
	            attributeName: domAttrs.hasOwnProperty(propName) ? domAttrs[propName] : propName.toLowerCase(),
	            propertyName: domProps.hasOwnProperty(propName) ? domProps[propName] : propName,
	            attributeNamespace: attrNS.hasOwnProperty(propName) ? attrNS[propName] : null,
	            mustUseProperty: checkMask(propConfig, MUST_USE_PROPERTY),
	            hasBooleanValue: checkMask(propConfig, HAS_BOOLEAN_VALUE),
	            hasNumericValue: checkMask(propConfig, HAS_NUMERIC_VALUE),
	            hasPositiveNumericValue: checkMask(propConfig, HAS_POSITIVE_NUMERIC_VALUE),
	            hasOverloadedBooleanValue: checkMask(propConfig, HAS_OVERLOADED_BOOLEAN_VALUE)
	        };
	    }
	}
	
	function checkMask(value, bitmask) {
	    return (value & bitmask) === bitmask;
	}
	
	/**
	 * Sets the value for a property on a node.
	 *
	 * @param {DOMElement} node
	 * @param {string} name
	 * @param {*} value
	 */
	
	function setPropValue(node, name, value) {
	    var propInfo = properties.hasOwnProperty(name) && properties[name];
	    if (propInfo) {
	        // should delete value from dom
	        if (value == null || propInfo.hasBooleanValue && !value || propInfo.hasNumericValue && isNaN(value) || propInfo.hasPositiveNumericValue && value < 1 || propInfo.hasOverloadedBooleanValue && value === false) {
	            removePropValue(node, name);
	        } else if (propInfo.mustUseProperty) {
	            var propName = propInfo.propertyName;
	            // dom.value has side effect
	            if (propName !== 'value' || '' + node[propName] !== '' + value) {
	                node[propName] = value;
	            }
	        } else {
	            var attributeName = propInfo.attributeName;
	            var namespace = propInfo.attributeNamespace;
	
	            // `setAttribute` with objects becomes only `[object]` in IE8/9,
	            // ('' + value) makes it output the correct toString()-value.
	            if (namespace) {
	                node.setAttributeNS(namespace, attributeName, '' + value);
	            } else if (propInfo.hasBooleanValue || propInfo.hasOverloadedBooleanValue && value === true) {
	                node.setAttribute(attributeName, '');
	            } else {
	                node.setAttribute(attributeName, '' + value);
	            }
	        }
	    } else if (isCustomAttribute(name) && VALID_ATTRIBUTE_NAME_REGEX.test(name)) {
	        if (value == null) {
	            node.removeAttribute(name);
	        } else {
	            node.setAttribute(name, '' + value);
	        }
	    }
	}
	
	/**
	 * Deletes the value for a property on a node.
	 *
	 * @param {DOMElement} node
	 * @param {string} name
	 */
	
	function removePropValue(node, name) {
	    var propInfo = properties.hasOwnProperty(name) && properties[name];
	    if (propInfo) {
	        if (propInfo.mustUseProperty) {
	            var propName = propInfo.propertyName;
	            if (propInfo.hasBooleanValue) {
	                node[propName] = false;
	            } else {
	                // dom.value accept string value has side effect
	                if (propName !== 'value' || '' + node[propName] !== '') {
	                    node[propName] = '';
	                }
	            }
	        } else {
	            node.removeAttribute(propInfo.attributeName);
	        }
	    } else if (isCustomAttribute(name)) {
	        node.removeAttribute(name);
	    }
	}
	
	function isFn(obj) {
	    return typeof obj === 'function';
	}
	
	var isArr = Array.isArray;
	
	function noop() {}
	
	function identity(obj) {
	    return obj;
	}
	
	function pipe(fn1, fn2) {
	    return function () {
	        fn1.apply(this, arguments);
	        return fn2.apply(this, arguments);
	    };
	}
	
	function addItem(list, item) {
	    list[list.length] = item;
	}
	
	function flatEach(list, iteratee, a) {
	    var len = list.length;
	    var i = -1;
	
	    while (len--) {
	        var item = list[++i];
	        if (isArr(item)) {
	            flatEach(item, iteratee, a);
	        } else {
	            iteratee(item, a);
	        }
	    }
	}
	
	function extend(to, from) {
	    if (!from) {
	        return to;
	    }
	    var keys = Object.keys(from);
	    var i = keys.length;
	    while (i--) {
	        to[keys[i]] = from[keys[i]];
	    }
	    return to;
	}
	
	var uid = 0;
	
	function getUid() {
	    return ++uid;
	}
	
	var EVENT_KEYS = /^on/i;
	
	function setProp(elem, key, value, isCustomComponent) {
	    if (EVENT_KEYS.test(key)) {
	        addEvent(elem, key, value);
	    } else if (key === 'style') {
	        setStyle(elem.style, value);
	    } else if (key === HTML_KEY) {
	        if (value && value.__html != null) {
	            elem.innerHTML = value.__html;
	        }
	    } else if (isCustomComponent) {
	        if (value == null) {
	            elem.removeAttribute(key);
	        } else {
	            elem.setAttribute(key, '' + value);
	        }
	    } else {
	        setPropValue(elem, key, value);
	    }
	}
	
	function removeProp(elem, key, oldValue, isCustomComponent) {
	    if (EVENT_KEYS.test(key)) {
	        removeEvent(elem, key);
	    } else if (key === 'style') {
	        removeStyle(elem.style, oldValue);
	    } else if (key === HTML_KEY) {
	        elem.innerHTML = '';
	    } else if (isCustomComponent) {
	        elem.removeAttribute(key);
	    } else {
	        removePropValue(elem, key);
	    }
	}
	
	function patchProp(elem, key, value, oldValue, isCustomComponent) {
	    if (key === 'value' || key === 'checked') {
	        oldValue = elem[key];
	    }
	    if (value === oldValue) {
	        return;
	    }
	    if (value === undefined) {
	        removeProp(elem, key, oldValue, isCustomComponent);
	        return;
	    }
	    if (key === 'style') {
	        patchStyle(elem.style, oldValue, value);
	    } else {
	        setProp(elem, key, value, isCustomComponent);
	    }
	}
	
	function setProps(elem, props, isCustomComponent) {
	    for (var key in props) {
	        if (key !== 'children') {
	            setProp(elem, key, props[key], isCustomComponent);
	        }
	    }
	}
	
	function patchProps(elem, props, newProps, isCustomComponent) {
	    for (var key in props) {
	        if (key !== 'children') {
	            if (newProps.hasOwnProperty(key)) {
	                patchProp(elem, key, newProps[key], props[key], isCustomComponent);
	            } else {
	                removeProp(elem, key, props[key], isCustomComponent);
	            }
	        }
	    }
	    for (var key in newProps) {
	        if (key !== 'children' && !props.hasOwnProperty(key)) {
	            setProp(elem, key, newProps[key], isCustomComponent);
	        }
	    }
	}
	
	if (!Object.freeze) {
	    Object.freeze = identity;
	}
	
	function isValidContainer(node) {
		return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
	}
	
	var pendingRendering = {};
	var vnodeStore = {};
	function renderTreeIntoContainer(vnode, container, callback, parentContext) {
		if (!vnode.vtype) {
			throw new Error('cannot render ' + vnode + ' to container');
		}
		if (!isValidContainer(container)) {
			throw new Error('container ' + container + ' is not a DOM element');
		}
		var id = container[COMPONENT_ID] || (container[COMPONENT_ID] = getUid());
		var argsCache = pendingRendering[id];
	
		// component lify cycle method maybe call root rendering
		// should bundle them and render by only one time
		if (argsCache) {
			if (argsCache === true) {
				pendingRendering[id] = argsCache = { vnode: vnode, callback: callback, parentContext: parentContext };
			} else {
				argsCache.vnode = vnode;
				argsCache.parentContext = parentContext;
				argsCache.callback = argsCache.callback ? pipe(argsCache.callback, callback) : callback;
			}
			return;
		}
	
		pendingRendering[id] = true;
		var oldVnode = null;
		var rootNode = null;
		if (oldVnode = vnodeStore[id]) {
			rootNode = compareTwoVnodes(oldVnode, vnode, container.firstChild, parentContext);
		} else {
			rootNode = initVnode(vnode, parentContext, container.namespaceURI);
			var childNode = null;
			while (childNode = container.lastChild) {
				container.removeChild(childNode);
			}
			container.appendChild(rootNode);
		}
		vnodeStore[id] = vnode;
		var isPending = updateQueue.isPending;
		updateQueue.isPending = true;
		clearPending();
		argsCache = pendingRendering[id];
		delete pendingRendering[id];
	
		var result = null;
		if (typeof argsCache === 'object') {
			result = renderTreeIntoContainer(argsCache.vnode, container, argsCache.callback, argsCache.parentContext);
		} else if (vnode.vtype === VELEMENT) {
			result = rootNode;
		} else if (vnode.vtype === VCOMPONENT) {
			result = rootNode.cache[vnode.uid];
		}
	
		if (!isPending) {
			updateQueue.isPending = false;
			updateQueue.batchUpdate();
		}
	
		if (callback) {
			callback.call(result);
		}
	
		return result;
	}
	
	function render(vnode, container, callback) {
		return renderTreeIntoContainer(vnode, container, callback);
	}
	
	function unstable_renderSubtreeIntoContainer(parentComponent, subVnode, container, callback) {
		var context = parentComponent.$cache.parentContext;
		return renderTreeIntoContainer(subVnode, container, callback, context);
	}
	
	function unmountComponentAtNode(container) {
		if (!container.nodeName) {
			throw new Error('expect node');
		}
		var id = container[COMPONENT_ID];
		var vnode = null;
		if (vnode = vnodeStore[id]) {
			destroyVnode(vnode, container.firstChild);
			container.removeChild(container.firstChild);
			delete vnodeStore[id];
			return true;
		}
		return false;
	}
	
	function findDOMNode(node) {
		if (node == null) {
			return null;
		}
		if (node.nodeName) {
			return node;
		}
		var component = node;
		// if component.node equal to false, component must be unmounted
		if (component.getDOMNode && component.$cache.isMounted) {
			return component.getDOMNode();
		}
		throw new Error('findDOMNode can not find Node');
	}
	
	var ReactDOM = Object.freeze({
		render: render,
		unstable_renderSubtreeIntoContainer: unstable_renderSubtreeIntoContainer,
		unmountComponentAtNode: unmountComponentAtNode,
		findDOMNode: findDOMNode
	});
	
	function createElement(type, props, children) {
		var vtype = null;
		if (typeof type === 'string') {
			vtype = VELEMENT;
		} else if (typeof type === 'function') {
			if (type.prototype && type.prototype.isReactComponent) {
				vtype = VCOMPONENT;
			} else {
				vtype = VSTATELESS;
			}
		} else {
			throw new Error('React.createElement: unexpect type [ ' + type + ' ]');
		}
	
		var key = null;
		var ref = null;
		var finalProps = {};
		if (props != null) {
			for (var propKey in props) {
				if (!props.hasOwnProperty(propKey)) {
					continue;
				}
				if (propKey === 'key') {
					if (props.key !== undefined) {
						key = '' + props.key;
					}
				} else if (propKey === 'ref') {
					if (props.ref !== undefined) {
						ref = props.ref;
					}
				} else {
					finalProps[propKey] = props[propKey];
				}
			}
		}
	
		var defaultProps = type.defaultProps;
	
		if (defaultProps) {
			for (var propKey in defaultProps) {
				if (finalProps[propKey] === undefined) {
					finalProps[propKey] = defaultProps[propKey];
				}
			}
		}
	
		var argsLen = arguments.length;
		var finalChildren = children;
	
		if (argsLen > 3) {
			finalChildren = Array(argsLen - 2);
			for (var i = 2; i < argsLen; i++) {
				finalChildren[i - 2] = arguments[i];
			}
		}
	
		if (finalChildren !== undefined) {
			finalProps.children = finalChildren;
		}
	
		return createVnode(vtype, type, finalProps, key, ref);
	}
	
	function isValidElement(obj) {
		return obj != null && !!obj.vtype;
	}
	
	function cloneElement(originElem, props) {
		var type = originElem.type;
		var key = originElem.key;
		var ref = originElem.ref;
	
		var newProps = extend(extend({ key: key, ref: ref }, originElem.props), props);
	
		for (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
			children[_key - 2] = arguments[_key];
		}
	
		var vnode = createElement.apply(undefined, [type, newProps].concat(children));
		if (vnode.ref === originElem.ref) {
			vnode.refs = originElem.refs;
		}
		return vnode;
	}
	
	function createFactory(type) {
		var factory = function factory() {
			for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
				args[_key2] = arguments[_key2];
			}
	
			return createElement.apply(undefined, [type].concat(args));
		};
		factory.type = type;
		return factory;
	}
	
	var tagNames = 'a|abbr|address|area|article|aside|audio|b|base|bdi|bdo|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|data|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|h1|h2|h3|h4|h5|h6|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|keygen|label|legend|li|link|main|map|mark|menu|menuitem|meta|meter|nav|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|small|source|span|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|track|u|ul|var|video|wbr|circle|clipPath|defs|ellipse|g|image|line|linearGradient|mask|path|pattern|polygon|polyline|radialGradient|rect|stop|svg|text|tspan';
	var DOM = {};
	tagNames.split('|').forEach(function (tagName) {
		DOM[tagName] = createFactory(tagName);
	});
	
	var check = function check() {
	    return check;
	};
	check.isRequired = check;
	var PropTypes = {
	    "array": check,
	    "bool": check,
	    "func": check,
	    "number": check,
	    "object": check,
	    "string": check,
	    "any": check,
	    "arrayOf": check,
	    "element": check,
	    "instanceOf": check,
	    "node": check,
	    "objectOf": check,
	    "oneOf": check,
	    "oneOfType": check,
	    "shape": check
	};
	
	function only(children) {
		if (isValidElement(children)) {
			return children;
		}
		throw new Error('expect only one child');
	}
	
	function forEach(children, iteratee, context) {
		if (children == null) {
			return children;
		}
		var index = 0;
		if (isArr(children)) {
			flatEach(children, function (child) {
				// from traverseAllChildrenImpl in react
				var type = typeof child;
				if (type === 'undefined' || type === 'boolean') {
					// All of the above are perceived as null.
					child = null;
				}
	
				iteratee.call(context, child, index++);
			});
		} else {
			// from traverseAllChildrenImpl in react
			var type = typeof children;
			if (type === 'undefined' || type === 'boolean') {
				// All of the above are perceived as null.
				children = null;
			}
			iteratee.call(context, children, index);
		}
	}
	
	function map(children, iteratee, context) {
		if (children == null) {
			return children;
		}
		var store = [];
		var keyMap = {};
		forEach(children, function (child, index) {
			var data = {};
			data.child = iteratee.call(context, child, index) || child;
			data.isEqual = data.child === child;
			var key = data.key = getKey(child, index);
			if (keyMap.hasOwnProperty(key)) {
				keyMap[key] += 1;
			} else {
				keyMap[key] = 0;
			}
			data.index = keyMap[key];
			addItem(store, data);
		});
		var result = [];
		store.forEach(function (_ref) {
			var child = _ref.child;
			var key = _ref.key;
			var index = _ref.index;
			var isEqual = _ref.isEqual;
	
			if (child == null || typeof child === 'boolean') {
				return;
			}
			if (!isValidElement(child) || key == null) {
				addItem(result, child);
				return;
			}
			if (keyMap[key] !== 0) {
				key += ':' + index;
			}
			if (!isEqual) {
				key = escapeUserProvidedKey(child.key || '') + '/' + key;
			}
			child = cloneElement(child, { key: key });
			addItem(result, child);
		});
		return result;
	}
	
	function count(children) {
		var count = 0;
		forEach(children, function () {
			count++;
		});
		return count;
	}
	
	function toArray(children) {
		return map(children, identity) || [];
	}
	
	function getKey(child, index) {
		var key = undefined;
		if (isValidElement(child) && typeof child.key === 'string') {
			key = '.$' + child.key;
		} else {
			key = '.' + index.toString(36);
		}
		return key;
	}
	
	var userProvidedKeyEscapeRegex = /\/(?!\/)/g;
	function escapeUserProvidedKey(text) {
		return ('' + text).replace(userProvidedKeyEscapeRegex, '//');
	}
	
	var Children = Object.freeze({
		only: only,
		forEach: forEach,
		map: map,
		count: count,
		toArray: toArray
	});
	
	function eachMixin(mixins, iteratee) {
		mixins.forEach(function (mixin) {
			if (mixin) {
				if (isArr(mixin.mixins)) {
					eachMixin(mixin.mixins, iteratee);
				}
				iteratee(mixin);
			}
		});
	}
	
	function combineMixinToProto(proto, mixin) {
		for (var key in mixin) {
			if (!mixin.hasOwnProperty(key)) {
				continue;
			}
			var value = mixin[key];
			if (key === 'getInitialState') {
				addItem(proto.$getInitialStates, value);
				continue;
			}
			var curValue = proto[key];
			if (isFn(curValue) && isFn(value)) {
				proto[key] = pipe(curValue, value);
			} else {
				proto[key] = value;
			}
		}
	}
	
	function combineMixinToClass(Component, mixin) {
		if (mixin.propTypes) {
			Component.propTypes = Component.propTypes || {};
			extend(Component.propTypes, mixin.propTypes);
		}
		if (mixin.contextTypes) {
			Component.contextTypes = Component.contextTypes || {};
			extend(Component.contextTypes, mixin.contextTypes);
		}
		extend(Component, mixin.statics);
		if (isFn(mixin.getDefaultProps)) {
			Component.defaultProps = Component.defaultProps || {};
			extend(Component.defaultProps, mixin.getDefaultProps());
		}
	}
	
	function bindContext(obj, source) {
		for (var key in source) {
			if (source.hasOwnProperty(key)) {
				if (isFn(source[key])) {
					obj[key] = source[key].bind(obj);
				}
			}
		}
	}
	
	var Facade = function Facade() {};
	Facade.prototype = Component.prototype;
	
	function getInitialState() {
		var _this = this;
	
		var state = {};
		var setState = this.setState;
		this.setState = Facade;
		this.$getInitialStates.forEach(function (getInitialState) {
			if (isFn(getInitialState)) {
				extend(state, getInitialState.call(_this));
			}
		});
		this.setState = setState;
		return state;
	}
	function createClass(spec) {
		if (!isFn(spec.render)) {
			throw new Error('createClass: spec.render is not function');
		}
		var specMixins = spec.mixins || [];
		var mixins = specMixins.concat(spec);
		spec.mixins = null;
		function Klass(props, context) {
			Component.call(this, props, context);
			this.constructor = Klass;
			spec.autobind !== false && bindContext(this, Klass.prototype);
			this.state = this.getInitialState() || this.state;
		}
		Klass.displayName = spec.displayName;
		var proto = Klass.prototype = new Facade();
		proto.$getInitialStates = [];
		eachMixin(mixins, function (mixin) {
			combineMixinToProto(proto, mixin);
			combineMixinToClass(Klass, mixin);
		});
		proto.getInitialState = getInitialState;
		spec.mixins = specMixins;
		return Klass;
	}
	
	function shallowEqual(objA, objB) {
	    if (objA === objB) {
	        return true;
	    }
	
	    if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	        return false;
	    }
	
	    var keysA = Object.keys(objA);
	    var keysB = Object.keys(objB);
	
	    if (keysA.length !== keysB.length) {
	        return false;
	    }
	
	    // Test for A's keys different from B.
	    for (var i = 0; i < keysA.length; i++) {
	        if (!objB.hasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
	            return false;
	        }
	    }
	
	    return true;
	}
	
	function PureComponent(props, context) {
		Component.call(this, props, context);
	}
	
	PureComponent.prototype = Object.create(Component.prototype);
	PureComponent.prototype.constructor = PureComponent;
	PureComponent.prototype.isPureReactComponent = true;
	PureComponent.prototype.shouldComponentUpdate = shallowCompare;
	
	function shallowCompare(nextProps, nextState) {
		return !shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState);
	}
	
	var React = extend({
	    version: '0.15.1',
	    cloneElement: cloneElement,
	    isValidElement: isValidElement,
	    createElement: createElement,
	    createFactory: createFactory,
	    Component: Component,
	    PureComponent: PureComponent,
	    createClass: createClass,
	    Children: Children,
	    PropTypes: PropTypes,
	    DOM: DOM
	}, ReactDOM);
	
	React.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOM;
	
	module.exports = React;

/***/ }),
/* 101 */
/*!******************************************!*\
  !*** ./public_ufe/js/build/asyncList.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
		TestTarget: function TestTarget() {
			return __webpack_require__(/*! ../components/TestTarget/TestTarget.jsx */ 102);
		},
		TestCertona: function TestCertona() {
			return __webpack_require__(/*! ../components/TestCertona/TestCertona.jsx */ 366);
		},
		InlineBasket: function InlineBasket() {
			return __webpack_require__(/*! ../components/InlineBasket/InlineBasket.jsx */ 368);
		},
		AccountHeader: function AccountHeader() {
			return __webpack_require__(/*! ../components/Header/Nav/Account/AccountHeader/AccountHeader.jsx */ 399);
		}
	};

/***/ }),
/* 102 */
/*!************************************************************!*\
  !*** ./public_ufe/js/components/TestTarget/TestTarget.jsx ***!
  \************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	var Base = __webpack_require__(/*! components/Base/Base */ 105);
	var BccStyleWrapper = __webpack_require__(/*! components/Bcc/BccStyleWrapper/BccStyleWrapper */ 142);
	
	// TODO: Move empty to components folder
	var Empty = __webpack_require__(/*! pages/Empty/Empty */ 144);
	
	var TestTarget = function TestTarget() {
	    this.state = {
	        displayComponent: Empty,
	        updateProps: null,
	        componentHidden: null
	    };
	};
	
	TestTarget.prototype.asyncRender = 'TestTarget';
	
	TestTarget.prototype.propTypes = {
	    testName: React.PropTypes.string.isRequired,
	    testComponent: React.PropTypes.string.isRequired
	};
	
	TestTarget.prototype.getDefaultProps = function () {
	    return {
	        testEnabled: true
	    };
	};
	
	TestTarget.prototype.render = function () {
	    var _props = this.props,
	        is = _props.is,
	        style = _props.style,
	        testComponent = _props.testComponent,
	        testName = _props.testName,
	        testEnabled = _props.testEnabled,
	        index = _props.index,
	        isTopNav = _props.isTopNav,
	        isBcc = _props.isBcc,
	        defaultProps = _objectWithoutProperties(_props, ['is', 'style', 'testComponent', 'testName', 'testEnabled', 'index', 'isTopNav', 'isBcc']);
	
	    var componentProps = void 0;
	
	    if (isBcc) {
	
	        /* BCC component renders with state.updateProps in swapping tests, and in the case of
	        show & hide tests the component renders with its original props. */
	        componentProps = this.state.updateProps ? this.state.updateProps : defaultProps;
	    } else {
	        componentProps = this.state.updateProps ? Object.assign({}, defaultProps, this.state.updateProps) : defaultProps;
	    }
	
	    var Component = this.state.displayComponent ? React.createElement(this.state.displayComponent, componentProps) : null;
	
	    if (isBcc && !this.state.componentHidden) {
	        Component = React.createElement(
	            BccStyleWrapper,
	            {
	                key: index,
	                isTopNav: isTopNav,
	                customStyle: componentProps.styleList },
	            Component
	        );
	    }
	
	    return React.createElement(
	        Base,
	        {
	            is: is,
	            _css: style },
	        Component
	    );
	};
	
	// Added by sephora-jsx-loader.js
	TestTarget.prototype.path = 'TestTarget';
	// Added by sephora-jsx-loader.js
	Object.assign(TestTarget.prototype, __webpack_require__(/*! ./TestTarget.c.js */ 145));
	var originalDidMount = TestTarget.prototype.componentDidMount;
	TestTarget.prototype.componentDidMount = function () {
	    //console.log('Non-root componentDidMount Fired: TestTarget');
	    if (originalDidMount) originalDidMount.apply(this);
	    if (TestTarget.prototype.ctrlr) TestTarget.prototype.ctrlr.apply(this, this.props.ctrlrArgs);
	};
	//console.log('Applied non-root componentDidMount: TestTarget');
	// Added by sephora-jsx-loader.js
	TestTarget.prototype.hasCtrlr = 'true';
	// Added by sephora-jsx-loader.js
	TestTarget.prototype.class = 'TestTarget';
	// Added by sephora-jsx-loader.js
	TestTarget.prototype.getInitialState = function () {
	    TestTarget.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	TestTarget.prototype.render = wrapComponentRender(TestTarget.prototype.render);
	// Added by sephora-jsx-loader.js
	var TestTargetClass = React.createClass(TestTarget.prototype);
	// Added by sephora-jsx-loader.js
	TestTargetClass.prototype.classRef = TestTargetClass;
	// Added by sephora-jsx-loader.js
	Object.assign(TestTargetClass, TestTarget);
	// Added by sephora-jsx-loader.js
	module.exports = TestTargetClass;

/***/ }),
/* 103 */
/*!**************************************************************!*\
  !*** ./public_ufe/js/utils/framework/wrapComponentRender.js ***!
  \**************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	/*eslint no-console: 0*/
	/*eslint max-len: 0*/
	/*eslint no-invalid-this: 0*/
	/*eslint brace-style: 0*/
	/*eslint quotes: 0*/
	
	module.exports = function () {
	
	    var React = __webpack_require__(/*! react */ 100),
	        ReactDOM = __webpack_require__(/*! react-dom/server */ 100),
	        Constants = __webpack_require__(/*! utils/framework/Constants */ 104);
	
	    var renderServerErrors = global.process.env.UFE_ENV !== Constants.UFE_ENV_PRODUCTION;
	    /* Backend Component Rendering */
	    /* In order to step through react as it render's elements put a stop point at
	     * the start of ReactReconciler.mountComponent. That's line 39 in ReactReconciler.js.
	     * This is called once for every ReactComponent being rendered. If a custom component
	     * is being rendered it will be called twice, once for the custom component and once for
	     * it's internal root component. */
	
	    /* Life Cycle of a component */
	    /* - React.createElement() is called passing the component class or a string reprisenting
	     *   an HTML tag, e.g. 'div'
	     * - instantiateReactComponent() receives a ReactElement and returns a "mount image"
	     * - ReactCompositeComponentMixin.mountComponent() or ReactDOMComponent.Mixin.mountComponent()
	     *   is called on the ReactElement instance. This initializes the component, renders markup,
	     *   and registers event listeners, then returns rendered markup to be inserted into the DOM.
	     * - ReactElement.type.prototype.render is called during the mounting process for
	         ReactComponents. This is the component's render function.
	     * - The render function calls its children's React.createElement() functions. The nested
	     *   nature of JSX means that createElement() will be called for child elements before their
	     *   parent element in the case of regular HTML tags, and elements being nested for
	     *   transclusion in component tags. A component's non-transcluded child elements will be
	     *   called when it's render function is run. This can mean the order in which react
	     *   element's are created is somewhat unpredictable, but has the benefit of not initializing
	     *   the bulk of a component until it is rendered.
	     * - If the element being called is a component:
	     *   - instantiateReactComponent() is now called on its root element
	     *   - ReactDOMComponent.Mixin.mountComponent() is called for the root element
	     *   - ReactMultiChild.Mixin.mountChildren() is called for the root element, which calls
	     *     instantiateReactComponent() for each child element.
	     *   - ReactCompositeComponentMixin.mountComponent() or
	     *     ReactDOMComponent.Mixin.mountComponent() is called for each element
	     *   - ReactElement.type.prototype.render is called during the mounting process and the
	     *     cycle continues
	     */
	
	    /*
	     * The following characters must be escaped to allow the component JSON to be written out as js
	     * in the page.
	     *
	     * For info no \u2028 and \u2029 see http://timelessrepo.com/json-isnt-a-javascript-subset
	     */
	    var escapedCharacters = /([\/'"\u2028\u2029\\])/g;
	    var isProduction = ("production") === 'production';
	
	    var checkForRoot = null,
	        rootCompCount = 0;
	
	    function getRootCompCount() {
	        return rootCompCount;
	    }
	
	    function setRootCompCount(count) {
	        rootCompCount = count;
	    }
	
	    function wrapComponentRender(originalRender) {
	
	        var renderWrapper = function renderWrapper() {
	
	            var originalVDomElement = void 0,
	                error = void 0,
	                isRootComponent = void 0,
	                runOriginalRender = function runOriginalRender(target) {
	
	                if (Sephora.isRootRender && (target.hasCtrlr || target.isForcedRoot)) {
	
	                    /* TODO: Use logger / debug switch when ILLUPH-82156 is done. */
	                    if (!isProduction && checkForRoot && target.asyncRender) {
	
	                        /**
	                         * Async components will not be rendered asynchronously if the
	                         * component is child of a root component.
	                         * See ILLUPH-82153 for more information.
	                         */
	                        console.warn('Async component [' + target.class + '] is child of a root component, it will not render asynchronously.');
	                    }
	
	                    if (target.postLoad || target.isForcedRoot) {
	
	                        isRootComponent = true;
	                        return React.createElement('div');
	                    } else if (!checkForRoot) {
	
	                        isRootComponent = true;
	
	                        // This disables check for root so that render functions run by
	                        // the subsequent ReactDOM.renderToString don't go through this same
	                        // function.
	                        checkForRoot = target;
	
	                        var createdReactElement = React.createElement(target.classRef, target.props),
	                            componentHTML = ReactDOM.renderToString(createdReactElement),
	                            compiledComponent = React.createElement('div', {
	                            dangerouslySetInnerHTML: {
	                                __html: componentHTML
	                            }
	                        });
	
	                        checkForRoot = null;
	
	                        return compiledComponent;
	                    }
	                }
	
	                return originalRender.apply(target, arguments);
	            };
	
	            // WRAP PRODUCTION COMPONENT RENDERING IN TRY...CATCH... //
	            // ***************************************************** //
	            if (isProduction) {
	                try {
	                    originalVDomElement = runOriginalRender(this);
	                } catch (e) {
	                    error = e;
	                    if (renderServerErrors && Sephora.serverErrors) {
	                        Sephora.serverErrors.push({
	                            name: error.name,
	                            message: error.message,
	                            stack: error.stack
	                        });
	                    }
	                    console.error(error);
	                    return null;
	                }
	            } else {
	                originalVDomElement = runOriginalRender(this);
	            }
	
	            var newVDomElement = void 0,
	                rootComp = void 0,
	                compStore = void 0,
	                parentCompRef = void 0;
	
	            // IF RENDER RETURNS 'NULL' OR 'FALSE' //
	            // *********************************** //
	            // React allows you to pass 'null' or 'false' if you don't want the component to
	            // render. When this happens server side react adds an empty div with the comment
	            // <!-- react-empty: 1 -->
	            // Since we still need to hook up our component on the front end we instead generate
	            // an empty div to act as our front end hookup target element. For more information see
	            // ILLUPH-76784.
	            if (Sephora.isRootRender && (this.hasCtrlr || this.isForcedRoot) && !checkForRoot && originalVDomElement === null) {
	                originalVDomElement = React.createElement('div');
	            } else if (originalVDomElement === null) {
	                return null;
	            }
	            // *********************************** //
	
	            // Create a copy of the vDOM element, and vDom element props. This is necessary to
	            // unfreeze it
	            newVDomElement = Object.assign({}, originalVDomElement);
	            newVDomElement.props = Object.assign({}, originalVDomElement.props);
	
	            // If rendering with regular react-lite
	            if (!Sephora.isRootRender) {
	                compStore = newVDomElement.props;
	                parentCompRef = this.props.comps;
	                // If rendering with regular React
	            } else {
	                compStore = newVDomElement;
	                parentCompRef = this._reactInternalInstance._currentElement.comps;
	            }
	
	            // If the initial element of the root component is itself a component, e.g.
	            // <Component>, rather than an html element, e.g. <div>
	            // wrap the render function of the initial element instead.
	            if (typeof newVDomElement.type === 'function') {
	
	                // Unwrap this component class's render function
	                // this.__proto__.render = originalRender;
	
	                // Wrap child component class's render function
	                // originalRender = newVDomElement.type.prototype.render;
	                // newVDomElement.type.prototype.render = wrapRender;
	
	                // If the initial element of the initial element component is also a component
	                // pass on the original root component. This will keep being passed
	                // down the tree until a standard HTML element is reached.
	                if (parentCompRef) {
	                    parentCompRef.push(this);
	                    compStore.comps = parentCompRef;
	                } else {
	                    compStore.comps = [this];
	                }
	
	                // Refreeze vDomElement
	                if (Sephora.isRootRender) {
	                    Object.freeze(newVDomElement);
	                }
	
	                return newVDomElement;
	            }
	            // If the initial element is a standard HTML element and this component is the
	            // initial element of another component
	            else if (parentCompRef) {
	                    // Set root component to the top level component instance
	                    parentCompRef.push(this);
	                    compStore.comps = parentCompRef;
	                }
	                // This root component has a default HTML element as its initial element and can
	                // wrap its own render function
	                else {
	                        compStore.comps = [this];
	                    }
	
	            rootComp = compStore.comps[0];
	
	            // LINK REACT FROM THE SERVER TO THE CLIENT //
	            // **************************************** //
	            // TODO: Checkout markup = ReactMarkupChecksum.addChecksumToMarkup(markup); to see if they have any helper functions for adding content to rendered HTML strings
	            if (Sephora.isRootRender && isRootComponent) {
	                if (!rootComp.asyncRender || Sephora.isThirdPartySite) {
	
	                    // Assign component a unique sephora id for linking it up in the front end from linkJSON
	                    var id = rootCompCount++;
	                    newVDomElement.props = {
	                        'data-sephid': id
	                    };
	                    Object.assign(newVDomElement.props, originalVDomElement.props);
	
	                    if (rootComp.props.children) {
	                        console.error(rootComp + ': Component should not use transclusion. It is not possible to pass this.props.children between server and client.\n' + rootComp.class + ' at data-sephid=' + id + ' will not render with its props client side.');
	                        rootComp.props = null;
	                    }
	
	                    if (rootComp.hasCtrlr || rootComp.isForcedRoot) {
	                        // Hookup JSON is added to the index prototype so that it can be rendered after all the other components are finished rendering.
	                        // Add component to linkJSON so inflate comps knows it needs to be linked up on the front end
	                        Sephora.linkJSON.push({
	                            id: id,
	                            class: rootComp.class,
	                            path: rootComp.path,
	                            props: rootComp.props,
	                            postload: rootComp.postLoad,
	                            pageClientRender: rootComp.pageClientRender
	                        });
	                    } else {
	                        console.error('wrapComponentRender: The component "' + this.class + '" inherits from root parent component "' + rootComp.class + '". ' + rootComp.class + ' is not recognized as a root component since it has no controller and does not use isForcedRoot. Setup ' + rootComp.class + ' as a root component or wrap ' + this.class + ' in a native html element.');
	                    }
	                } else {
	
	                    // TODO: Leave the code below commented out for now. Its likely to be useful in future refactors.
	                    // newVDomElement.props = Object.assign({}, originalVDomElement.props);
	                    //
	                    // // Duplicate component's children property
	                    // var children = newVDomElement.props.children;
	                    // if (children) {
	                    //     children = [].concat(children);
	                    // } else {
	                    //     children = [];
	                    // }
	                    //
	                    // // Add script element as the last child of the component to tell inflate comps to render this component ASAP
	                    // // This is for high priority components that require personalized data to render
	                    // children.push(React.createElement('script', {
	                    //     dangerouslySetInnerHTML: {
	                    //         __html: 'Sephora.Util.InflatorComps.queue(\'' + rootComp.class + '\', \'' + JSON.stringify(rootComp.props) + '\', \'' + rootComp.asyncRender + '\');'
	                    //     }
	                    // }));
	                    //
	                    // newVDomElement.props.children = children;
	
	                    newVDomElement.props.dangerouslySetInnerHTML.__html += '<script>Sephora.Util.InflatorComps.queue(\'' + rootComp.class + '\', \'' + JSON.stringify(rootComp.props).replace(escapedCharacters, "\\$1") + '\', \'' + rootComp.asyncRender + '\');</script>';
	                }
	            }
	
	            /* DISPLAY COMPONENT NAMES AND UNIQUE IDS FOR AUTOMATED TESTING
	             * This is enabled by setting AUTOMATION_TARGETS=true when starting node
	             * Wrap react so that component names are added to component elements
	             * This is used in development mode and also as targeting for the automated testing
	             team */
	            if (!isRootComponent && Sephora.debug && Sephora.debug.displayAutomationAttr) {
	                // for each new component add more line here [Name of Component, Path To Props]
	                var uidProperties = new Map([['BccImage', 'useMap'], ['ProductItem', 'productId:skuId'], // Couple Props
	                ['QuickLookModal', 'product.productId:currentSku.skuId'] // Props In Objects
	                ]);
	                // Functions should only be added to WrapReact when server initializes.
	                // Adding a function when requests are recieved will cause a memory leak.
	                newVDomElement.props['data-comp'] = compStore.comps.map(function (instance) {
	                    return instance.class;
	                }).join(' ');
	                // Only the exact\last Component class matters
	                var uidProperty = uidProperties.get(compStore.comps[0].class);
	                if (uidProperty) {
	                    uidProperty = uidProperty.split(':');
	                    var uidString = '';
	                    uidProperty.forEach(function (uidPropPath) {
	                        var uidPropPathArr = uidPropPath.split('.');
	                        var uidValue = compStore.comps[0].props[uidPropPathArr[0]];
	                        uidPropPathArr.forEach(function (prop, i) {
	                            if (i && uidValue instanceof Object) {
	                                // pass first of them
	                                uidValue = uidValue[prop];
	                            }
	                        });
	
	                        uidValue && (uidString += uidValue + ' ');
	                    });
	
	                    if (uidString !== '') {
	                        newVDomElement.props['data-uid'] = uidString.trim();
	                    }
	                }
	            }
	
	            /* HANDLE GLOBAL ACCESS OF COMPONENTS
	             *
	             */
	            if (!Sephora.isRootRender) {
	                // If rendering component on the front end
	                for (var i = 0; i < compStore.comps.length; i++) {
	                    var compInstance = compStore.comps[i];
	                    if (compInstance.state && compInstance.state.globalRef) {
	                        // Apply global instance attributes to react element
	                        Object.assign(newVDomElement.props, compInstance.state.globalRef.attrs);
	                    }
	                }
	            } else if (!checkForRoot) {
	                // checkForRoot ensures that this is only appled to images that will not be re-rendered on the front end
	                // If rendering component on the backend put in a flag so it can be added to instances
	                // array on the front end
	                var ref = '';
	                for (var _i = 0; _i < compStore.comps.length; _i++) {
	                    var _compInstance = compStore.comps[_i];
	                    if (_compInstance.globalAccess) {
	                        ref += _compInstance.class;
	                    }
	                }
	                if (ref.length) {
	                    newVDomElement.props['data-ref'] = ref;
	                }
	            }
	
	            // Refreeze vDomElement
	            if (Sephora.isRootRender) {
	                Object.freeze(newVDomElement.props);
	                Object.freeze(newVDomElement);
	            }
	
	            // Unwrap render function. This prevents recursive issues.
	            // this.__proto__.render = originalRender;
	            return newVDomElement;
	        };
	
	        return renderWrapper;
	    }
	
	    function shouldComponentUpdate(nextProps, nextState) {
	        var MAX_DEPTH_OF_CHECK = 5;
	        var depthOfCheck = 0;
	        function isObject(val) {
	            return ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object' || typeof val === 'function') && val !== null;
	        }
	        function objectsAreEqual(first, second) {
	            var isFirstObject = isObject(first);
	            var isSecondObject = isObject(second);
	            if (!isFirstObject && !isSecondObject) {
	                // both are not objects, compare primitives
	                return first === second;
	            } else if (!isFirstObject || !isSecondObject) {
	                // one of them is not object
	                return false;
	            }
	            if (depthOfCheck >= MAX_DEPTH_OF_CHECK) {
	                // do not check object up to infinite loop
	                try {
	                    return JSON.stringify(first) === JSON.stringify(second);
	                } catch (e) {
	                    return false;
	                }
	            } else {
	                depthOfCheck++;
	            }
	            var firstProps = Object.keys(first);
	            var secondProps = Object.keys(second);
	            if (firstProps.length !== secondProps.length) {
	                // not equal amount of properties
	                return false;
	            }
	            var diffProps = firstProps.filter(function (val) {
	                return secondProps.indexOf(val) < 0;
	            });
	            if (diffProps.length) {
	                return false; // names of props are not equal
	            }
	            for (var i = 0; i < firstProps.length; i++) {
	                var key = firstProps[i];
	                var firstItem = first[key];
	                var secondItem = second[key];
	                var objectsEqual = objectsAreEqual(firstItem, secondItem);
	                if (!objectsEqual) {
	                    return false;
	                }
	            }
	            return true;
	        }
	        //var start = performance.now();
	        try {
	            var statesAreEqual = objectsAreEqual(this.state, nextState);
	            var propsAreEqual = objectsAreEqual(this.props, nextProps);
	            var shouldUpdate = !statesAreEqual || !propsAreEqual;
	            // if (shouldUpdate) {
	            //     var end = performance.now();
	            //     console.log(end + ': ' + this.class + ' shouldComponentUpdate started at ' +
	            //         start + ' and finished in ' + (end - start) + ' ms with decision to update');
	            // }
	            return shouldUpdate;
	        } catch (e) {
	            return true;
	        }
	    }
	
	    return {
	        shouldComponentUpdate: shouldComponentUpdate,
	        wrapComponentRender: wrapComponentRender,
	        setRootCompCount: setRootCompCount,
	        getRootCompCount: getRootCompCount
	    };
	}();
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 104 */
/*!****************************************************!*\
  !*** ./public_ufe/js/utils/framework/Constants.js ***!
  \****************************************************/
/***/ (function(module, exports) {

	'use strict';
	
	var INDEX_INJECTION = 'index';
	var UFE_ALL_PARTS = 'ufeAllParts';
	var TPS_UFE_ALL_PARTS = 'TPSufeAllParts';
	var RENDERTYPE = 'renderType=';
	
	var EMPTY_TEMPLATE = 'Empty/Empty';
	
	var DOCUMENT_TYPE = '<!DOCTYPE html>\n';
	
	var TARGETER_QUERY_PARAMS = '__TARGETER_QUERY_PARAM__';
	
	var ACTION_WATCHER_STATE_NAME = 'watcher';
	
	var UFE_ENV_PRODUCTION = 'PROD';
	var UFE_ENV_QA = 'QA';
	var UFE_ENV_LOCAL = 'LOCAL';
	var VALID_UFE_ENVS = [UFE_ENV_PRODUCTION, UFE_ENV_LOCAL, UFE_ENV_QA];
	
	module.exports = {
	    INDEX_INJECTION: INDEX_INJECTION,
	    EMPTY_TEMPLATE: EMPTY_TEMPLATE,
	    UFE_ALL_PARTS: UFE_ALL_PARTS,
	    TPS_UFE_ALL_PARTS: TPS_UFE_ALL_PARTS,
	    DOCUMENT_TYPE: DOCUMENT_TYPE,
	    TARGETER_QUERY_PARAMS: TARGETER_QUERY_PARAMS,
	    ACTION_WATCHER_STATE_NAME: ACTION_WATCHER_STATE_NAME,
	    UFE_ENV_PRODUCTION: UFE_ENV_PRODUCTION,
	    UFE_ENV_QA: UFE_ENV_QA,
	    UFE_ENV_LOCAL: UFE_ENV_LOCAL,
	    VALID_UFE_ENVS: VALID_UFE_ENVS,
	    RENDERTYPE: RENDERTYPE
	};

/***/ }),
/* 105 */
/*!************************************************!*\
  !*** ./public_ufe/js/components/Base/Base.jsx ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['Base'] = function Base() {
	        return BaseClass;
	    };
	}
	/**
	 * The Base component provides an API to apply padding, margin,
	 * and other styles to any component. All props for the
	 * Base component are available to other components to help
	 * with contextual styling. It is not intended for use directly,
	 * but it can be used to create other custom components.
	 */
	
	var Base = function Base() {};
	
	var _require = __webpack_require__(/*! style */ 106),
	    borderRadius = _require.borderRadius,
	    colors = _require.colors,
	    fonts = _require.fonts,
	    fontSizes = _require.fontSizes,
	    lineHeights = _require.lineHeights,
	    tracking = _require.tracking;
	
	var _require2 = __webpack_require__(/*! glamor */ 107),
	    css = _require2.css,
	    hover = _require2.hover,
	    active = _require2.active;
	
	var radii = __webpack_require__(/*! utils/radii */ 141);
	
	var borderStyle = function borderStyle(key, val) {
	    var _ref2;
	
	    if (val === undefined) {
	        return null;
	    }
	    if (val === false) {
	        return _defineProperty({}, key, 0);
	    }
	
	    var size = typeof val === 'number' ? val : 1;
	    return _ref2 = {}, _defineProperty(_ref2, key + 'Width', size), _defineProperty(_ref2, key + 'Style', 'solid'), _ref2;
	};
	
	var getStyle = function getStyle(c, val) {
	    return c[val] !== undefined ? c[val] : val;
	};
	
	Base.prototype.render = function () {
	    var _props = this.props,
	        is = _props.is,
	        baseStyle = _props.baseStyle,
	        _css = _props._css,
	        className = _props.className,
	        baseRef = _props.baseRef,
	        backgroundColor = _props.backgroundColor,
	        backgroundImage = _props.backgroundImage,
	        backgroundPosition = _props.backgroundPosition,
	        backgroundRepeat = _props.backgroundRepeat,
	        backgroundSize = _props.backgroundSize,
	        boxShadow = _props.boxShadow,
	        cursor = _props.cursor,
	        display = _props.display,
	        float = _props.float,
	        opacity = _props.opacity,
	        overflow = _props.overflow,
	        transform = _props.transform,
	        transition = _props.transition,
	        visibility = _props.visibility,
	        verticalAlign = _props.verticalAlign,
	        whiteSpace = _props.whiteSpace,
	        border = _props.border,
	        borderTop = _props.borderTop,
	        borderRight = _props.borderRight,
	        borderBottom = _props.borderBottom,
	        borderLeft = _props.borderLeft,
	        borderColor = _props.borderColor,
	        rounded = _props.rounded,
	        pill = _props.pill,
	        circle = _props.circle,
	        height = _props.height,
	        maxHeight = _props.maxHeight,
	        maxWidth = _props.maxWidth,
	        minHeight = _props.minHeight,
	        minWidth = _props.minWidth,
	        width = _props.width,
	        color = _props.color,
	        hoverColor = _props.hoverColor,
	        sansSerif = _props.sansSerif,
	        serif = _props.serif,
	        fontSize = _props.fontSize,
	        fontStyle = _props.fontStyle,
	        fontWeight = _props.fontWeight,
	        letterSpacing = _props.letterSpacing,
	        lineHeight = _props.lineHeight,
	        textAlign = _props.textAlign,
	        textDecoration = _props.textDecoration,
	        textTransform = _props.textTransform,
	        position = _props.position,
	        top = _props.top,
	        right = _props.right,
	        bottom = _props.bottom,
	        left = _props.left,
	        zIndex = _props.zIndex,
	        alignItems = _props.alignItems,
	        alignSelf = _props.alignSelf,
	        flex = _props.flex,
	        flexBasis = _props.flexBasis,
	        flexFlow = _props.flexFlow,
	        flexDirection = _props.flexDirection,
	        flexWrap = _props.flexWrap,
	        flexShrink = _props.flexShrink,
	        justifyContent = _props.justifyContent,
	        order = _props.order,
	        padding = _props.padding,
	        paddingX = _props.paddingX,
	        paddingY = _props.paddingY,
	        paddingTop = _props.paddingTop,
	        paddingRight = _props.paddingRight,
	        paddingBottom = _props.paddingBottom,
	        paddingLeft = _props.paddingLeft,
	        margin = _props.margin,
	        marginX = _props.marginX,
	        marginY = _props.marginY,
	        marginTop = _props.marginTop,
	        marginRight = _props.marginRight,
	        marginBottom = _props.marginBottom,
	        marginLeft = _props.marginLeft,
	        props = _objectWithoutProperties(_props, ['is', 'baseStyle', '_css', 'className', 'baseRef', 'backgroundColor', 'backgroundImage', 'backgroundPosition', 'backgroundRepeat', 'backgroundSize', 'boxShadow', 'cursor', 'display', 'float', 'opacity', 'overflow', 'transform', 'transition', 'visibility', 'verticalAlign', 'whiteSpace', 'border', 'borderTop', 'borderRight', 'borderBottom', 'borderLeft', 'borderColor', 'rounded', 'pill', 'circle', 'height', 'maxHeight', 'maxWidth', 'minHeight', 'minWidth', 'width', 'color', 'hoverColor', 'sansSerif', 'serif', 'fontSize', 'fontStyle', 'fontWeight', 'letterSpacing', 'lineHeight', 'textAlign', 'textDecoration', 'textTransform', 'position', 'top', 'right', 'bottom', 'left', 'zIndex', 'alignItems', 'alignSelf', 'flex', 'flexBasis', 'flexFlow', 'flexDirection', 'flexWrap', 'flexShrink', 'justifyContent', 'order', 'padding', 'paddingX', 'paddingY', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'margin', 'marginX', 'marginY', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft']);
	
	    var Component = is || 'div';
	
	    className = className ? ' ' + className : '';
	
	    var hoverActiveStyles = {
	        color: getStyle(colors, hoverColor)
	    };
	
	    var styles = [baseStyle, {
	        backgroundColor: getStyle(colors, backgroundColor),
	        backgroundImage: backgroundImage,
	        backgroundPosition: backgroundPosition,
	        backgroundRepeat: backgroundRepeat,
	        backgroundSize: backgroundSize,
	
	        boxShadow: boxShadow,
	        cursor: cursor,
	        display: display,
	        float: float,
	        opacity: opacity,
	        overflow: overflow,
	        transform: transform,
	        transition: transition,
	        visibility: visibility,
	        verticalAlign: verticalAlign,
	        whiteSpace: whiteSpace,
	        /* dimension */
	        height: height,
	        maxHeight: maxHeight,
	        maxWidth: maxWidth,
	        minHeight: minHeight,
	        minWidth: minWidth,
	        width: width ? isNaN(width) ? width : width > 1 ? width : width * 100 + '%' : null,
	        /* text */
	        color: getStyle(colors, color),
	        fontSize: getStyle(fontSizes, fontSize),
	        fontStyle: fontStyle,
	        fontWeight: fontWeight,
	        letterSpacing: getStyle(tracking, letterSpacing),
	        lineHeight: getStyle(lineHeights, lineHeight),
	        textAlign: textAlign,
	        textDecoration: textDecoration,
	        textTransform: textTransform,
	        /* position/layer */
	        position: position,
	        top: top,
	        right: right,
	        bottom: bottom,
	        left: left,
	        zIndex: zIndex,
	        /* flexbox */
	        alignItems: alignItems,
	        alignSelf: alignSelf,
	        flex: flex,
	        flexBasis: flexBasis,
	        flexFlow: flexFlow,
	        flexDirection: flexDirection,
	        flexWrap: flexWrap,
	        flexShrink: flexShrink,
	        justifyContent: justifyContent,
	        order: order === 'last' ? 99999 : order,
	        /* spacial */
	        paddingTop: paddingTop || paddingY || padding,
	        paddingRight: paddingRight || paddingX || padding,
	        paddingBottom: paddingBottom || paddingY || padding,
	        paddingLeft: paddingLeft || paddingX || padding,
	        marginTop: marginTop || marginY || margin,
	        marginRight: marginRight || marginX || margin,
	        marginBottom: marginBottom || marginY || margin,
	        marginLeft: marginLeft || marginX || margin
	    }, sansSerif && { fontFamily: fonts.SANS_SERIF }, serif && { fontFamily: fonts.SERIF },
	    /* border */
	    borderStyle('border', border), borderStyle('borderTop', borderTop), borderStyle('borderRight', borderRight), borderStyle('borderBottom', borderBottom), borderStyle('borderLeft', borderLeft), {
	        borderColor: getStyle(colors, borderColor)
	    }, radii({
	        rounded: rounded,
	        pill: pill,
	        circle: circle
	    }, borderRadius),
	    /* hover + active */
	    active(hoverActiveStyles), !Sephora.isTouch && hover(hoverActiveStyles),
	    /* overrides */
	    _css];
	
	    return React.createElement(Component, _extends({}, props, {
	        className: css(styles) + className,
	        ref: function ref(_ref3) {
	            return baseRef(_ref3);
	        } }));
	};
	
	Base.prototype.propTypes = {
	    /** HTML element string or React component to render */
	    is: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.func, React.PropTypes.element]),
	    /** Base component styles; useful for initial styles */
	    baseStyle: React.PropTypes.oneOfType([React.PropTypes.object, React.PropTypes.array]),
	    /** Styles from component instance (context); last styles applied */
	    _css: React.PropTypes.oneOfType([React.PropTypes.object, React.PropTypes.array]),
	
	    /** Width - percentage width as a number from 0 - 1 */
	    /** Setting a number value above 1 will use the raw pixel value of that number */
	    width: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number]),
	
	    /** Revise flexbox cell order */
	    order: React.PropTypes.oneOfType([React.PropTypes.number, React.PropTypes.oneOf(['last'])]),
	
	    /** Controls border radius */
	    rounded: React.PropTypes.oneOfType([React.PropTypes.bool, React.PropTypes.oneOf(['top', 'right', 'bottom', 'left'])]),
	    /** Sets border radius 99999 */
	    circle: React.PropTypes.bool,
	    /** Sets border radius 99999 */
	    pill: React.PropTypes.bool,
	
	    /** Set font family */
	    serif: React.PropTypes.bool,
	    sansSerif: React.PropTypes.bool,
	
	    /** Function to obtain refs for the underlying Base component */
	    baseRef: React.PropTypes.func
	};
	
	Base.prototype.getDefaultProps = function () {
	    return {
	        baseRef: function baseRef(x) {
	            return x;
	        }
	    };
	};
	
	// Added by sephora-jsx-loader.js
	Base.prototype.path = 'Base';
	// Added by sephora-jsx-loader.js
	Base.prototype.class = 'Base';
	// Added by sephora-jsx-loader.js
	Base.prototype.getInitialState = function () {
	    Base.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	Base.prototype.render = wrapComponentRender(Base.prototype.render);
	// Added by sephora-jsx-loader.js
	var BaseClass = React.createClass(Base.prototype);
	// Added by sephora-jsx-loader.js
	BaseClass.prototype.classRef = BaseClass;
	// Added by sephora-jsx-loader.js
	Object.assign(BaseClass, Base);
	// Added by sephora-jsx-loader.js
	module.exports = BaseClass;

/***/ }),
/* 106 */
/*!********************************!*\
  !*** ./public_ufe/js/style.js ***!
  \********************************/
/***/ (function(module, exports) {

	'use strict';
	
	var black = '#000';
	var white = '#fff';
	var red = '#e7040f';
	var rouge = '#d0112b';
	var green = '#02dd2d';
	var blue = '#328AFB';
	var darkGray = '#333';
	var midGray = '#555';
	var gray = '#777';
	var silver = '#999';
	var lightSilver = '#aaa';
	var moonGray = '#ccc';
	var lightGray = '#eee';
	var nearWhite = '#f4f4f4';
	var darken = function darken(n) {
	    return 'rgba(0, 0, 0, ' + n + ')';
	};
	
	var space = [0, 4, // 1
	8, // 2
	12, // 3
	16, // 4
	24, // 5
	32, // 6
	48 // 7
	];
	
	var borderRadius = 4;
	
	var colors = {
	    black: black,
	    white: white,
	    red: red,
	    rouge: rouge,
	    green: green,
	    blue: blue,
	    darkGray: darkGray,
	    midGray: midGray,
	    gray: gray,
	    silver: silver,
	    lightSilver: lightSilver,
	    moonGray: moonGray,
	    lightGray: lightGray,
	    nearWhite: nearWhite,
	    error: red,
	    linkPrimary: blue
	};
	
	var fonts = {
	    SANS_SERIF: '"helvetica neue", helvetica, arial, sans-serif',
	    SERIF: 'georgia, times, serif'
	};
	
	var site = {
	    HEADER_HEIGHT_MW: 45,
	    MAX_WIDTH: 1200,
	    MIN_WIDTH_FS: 1024,
	    MIN_WIDTH_MW: 320,
	    PADDING_FS: 22,
	    PADDING_MW: space[4],
	    SIDEBAR_WIDTH: 203,
	    TOP_BAR_HEIGHT: 34,
	    WIDTH: 980
	};
	
	var breakpoints = {
	    LG: '(min-width: ' + site.MIN_WIDTH_FS + 'px)'
	};
	
	var lineHeights = [0, 1, 1.25, 1.5];
	
	var shade = [darken(0), darken(1 / 16), darken(1 / 8), darken(1 / 4), darken(1 / 2)];
	
	var tracking = [0, '.0625em', '.125em', '.25em'];
	
	var baseFontSize = 14;
	
	var fontSizes = {
	    h6: 11,
	    h5: 12,
	    h4: baseFontSize,
	    h3: 16,
	    h2: 18,
	    h1: 24,
	    h0: 32,
	    h00: 44,
	    BASE: baseFontSize
	};
	
	var zIndex = {
	    HEADER: 1000,
	    CHAT: 1010,
	    HAMBURGER: 1020,
	    DROPDOWN: 1030,
	    BACK_TO_TOP: 1040,
	    MODAL: 1050,
	    MAX: 2147483647
	};
	
	var buttons = {
	    FONT_SIZE: fontSizes.h5,
	    BORDER_WIDTH: 1,
	    PADDING_X: 16,
	    PADDING_Y: 10,
	    LINE_HEIGHT: lineHeights[3]
	};
	
	var forms = {
	    HEIGHT: buttons.FONT_SIZE * buttons.LINE_HEIGHT + buttons.PADDING_Y * 2 + buttons.BORDER_WIDTH * 2,
	    FONT_SIZE: fontSizes.h4,
	    PADDING_X: 12,
	    PADDING_Y: 10,
	    COLOR: colors.black,
	    BG: colors.white,
	    BORDER_COLOR: colors.moonGray,
	    BORDER_FOCUS_COLOR: colors.black,
	    DISABLED_BG: colors.lightGray,
	    DISABLED_OPACITY: 0.7,
	    RADIO_SIZE: 18,
	    RADIO_SIZE_SM: 15,
	    RADIO_MARGIN: space[3],
	    RADIO_MARGIN_SM: space[2],
	    PLACEHOLDER_COLOR: colors.silver,
	    PLACEHOLDER_FOCUS_COLOR: colors.moonGray,
	    MARGIN_BOTTOM: space[4],
	    MSG_STYLE: {
	        color: colors.gray,
	        marginTop: space[2],
	        fontSize: fontSizes.h5,
	        lineHeight: lineHeights[2]
	    }
	};
	
	var dropdown = {
	    SHADOW: '0 1px 8px rgba(0,0,0,.15)',
	    BG: colors.white,
	    ARROW_SIZE: 15
	};
	
	var swatch = {
	    PADDING: 1,
	    BORDER_WIDTH: 3,
	    SALE_BADGE_HEIGHT: 16,
	    FONT_SIZE: fontSizes.h5,
	    TEXT_PADDING_VERT: space[2],
	    TEXT_PADDING_HORZ: space[3],
	    TEXT_BORDER_WIDTH: 1
	};
	
	var modal = {
	    PADDING_MW: space[4],
	    PADDING_FS: space[6],
	    ACTIONS_WIDTH: 362,
	    ACTIONS_GUTTER: space[4],
	    X_SIZE: 18,
	    HEADER_HEIGHT: 56,
	    SUBHEADER_HEIGHT: site.HEADER_HEIGHT_MW,
	    WIDTH: {
	        XS: 384,
	        SM: 472,
	        MD: 576,
	        LG: 783,
	        XL: site.WIDTH
	    }
	};
	
	var overlay = {
	    COLOR: colors.black,
	    OPACITY: 0.25
	};
	
	var measure = {
	    /* Measure is limited to ~66 characters */
	    BASE: '30em',
	    /* Measure is limited to ~80 characters */
	    WIDE: '34em',
	    /* Measure is limited to ~45 characters */
	    NARROW: '20em'
	};
	
	var style = {
	    borderRadius: borderRadius,
	    breakpoints: breakpoints,
	    buttons: buttons,
	    colors: colors,
	    fonts: fonts,
	    forms: forms,
	    lineHeights: lineHeights,
	    measure: measure,
	    modal: modal,
	    overlay: overlay,
	    shade: shade,
	    dropdown: dropdown,
	    site: site,
	    space: space,
	    swatch: swatch,
	    tracking: tracking,
	    fontSizes: fontSizes,
	    zIndex: zIndex
	};
	
	module.exports = style;

/***/ }),
/* 107 */
/*!*******************************!*\
  !*** ./~/glamor/lib/index.js ***!
  \*******************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.compose = exports.merge = exports.$ = exports.style = exports.presets = exports.keyframes = exports.fontFace = exports.insertGlobal = exports.insertRule = exports.plugins = exports.styleSheet = undefined;
	exports.speedy = speedy;
	exports.simulations = simulations;
	exports.simulate = simulate;
	exports.cssLabels = cssLabels;
	exports.isLikeRule = isLikeRule;
	exports.idFor = idFor;
	exports.css = css;
	exports.rehydrate = rehydrate;
	exports.flush = flush;
	exports.select = select;
	exports.parent = parent;
	exports.media = media;
	exports.pseudo = pseudo;
	exports.active = active;
	exports.any = any;
	exports.checked = checked;
	exports.disabled = disabled;
	exports.empty = empty;
	exports.enabled = enabled;
	exports._default = _default;
	exports.first = first;
	exports.firstChild = firstChild;
	exports.firstOfType = firstOfType;
	exports.fullscreen = fullscreen;
	exports.focus = focus;
	exports.hover = hover;
	exports.indeterminate = indeterminate;
	exports.inRange = inRange;
	exports.invalid = invalid;
	exports.lastChild = lastChild;
	exports.lastOfType = lastOfType;
	exports.left = left;
	exports.link = link;
	exports.onlyChild = onlyChild;
	exports.onlyOfType = onlyOfType;
	exports.optional = optional;
	exports.outOfRange = outOfRange;
	exports.readOnly = readOnly;
	exports.readWrite = readWrite;
	exports.required = required;
	exports.right = right;
	exports.root = root;
	exports.scope = scope;
	exports.target = target;
	exports.valid = valid;
	exports.visited = visited;
	exports.dir = dir;
	exports.lang = lang;
	exports.not = not;
	exports.nthChild = nthChild;
	exports.nthLastChild = nthLastChild;
	exports.nthLastOfType = nthLastOfType;
	exports.nthOfType = nthOfType;
	exports.after = after;
	exports.before = before;
	exports.firstLetter = firstLetter;
	exports.firstLine = firstLine;
	exports.selection = selection;
	exports.backdrop = backdrop;
	exports.placeholder = placeholder;
	exports.cssFor = cssFor;
	exports.attribsFor = attribsFor;
	
	var _objectAssign = __webpack_require__(/*! object-assign */ 108);
	
	var _objectAssign2 = _interopRequireDefault(_objectAssign);
	
	var _sheet = __webpack_require__(/*! ./sheet.js */ 109);
	
	var _CSSPropertyOperations = __webpack_require__(/*! ./CSSPropertyOperations */ 110);
	
	var _clean = __webpack_require__(/*! ./clean.js */ 120);
	
	var _clean2 = _interopRequireDefault(_clean);
	
	var _plugins = __webpack_require__(/*! ./plugins */ 121);
	
	var _hash = __webpack_require__(/*! ./hash */ 140);
	
	var _hash2 = _interopRequireDefault(_hash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	/* stylesheet */
	
	
	var styleSheet = exports.styleSheet = new _sheet.StyleSheet();
	// an isomorphic StyleSheet shim. hides all the nitty gritty.
	
	// /**************** LIFTOFF IN 3... 2... 1... ****************/
	styleSheet.inject(); //eslint-disable-line indent
	// /****************      TO THE MOOOOOOON     ****************/
	
	// convenience function to toggle speedy
	function speedy(bool) {
	  return styleSheet.speedy(bool);
	}
	
	// plugins
	// we include these by default
	var plugins = exports.plugins = styleSheet.plugins = new _plugins.PluginSet([_plugins.prefixes, _plugins.contentWrap, _plugins.fallbacks]);
	plugins.media = new _plugins.PluginSet(); // neat! media, font-face, keyframes
	plugins.fontFace = new _plugins.PluginSet();
	plugins.keyframes = new _plugins.PluginSet([_plugins.prefixes, _plugins.fallbacks]);
	
	// define some constants
	
	var isDev = ("production") === 'development' || !("production");
	var isTest = ("production") === 'test';
	var isBrowser = typeof window !== 'undefined';
	
	/**** simulations  ****/
	
	// a flag to enable simulation meta tags on dom nodes
	// defaults to true in dev mode. recommend *not* to
	// toggle often.
	var canSimulate = isDev;
	
	// we use these flags for issuing warnings when simulate is called
	// in prod / in incorrect order
	var warned1 = false,
	    warned2 = false;
	
	// toggles simulation activity. shouldn't be needed in most cases
	function simulations() {
	  var bool = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
	
	  canSimulate = !!bool;
	}
	
	// use this on dom nodes to 'simulate' pseudoclasses
	// <div {...hover({ color: 'red' })} {...simulate('hover', 'visited')}>...</div>
	// you can even send in some weird ones, as long as it's in simple format
	// and matches an existing rule on the element
	// eg simulate('nthChild2', ':hover:active') etc
	function simulate() {
	  for (var _len = arguments.length, pseudos = Array(_len), _key = 0; _key < _len; _key++) {
	    pseudos[_key] = arguments[_key];
	  }
	
	  pseudos = (0, _clean2.default)(pseudos);
	  if (!pseudos) return {};
	  if (!canSimulate) {
	    if (!warned1) {
	      console.warn('can\'t simulate without once calling simulations(true)'); //eslint-disable-line no-console
	      warned1 = true;
	    }
	    if (!isDev && !isTest && !warned2) {
	      console.warn('don\'t use simulation outside dev'); //eslint-disable-line no-console
	      warned2 = true;
	    }
	    return {};
	  }
	  return pseudos.reduce(function (o, p) {
	    return o['data-simulate-' + simple(p)] = '', o;
	  }, {});
	}
	
	/**** labels ****/
	// toggle for debug labels.
	// *shouldn't* have to mess with this manually
	var hasLabels = isDev;
	
	function cssLabels(bool) {
	  hasLabels = !!bool;
	}
	
	// takes a string, converts to lowercase, strips out nonalphanumeric.
	function simple(str) {
	  var char = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
	
	  return str.toLowerCase().replace(/[^a-z0-9]/g, char);
	}
	
	// hashes a string to something 'unique'
	// we use this to generate ids for styles
	
	
	function hashify(obj) {
	  var str = JSON.stringify(obj);
	  var toRet = (0, _hash2.default)(str).toString(36);
	  if (obj.label && obj.label.length > 0 && isDev) {
	    return simple(obj.label.join('.'), '-') + '-' + toRet;
	  }
	  return toRet;
	}
	
	// of shape { 'data-css-<id>': '' }
	function isLikeRule(rule) {
	  var keys = Object.keys(rule).filter(function (x) {
	    return x !== 'toString';
	  });
	  if (keys.length !== 1) {
	    return false;
	  }
	  return !!/data\-css\-([a-zA-Z0-9\-_]+)/.exec(keys[0]);
	}
	
	// extracts id from a { 'data-css-<id>': ''} like object
	function idFor(rule) {
	  var keys = Object.keys(rule).filter(function (x) {
	    return x !== 'toString';
	  });
	  if (keys.length !== 1) throw new Error('not a rule');
	  var regex = /data\-css\-([a-zA-Z0-9\-_]+)/;
	  var match = regex.exec(keys[0]);
	  if (!match) throw new Error('not a rule');
	  return match[1];
	}
	
	// from https://github.com/j2css/j2c/blob/5d381c2d721d04b54fabe6a165d587247c3087cb/src/helpers.js#L28-L61
	
	// "Tokenizes" the selectors into parts relevant for the next function.
	// Strings and comments are matched, but ignored afterwards.
	// This is not a full tokenizers. It only recognizes comas, parentheses,
	// strings and comments.
	// regexp generated by scripts/regexps.js then trimmed by hand
	var selectorTokenizer = /[(),]|"(?:\\.|[^"\n])*"|'(?:\\.|[^'\n])*'|\/\*[\s\S]*?\*\//g;
	
	/**
	 * This will split a coma-separated selector list into individual selectors,
	 * ignoring comas in strings, comments and in :pseudo-selectors(parameter, lists).
	 *
	 * @param {string} selector
	 * @return {string[]}
	 */
	
	function splitSelector(selector) {
	  if (selector.indexOf(',') === -1) {
	    return [selector];
	  }
	
	  var indices = [],
	      res = [],
	      inParen = 0,
	      o;
	  /*eslint-disable no-cond-assign*/
	  while (o = selectorTokenizer.exec(selector)) {
	    /*eslint-enable no-cond-assign*/
	    switch (o[0]) {
	      case '(':
	        inParen++;break;
	      case ')':
	        inParen--;break;
	      case ',':
	        if (inParen) break;indices.push(o.index);
	    }
	  }
	  for (o = indices.length; o--;) {
	    res.unshift(selector.slice(indices[o] + 1));
	    selector = selector.slice(0, indices[o]);
	  }
	  res.unshift(selector);
	  return res;
	}
	
	function selector(id, path) {
	  if (!id) {
	    return path.replace(/\&/g, '');
	  }
	  if (!path) return '.css-' + id + ',[data-css-' + id + ']';
	
	  var x = splitSelector(path).map(function (x) {
	    return x.indexOf('&') >= 0 ? [x.replace(/\&/mg, '.css-' + id), x.replace(/\&/mg, '[data-css-' + id + ']')].join(',') // todo - make sure each sub selector has an &
	    : '.css-' + id + x + ',[data-css-' + id + ']' + x;
	  }).join(',');
	
	  if (canSimulate && /^\&\:/.exec(path) && !/\s/.exec(path)) {
	    x += ',.css-' + id + '[data-simulate-' + simple(path) + '],[data-css-' + id + '][data-simulate-' + simple(path) + ']';
	  }
	  return x;
	}
	
	// end https://github.com/j2css/j2c/blob/5d381c2d721d04b54fabe6a165d587247c3087cb/src/helpers.js#L28-L61
	
	
	function toCSS(_ref) {
	  var selector = _ref.selector,
	      style = _ref.style;
	
	  var result = plugins.transform({ selector: selector, style: style });
	  return result.selector + '{' + (0, _CSSPropertyOperations.createMarkupForStyles)(result.style) + '}';
	}
	
	function deconstruct(style) {
	  // we can be sure it's not infinitely nested here
	  var plain = void 0,
	      selects = void 0,
	      medias = void 0,
	      supports = void 0;
	  Object.keys(style).forEach(function (key) {
	    if (key.indexOf('&') >= 0) {
	      selects = selects || {};
	      selects[key] = style[key];
	    } else if (key.indexOf('@media') === 0) {
	      medias = medias || {};
	      medias[key] = deconstruct(style[key]);
	    } else if (key.indexOf('@supports') === 0) {
	      supports = supports || {};
	      supports[key] = deconstruct(style[key]);
	    } else if (key === 'label') {
	      if (style.label.length > 0) {
	        plain = plain || {};
	        plain.label = hasLabels ? style.label.join('.') : '';
	      }
	    } else {
	      plain = plain || {};
	      plain[key] = style[key];
	    }
	  });
	  return { plain: plain, selects: selects, medias: medias, supports: supports };
	}
	
	function deconstructedStyleToCSS(id, style) {
	  var css = [];
	
	  // plugins here
	  var plain = style.plain,
	      selects = style.selects,
	      medias = style.medias,
	      supports = style.supports;
	
	  if (plain) {
	    css.push(toCSS({ style: plain, selector: selector(id) }));
	  }
	  if (selects) {
	    Object.keys(selects).forEach(function (key) {
	      return css.push(toCSS({ style: selects[key], selector: selector(id, key) }));
	    });
	  }
	  if (medias) {
	    Object.keys(medias).forEach(function (key) {
	      return css.push(key + '{' + deconstructedStyleToCSS(id, medias[key]).join('') + '}');
	    });
	  }
	  if (supports) {
	    Object.keys(supports).forEach(function (key) {
	      return css.push(key + '{' + deconstructedStyleToCSS(id, supports[key]).join('') + '}');
	    });
	  }
	  return css;
	}
	
	// this cache to track which rules have
	// been inserted into the stylesheet
	var inserted = styleSheet.inserted = {};
	
	// and helpers to insert rules into said styleSheet
	function insert(spec) {
	  if (!inserted[spec.id]) {
	    inserted[spec.id] = true;
	    var deconstructed = deconstruct(spec.style);
	    var rules = deconstructedStyleToCSS(spec.id, deconstructed);
	    inserted[spec.id] = isBrowser ? true : rules;
	    rules.forEach(function (cssRule) {
	      return styleSheet.insert(cssRule);
	    });
	  }
	}
	
	// a simple cache to store generated rules
	var registered = styleSheet.registered = {};
	function register(spec) {
	  if (!registered[spec.id]) {
	    registered[spec.id] = spec;
	  }
	}
	
	function _getRegistered(rule) {
	  if (isLikeRule(rule)) {
	    var ret = registered[idFor(rule)];
	    if (ret == null) {
	      throw new Error('[glamor] an unexpected rule cache miss occurred. This is probably a sign of multiple glamor instances in your app. See https://github.com/threepointone/glamor/issues/79');
	    }
	    return ret;
	  }
	  return rule;
	}
	
	// todo - perf
	var ruleCache = {};
	function toRule(spec) {
	  register(spec);
	  insert(spec);
	
	  if (ruleCache[spec.id]) {
	    return ruleCache[spec.id];
	  }
	
	  var ret = _defineProperty({}, 'data-css-' + spec.id, hasLabels ? spec.label || '' : '');
	  Object.defineProperty(ret, 'toString', {
	    enumerable: false, value: function value() {
	      return 'css-' + spec.id;
	    }
	  });
	  ruleCache[spec.id] = ret;
	  return ret;
	}
	
	function log() {
	  //eslint-disable-line no-unused-vars
	  console.log(this); //eslint-disable-line no-console
	  return this;
	}
	
	function isSelector(key) {
	  var possibles = [':', '.', '[', '>', ' '],
	      found = false,
	      ch = key.charAt(0);
	  for (var i = 0; i < possibles.length; i++) {
	    if (ch === possibles[i]) {
	      found = true;
	      break;
	    }
	  }
	  return found || key.indexOf('&') >= 0;
	}
	
	function joinSelectors(a, b) {
	  var as = splitSelector(a).map(function (a) {
	    return !(a.indexOf('&') >= 0) ? '&' + a : a;
	  });
	  var bs = splitSelector(b).map(function (b) {
	    return !(b.indexOf('&') >= 0) ? '&' + b : b;
	  });
	
	  return bs.reduce(function (arr, b) {
	    return arr.concat(as.map(function (a) {
	      return b.replace(/\&/g, a);
	    }));
	  }, []).join(',');
	}
	
	function joinMediaQueries(a, b) {
	  return a ? '@media ' + a.substring(6) + ' and ' + b.substring(6) : b;
	}
	
	function isMediaQuery(key) {
	  return key.indexOf('@media') === 0;
	}
	
	function isSupports(key) {
	  return key.indexOf('@supports') === 0;
	}
	
	function joinSupports(a, b) {
	  return a ? '@supports ' + a.substring(9) + ' and ' + b.substring(9) : b;
	}
	
	// flatten a nested array
	function flatten(inArr) {
	  var arr = [];
	  for (var i = 0; i < inArr.length; i++) {
	    if (Array.isArray(inArr[i])) arr = arr.concat(flatten(inArr[i]));else arr = arr.concat(inArr[i]);
	  }
	  return arr;
	}
	
	var prefixedPseudoSelectors = {
	  '::placeholder': ['::-webkit-input-placeholder', '::-moz-placeholder', '::-ms-input-placeholder'],
	  ':fullscreen': [':-webkit-full-screen', ':-moz-full-screen', ':-ms-fullscreen']
	
	  // mutable! modifies dest.
	};function build(dest, _ref2) {
	  var _ref2$selector = _ref2.selector,
	      selector = _ref2$selector === undefined ? '' : _ref2$selector,
	      _ref2$mq = _ref2.mq,
	      mq = _ref2$mq === undefined ? '' : _ref2$mq,
	      _ref2$supp = _ref2.supp,
	      supp = _ref2$supp === undefined ? '' : _ref2$supp,
	      _ref2$src = _ref2.src,
	      src = _ref2$src === undefined ? {} : _ref2$src;
	
	
	  if (!Array.isArray(src)) {
	    src = [src];
	  }
	  src = flatten(src);
	
	  src.forEach(function (_src) {
	    if (isLikeRule(_src)) {
	      var reg = _getRegistered(_src);
	      if (reg.type !== 'css') {
	        throw new Error('cannot merge this rule');
	      }
	      _src = reg.style;
	    }
	    _src = (0, _clean2.default)(_src);
	    if (_src && _src.composes) {
	      build(dest, { selector: selector, mq: mq, supp: supp, src: _src.composes });
	    }
	    Object.keys(_src || {}).forEach(function (key) {
	      if (isSelector(key)) {
	
	        if (prefixedPseudoSelectors[key]) {
	          prefixedPseudoSelectors[key].forEach(function (p) {
	            return build(dest, { selector: joinSelectors(selector, p), mq: mq, supp: supp, src: _src[key] });
	          });
	        }
	
	        build(dest, { selector: joinSelectors(selector, key), mq: mq, supp: supp, src: _src[key] });
	      } else if (isMediaQuery(key)) {
	        build(dest, { selector: selector, mq: joinMediaQueries(mq, key), supp: supp, src: _src[key] });
	      } else if (isSupports(key)) {
	        build(dest, { selector: selector, mq: mq, supp: joinSupports(supp, key), src: _src[key] });
	      } else if (key === 'composes') {
	        // ignore, we already dealth with it
	      } else {
	        var _dest = dest;
	        if (supp) {
	          _dest[supp] = _dest[supp] || {};
	          _dest = _dest[supp];
	        }
	        if (mq) {
	          _dest[mq] = _dest[mq] || {};
	          _dest = _dest[mq];
	        }
	        if (selector) {
	          _dest[selector] = _dest[selector] || {};
	          _dest = _dest[selector];
	        }
	
	        if (key === 'label') {
	          if (hasLabels) {
	            dest.label = dest.label.concat(_src.label);
	          }
	        } else {
	          _dest[key] = _src[key];
	        }
	      }
	    });
	  });
	}
	
	function _css(rules) {
	  var style = { label: [] };
	  build(style, { src: rules }); // mutative! but worth it.
	
	  var spec = {
	    id: hashify(style),
	    style: style, label: hasLabels ? style.label.join('.') : '',
	    type: 'css'
	  };
	  return toRule(spec);
	}
	
	var nullrule = {
	  // 'data-css-nil': ''
	};
	Object.defineProperty(nullrule, 'toString', {
	  enumerable: false, value: function value() {
	    return 'css-nil';
	  }
	});
	
	var inputCaches = typeof WeakMap !== 'undefined' ? [nullrule, new WeakMap(), new WeakMap(), new WeakMap()] : [nullrule];
	
	var warnedWeakMapError = false;
	function multiIndexCache(fn) {
	  return function (args) {
	    if (inputCaches[args.length]) {
	      var coi = inputCaches[args.length];
	      var ctr = 0;
	      while (ctr < args.length - 1) {
	        if (!coi.has(args[ctr])) {
	          coi.set(args[ctr], new WeakMap());
	        }
	        coi = coi.get(args[ctr]);
	        ctr++;
	      }
	      if (coi.has(args[args.length - 1])) {
	        var ret = coi.get(args[ctr]);
	
	        if (registered[ret.toString().substring(4)]) {
	          // make sure it hasn't been flushed
	          return ret;
	        }
	      }
	    }
	    var value = fn(args);
	    if (inputCaches[args.length]) {
	      var _ctr = 0,
	          _coi = inputCaches[args.length];
	      while (_ctr < args.length - 1) {
	        _coi = _coi.get(args[_ctr]);
	        _ctr++;
	      }
	      try {
	        _coi.set(args[_ctr], value);
	      } catch (err) {
	        if (isDev && !warnedWeakMapError) {
	          var _console;
	
	          warnedWeakMapError = true;
	          (_console = console).warn.apply(_console, ['failed setting the WeakMap cache for args:'].concat(_toConsumableArray(args))); // eslint-disable-line no-console
	          console.warn('this should NOT happen, please file a bug on the github repo.'); // eslint-disable-line no-console
	        }
	      }
	    }
	    return value;
	  };
	}
	
	var cachedCss = typeof WeakMap !== 'undefined' ? multiIndexCache(_css) : _css;
	
	function css() {
	  for (var _len2 = arguments.length, rules = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	    rules[_key2] = arguments[_key2];
	  }
	
	  if (rules[0] && rules[0].length && rules[0].raw) {
	    throw new Error('you forgot to include glamor/babel in your babel plugins.');
	  }
	
	  rules = (0, _clean2.default)(rules);
	  if (!rules) {
	    return nullrule;
	  }
	
	  return cachedCss(rules);
	}
	
	css.insert = function (css) {
	  var spec = {
	    id: hashify(css),
	    css: css,
	    type: 'raw'
	  };
	  register(spec);
	  if (!inserted[spec.id]) {
	    styleSheet.insert(spec.css);
	    inserted[spec.id] = isBrowser ? true : [spec.css];
	  }
	};
	
	var insertRule = exports.insertRule = css.insert;
	
	css.global = function (selector, style) {
	  style = (0, _clean2.default)(style);
	  if (style) {
	    return css.insert(toCSS({ selector: selector, style: style }));
	  }
	};
	
	var insertGlobal = exports.insertGlobal = css.global;
	
	function insertKeyframe(spec) {
	  if (!inserted[spec.id]) {
	    var inner = Object.keys(spec.keyframes).map(function (kf) {
	      var result = plugins.keyframes.transform({ id: spec.id, name: kf, style: spec.keyframes[kf] });
	      return result.name + '{' + (0, _CSSPropertyOperations.createMarkupForStyles)(result.style) + '}';
	    }).join('');
	
	    var rules = ['-webkit-', '-moz-', '-o-', ''].map(function (prefix) {
	      return '@' + prefix + 'keyframes ' + (spec.name + '_' + spec.id) + '{' + inner + '}';
	    });
	    rules.forEach(function (rule) {
	      return styleSheet.insert(rule);
	    });
	
	    inserted[spec.id] = isBrowser ? true : rules;
	  }
	}
	css.keyframes = function (name, kfs) {
	  if (!kfs) {
	    kfs = name, name = 'animation';
	  }
	
	  // do not ignore empty keyframe definitions for now.
	  kfs = (0, _clean2.default)(kfs) || {};
	  var spec = {
	    id: hashify({ name: name, kfs: kfs }),
	    type: 'keyframes',
	    name: name,
	    keyframes: kfs
	  };
	  register(spec);
	  insertKeyframe(spec);
	  return name + '_' + spec.id;
	};
	
	// we don't go all out for fonts as much, giving a simple font loading strategy
	// use a fancier lib if you need moar power
	css.fontFace = function (font) {
	  font = (0, _clean2.default)(font);
	  var spec = {
	    id: hashify(font),
	    type: 'font-face',
	    font: font
	  };
	  register(spec);
	  insertFontFace(spec);
	
	  return font.fontFamily;
	};
	
	var fontFace = exports.fontFace = css.fontFace;
	var keyframes = exports.keyframes = css.keyframes;
	
	function insertFontFace(spec) {
	  if (!inserted[spec.id]) {
	    var rule = '@font-face{' + (0, _CSSPropertyOperations.createMarkupForStyles)(spec.font) + '}';
	    styleSheet.insert(rule);
	    inserted[spec.id] = isBrowser ? true : [rule];
	  }
	}
	
	// rehydrate the insertion cache with ids sent from
	// renderStatic / renderStaticOptimized
	function rehydrate(ids) {
	  // load up ids
	  (0, _objectAssign2.default)(inserted, ids.reduce(function (o, i) {
	    return o[i] = true, o;
	  }, {}));
	  // assume css loaded separately
	}
	
	// clears out the cache and empties the stylesheet
	// best for tests, though there might be some value for SSR.
	
	function flush() {
	  inserted = styleSheet.inserted = {};
	  registered = styleSheet.registered = {};
	  ruleCache = {};
	  styleSheet.flush();
	  styleSheet.inject();
	}
	
	var presets = exports.presets = {
	  mobile: '(min-width: 400px)',
	  Mobile: '@media (min-width: 400px)',
	  phablet: '(min-width: 550px)',
	  Phablet: '@media (min-width: 550px)',
	  tablet: '(min-width: 750px)',
	  Tablet: '@media (min-width: 750px)',
	  desktop: '(min-width: 1000px)',
	  Desktop: '@media (min-width: 1000px)',
	  hd: '(min-width: 1200px)',
	  Hd: '@media (min-width: 1200px)'
	};
	
	var style = exports.style = css;
	
	function select(selector) {
	  for (var _len3 = arguments.length, styles = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
	    styles[_key3 - 1] = arguments[_key3];
	  }
	
	  if (!selector) {
	    return style(styles);
	  }
	  return css(_defineProperty({}, selector, styles));
	}
	var $ = exports.$ = select;
	
	function parent(selector) {
	  for (var _len4 = arguments.length, styles = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
	    styles[_key4 - 1] = arguments[_key4];
	  }
	
	  return css(_defineProperty({}, selector + ' &', styles));
	}
	
	var merge = exports.merge = css;
	var compose = exports.compose = css;
	
	function media(query) {
	  for (var _len5 = arguments.length, rules = Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
	    rules[_key5 - 1] = arguments[_key5];
	  }
	
	  return css(_defineProperty({}, '@media ' + query, rules));
	}
	
	function pseudo(selector) {
	  for (var _len6 = arguments.length, styles = Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {
	    styles[_key6 - 1] = arguments[_key6];
	  }
	
	  return css(_defineProperty({}, selector, styles));
	}
	
	// allllll the pseudoclasses
	
	function active(x) {
	  return pseudo(':active', x);
	}
	
	function any(x) {
	  return pseudo(':any', x);
	}
	
	function checked(x) {
	  return pseudo(':checked', x);
	}
	
	function disabled(x) {
	  return pseudo(':disabled', x);
	}
	
	function empty(x) {
	  return pseudo(':empty', x);
	}
	
	function enabled(x) {
	  return pseudo(':enabled', x);
	}
	
	function _default(x) {
	  return pseudo(':default', x); // note '_default' name
	}
	
	function first(x) {
	  return pseudo(':first', x);
	}
	
	function firstChild(x) {
	  return pseudo(':first-child', x);
	}
	
	function firstOfType(x) {
	  return pseudo(':first-of-type', x);
	}
	
	function fullscreen(x) {
	  return pseudo(':fullscreen', x);
	}
	
	function focus(x) {
	  return pseudo(':focus', x);
	}
	
	function hover(x) {
	  return pseudo(':hover', x);
	}
	
	function indeterminate(x) {
	  return pseudo(':indeterminate', x);
	}
	
	function inRange(x) {
	  return pseudo(':in-range', x);
	}
	
	function invalid(x) {
	  return pseudo(':invalid', x);
	}
	
	function lastChild(x) {
	  return pseudo(':last-child', x);
	}
	
	function lastOfType(x) {
	  return pseudo(':last-of-type', x);
	}
	
	function left(x) {
	  return pseudo(':left', x);
	}
	
	function link(x) {
	  return pseudo(':link', x);
	}
	
	function onlyChild(x) {
	  return pseudo(':only-child', x);
	}
	
	function onlyOfType(x) {
	  return pseudo(':only-of-type', x);
	}
	
	function optional(x) {
	  return pseudo(':optional', x);
	}
	
	function outOfRange(x) {
	  return pseudo(':out-of-range', x);
	}
	
	function readOnly(x) {
	  return pseudo(':read-only', x);
	}
	
	function readWrite(x) {
	  return pseudo(':read-write', x);
	}
	
	function required(x) {
	  return pseudo(':required', x);
	}
	
	function right(x) {
	  return pseudo(':right', x);
	}
	
	function root(x) {
	  return pseudo(':root', x);
	}
	
	function scope(x) {
	  return pseudo(':scope', x);
	}
	
	function target(x) {
	  return pseudo(':target', x);
	}
	
	function valid(x) {
	  return pseudo(':valid', x);
	}
	
	function visited(x) {
	  return pseudo(':visited', x);
	}
	
	// parameterized pseudoclasses
	function dir(p, x) {
	  return pseudo(':dir(' + p + ')', x);
	}
	function lang(p, x) {
	  return pseudo(':lang(' + p + ')', x);
	}
	function not(p, x) {
	  // should this be a plugin?
	  var selector = p.split(',').map(function (x) {
	    return x.trim();
	  }).map(function (x) {
	    return ':not(' + x + ')';
	  });
	  if (selector.length === 1) {
	    return pseudo(':not(' + p + ')', x);
	  }
	  return select(selector.join(''), x);
	}
	function nthChild(p, x) {
	  return pseudo(':nth-child(' + p + ')', x);
	}
	function nthLastChild(p, x) {
	  return pseudo(':nth-last-child(' + p + ')', x);
	}
	function nthLastOfType(p, x) {
	  return pseudo(':nth-last-of-type(' + p + ')', x);
	}
	function nthOfType(p, x) {
	  return pseudo(':nth-of-type(' + p + ')', x);
	}
	
	// pseudoelements
	function after(x) {
	  return pseudo('::after', x);
	}
	function before(x) {
	  return pseudo('::before', x);
	}
	function firstLetter(x) {
	  return pseudo('::first-letter', x);
	}
	function firstLine(x) {
	  return pseudo('::first-line', x);
	}
	function selection(x) {
	  return pseudo('::selection', x);
	}
	function backdrop(x) {
	  return pseudo('::backdrop', x);
	}
	function placeholder(x) {
	  // https://github.com/threepointone/glamor/issues/14
	  return css({ '::placeholder': x });
	}
	
	/*** helpers for web components ***/
	// https://github.com/threepointone/glamor/issues/16
	
	function cssFor() {
	  for (var _len7 = arguments.length, rules = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
	    rules[_key7] = arguments[_key7];
	  }
	
	  rules = (0, _clean2.default)(rules);
	  return rules ? rules.map(function (r) {
	    var style = { label: [] };
	    build(style, { src: r }); // mutative! but worth it.
	    return deconstructedStyleToCSS(hashify(style), deconstruct(style)).join('');
	  }).join('') : '';
	}
	
	function attribsFor() {
	  for (var _len8 = arguments.length, rules = Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
	    rules[_key8] = arguments[_key8];
	  }
	
	  rules = (0, _clean2.default)(rules);
	  var htmlAttributes = rules ? rules.map(function (rule) {
	    idFor(rule); // throwaway check for rule
	    var key = Object.keys(rule)[0],
	        value = rule[key];
	    return key + '="' + (value || '') + '"';
	  }).join(' ') : '';
	
	  return htmlAttributes;
	}

/***/ }),
/* 108 */
/*!*******************************************!*\
  !*** ./~/glamor/~/object-assign/index.js ***!
  \*******************************************/
/***/ (function(module, exports) {

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/
	
	'use strict';
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	
	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}
	
		return Object(val);
	}
	
	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}
	
			// Detect buggy property enumeration order in older V8 versions.
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}
	
			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}
	
	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;
	
		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);
	
			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}
	
			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}
	
		return to;
	};


/***/ }),
/* 109 */
/*!*******************************!*\
  !*** ./~/glamor/lib/sheet.js ***!
  \*******************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.StyleSheet = StyleSheet;
	
	var _objectAssign = __webpack_require__(/*! object-assign */ 108);
	
	var _objectAssign2 = _interopRequireDefault(_objectAssign);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	/* 
	
	high performance StyleSheet for css-in-js systems 
	
	- uses multiple style tags behind the scenes for millions of rules 
	- uses `insertRule` for appending in production for *much* faster performance
	- 'polyfills' on server side 
	
	
	// usage
	
	import StyleSheet from 'glamor/lib/sheet'
	let styleSheet = new StyleSheet()
	
	styleSheet.inject() 
	- 'injects' the stylesheet into the page (or into memory if on server)
	
	styleSheet.insert('#box { border: 1px solid red; }') 
	- appends a css rule into the stylesheet 
	
	styleSheet.flush() 
	- empties the stylesheet of all its contents
	
	
	*/
	
	function last(arr) {
	  return arr[arr.length - 1];
	}
	
	function sheetForTag(tag) {
	  if (tag.sheet) {
	    return tag.sheet;
	  }
	
	  // this weirdness brought to you by firefox 
	  for (var i = 0; i < document.styleSheets.length; i++) {
	    if (document.styleSheets[i].ownerNode === tag) {
	      return document.styleSheets[i];
	    }
	  }
	}
	
	var isBrowser = typeof window !== 'undefined';
	var isDev = ("production") === 'development' || !("production"); //(x => (x === 'development') || !x)(process.env.NODE_ENV)
	var isTest = ("production") === 'test';
	
	var oldIE = function () {
	  if (isBrowser) {
	    var div = document.createElement('div');
	    div.innerHTML = '<!--[if lt IE 10]><i></i><![endif]-->';
	    return div.getElementsByTagName('i').length === 1;
	  }
	}();
	
	function makeStyleTag() {
	  var tag = document.createElement('style');
	  tag.type = 'text/css';
	  tag.setAttribute('data-glamor', '');
	  tag.appendChild(document.createTextNode(''));
	  (document.head || document.getElementsByTagName('head')[0]).appendChild(tag);
	  return tag;
	}
	
	function StyleSheet() {
	  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	      _ref$speedy = _ref.speedy,
	      speedy = _ref$speedy === undefined ? !isDev && !isTest : _ref$speedy,
	      _ref$maxLength = _ref.maxLength,
	      maxLength = _ref$maxLength === undefined ? isBrowser && oldIE ? 4000 : 65000 : _ref$maxLength;
	
	  this.isSpeedy = speedy; // the big drawback here is that the css won't be editable in devtools
	  this.sheet = undefined;
	  this.tags = [];
	  this.maxLength = maxLength;
	  this.ctr = 0;
	}
	
	(0, _objectAssign2.default)(StyleSheet.prototype, {
	  getSheet: function getSheet() {
	    return sheetForTag(last(this.tags));
	  },
	  inject: function inject() {
	    var _this = this;
	
	    if (this.injected) {
	      throw new Error('already injected stylesheet!');
	    }
	    if (isBrowser) {
	      this.tags[0] = makeStyleTag();
	    } else {
	      // server side 'polyfill'. just enough behavior to be useful.
	      this.sheet = {
	        cssRules: [],
	        insertRule: function insertRule(rule) {
	          // enough 'spec compliance' to be able to extract the rules later  
	          // in other words, just the cssText field 
	          _this.sheet.cssRules.push({ cssText: rule });
	        }
	      };
	    }
	    this.injected = true;
	  },
	  speedy: function speedy(bool) {
	    if (this.ctr !== 0) {
	      throw new Error('cannot change speedy mode after inserting any rule to sheet. Either call speedy(' + bool + ') earlier in your app, or call flush() before speedy(' + bool + ')');
	    }
	    this.isSpeedy = !!bool;
	  },
	  _insert: function _insert(rule) {
	    // this weirdness for perf, and chrome's weird bug 
	    // https://stackoverflow.com/questions/20007992/chrome-suddenly-stopped-accepting-insertrule
	    try {
	      var sheet = this.getSheet();
	      sheet.insertRule(rule, rule.indexOf('@import') !== -1 ? 0 : sheet.cssRules.length);
	    } catch (e) {
	      if (isDev) {
	        // might need beter dx for this 
	        console.warn('whoops, illegal rule inserted', rule); //eslint-disable-line no-console
	      }
	    }
	  },
	  insert: function insert(rule) {
	
	    if (isBrowser) {
	      // this is the ultrafast version, works across browsers 
	      if (this.isSpeedy && this.getSheet().insertRule) {
	        this._insert(rule);
	      }
	      // more browser weirdness. I don't even know    
	      // else if(this.tags.length > 0 && this.tags::last().styleSheet) {      
	      //   this.tags::last().styleSheet.cssText+= rule
	      // }
	      else {
	          if (rule.indexOf('@import') !== -1) {
	            var tag = last(this.tags);
	            tag.insertBefore(document.createTextNode(rule), tag.firstChild);
	          } else {
	            last(this.tags).appendChild(document.createTextNode(rule));
	          }
	        }
	    } else {
	      // server side is pretty simple         
	      this.sheet.insertRule(rule, rule.indexOf('@import') !== -1 ? 0 : this.sheet.cssRules.length);
	    }
	
	    this.ctr++;
	    if (isBrowser && this.ctr % this.maxLength === 0) {
	      this.tags.push(makeStyleTag());
	    }
	    return this.ctr - 1;
	  },
	
	  // commenting this out till we decide on v3's decision 
	  // _replace(index, rule) {
	  //   // this weirdness for perf, and chrome's weird bug 
	  //   // https://stackoverflow.com/questions/20007992/chrome-suddenly-stopped-accepting-insertrule
	  //   try {  
	  //     let sheet = this.getSheet()        
	  //     sheet.deleteRule(index) // todo - correct index here     
	  //     sheet.insertRule(rule, index)
	  //   }
	  //   catch(e) {
	  //     if(isDev) {
	  //       // might need beter dx for this 
	  //       console.warn('whoops, problem replacing rule', rule) //eslint-disable-line no-console
	  //     }          
	  //   }          
	
	  // }
	  // replace(index, rule) {
	  //   if(isBrowser) {
	  //     if(this.isSpeedy && this.getSheet().insertRule) {
	  //       this._replace(index, rule)
	  //     }
	  //     else {
	  //       let _slot = Math.floor((index  + this.maxLength) / this.maxLength) - 1        
	  //       let _index = (index % this.maxLength) + 1
	  //       let tag = this.tags[_slot]
	  //       tag.replaceChild(document.createTextNode(rule), tag.childNodes[_index])
	  //     }
	  //   }
	  //   else {
	  //     let rules = this.sheet.cssRules
	  //     this.sheet.cssRules = [ ...rules.slice(0, index), { cssText: rule }, ...rules.slice(index + 1) ]
	  //   }
	  // }
	  delete: function _delete(index) {
	    // we insert a blank rule when 'deleting' so previously returned indexes remain stable
	    return this.replace(index, '');
	  },
	  flush: function flush() {
	    if (isBrowser) {
	      this.tags.forEach(function (tag) {
	        return tag.parentNode.removeChild(tag);
	      });
	      this.tags = [];
	      this.sheet = null;
	      this.ctr = 0;
	      // todo - look for remnants in document.styleSheets
	    } else {
	      // simpler on server 
	      this.sheet.cssRules = [];
	    }
	    this.injected = false;
	  },
	  rules: function rules() {
	    if (!isBrowser) {
	      return this.sheet.cssRules;
	    }
	    var arr = [];
	    this.tags.forEach(function (tag) {
	      return arr.splice.apply(arr, [arr.length, 0].concat(_toConsumableArray(Array.from(sheetForTag(tag).cssRules))));
	    });
	    return arr;
	  }
	});

/***/ }),
/* 110 */
/*!*****************************************************!*\
  !*** ./~/glamor/lib/CSSPropertyOperations/index.js ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.processStyleName = undefined;
	exports.createMarkupForStyles = createMarkupForStyles;
	
	var _camelizeStyleName = __webpack_require__(/*! fbjs/lib/camelizeStyleName */ 111);
	
	var _camelizeStyleName2 = _interopRequireDefault(_camelizeStyleName);
	
	var _dangerousStyleValue = __webpack_require__(/*! ./dangerousStyleValue */ 113);
	
	var _dangerousStyleValue2 = _interopRequireDefault(_dangerousStyleValue);
	
	var _hyphenateStyleName = __webpack_require__(/*! fbjs/lib/hyphenateStyleName */ 117);
	
	var _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);
	
	var _memoizeStringOnly = __webpack_require__(/*! fbjs/lib/memoizeStringOnly */ 119);
	
	var _memoizeStringOnly2 = _interopRequireDefault(_memoizeStringOnly);
	
	var _warning = __webpack_require__(/*! fbjs/lib/warning */ 115);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var processStyleName = exports.processStyleName = (0, _memoizeStringOnly2.default)(_hyphenateStyleName2.default); /**
	                                                                                                                   * Copyright 2013-present, Facebook, Inc.
	                                                                                                                   * All rights reserved.
	                                                                                                                   *
	                                                                                                                   * This source code is licensed under the BSD-style license found in the
	                                                                                                                   * LICENSE file in the root directory of this source tree. An additional grant
	                                                                                                                   * of patent rights can be found in the PATENTS file in the same directory.
	                                                                                                                   *
	                                                                                                                   * @providesModule CSSPropertyOperations
	                                                                                                                   */
	
	if (false) {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
	
	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;
	
	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;
	
	  var warnHyphenatedStyleName = function warnHyphenatedStyleName(name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, 'Unsupported style property %s. Did you mean %s?%s', name, (0, _camelizeStyleName2.default)(name), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnBadVendoredStyleName = function warnBadVendoredStyleName(name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnStyleValueWithSemicolon = function warnStyleValueWithSemicolon(name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }
	
	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };
	
	  var warnStyleValueIsNaN = function warnStyleValueIsNaN(name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }
	
	    warnedForNaNValue = true;
	    process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };
	
	  var checkRenderMessage = function checkRenderMessage(owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };
	
	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function warnValidStyle(name, value, component) {
	    //eslint-disable-line no-var
	    var owner = void 0;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }
	
	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}
	
	/**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	
	function createMarkupForStyles(styles, component) {
	  var serialized = '';
	  for (var styleName in styles) {
	    var isCustomProp = styleName.indexOf('--') === 0;
	    if (!styles.hasOwnProperty(styleName)) {
	      continue;
	    }
	    if (styleName === 'label') {
	      continue;
	    }
	    var styleValue = styles[styleName];
	    if (false) {
	      warnValidStyle(styleName, styleValue, component);
	    }
	    if (styleValue != null) {
	      if (isCustomProp) {
	        serialized += styleName + ':' + styleValue + ';';
	      } else {
	        serialized += processStyleName(styleName) + ':';
	        serialized += (0, _dangerousStyleValue2.default)(styleName, styleValue, component) + ';';
	      }
	    }
	  }
	  return serialized || null;
	}

/***/ }),
/* 111 */
/*!*****************************************!*\
  !*** ./~/fbjs/lib/camelizeStyleName.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var camelize = __webpack_require__(/*! ./camelize */ 112);
	
	var msPattern = /^-ms-/;
	
	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}
	
	module.exports = camelizeStyleName;

/***/ }),
/* 112 */
/*!********************************!*\
  !*** ./~/fbjs/lib/camelize.js ***!
  \********************************/
/***/ (function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	var _hyphenPattern = /-(.)/g;
	
	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}
	
	module.exports = camelize;

/***/ }),
/* 113 */
/*!*******************************************************************!*\
  !*** ./~/glamor/lib/CSSPropertyOperations/dangerousStyleValue.js ***!
  \*******************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _CSSProperty = __webpack_require__(/*! ./CSSProperty */ 114);
	
	var _CSSProperty2 = _interopRequireDefault(_CSSProperty);
	
	var _warning = __webpack_require__(/*! fbjs/lib/warning */ 115);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 */
	
	var isUnitlessNumber = _CSSProperty2.default.isUnitlessNumber;
	var styleWarnings = {};
	
	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901
	
	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }
	
	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }
	
	  if (typeof value === 'string') {
	    if (false) {
	      // Allow '0' to pass through without warning. 0 is already special and
	      // doesn't require units, so we don't need to warn about it.
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}
	
	exports.default = dangerousStyleValue;

/***/ }),
/* 114 */
/*!***********************************************************!*\
  !*** ./~/glamor/lib/CSSPropertyOperations/CSSProperty.js ***!
  \***********************************************************/
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */
	
	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridRowStart: true,
	  gridRowEnd: true,
	  gridColumn: true,
	  gridColumnStart: true,
	  gridColumnEnd: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,
	
	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	
	  /**
	   * @param {string} prefix vendor-specific prefix, eg: Webkit
	   * @param {string} key style name, eg: transitionDuration
	   * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	   * WebkitTransitionDuration
	   */
	};function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}
	
	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
	
	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});
	
	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};
	
	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};
	
	exports.default = CSSProperty;

/***/ }),
/* 115 */
/*!*******************************!*\
  !*** ./~/fbjs/lib/warning.js ***!
  \*******************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var emptyFunction = __webpack_require__(/*! ./emptyFunction */ 116);
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var warning = emptyFunction;
	
	if (false) {
	  var printWarning = function printWarning(format) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }
	
	    var argIndex = 0;
	    var message = 'Warning: ' + format.replace(/%s/g, function () {
	      return args[argIndex++];
	    });
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };
	
	  warning = function warning(condition, format) {
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }
	
	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }
	
	    if (!condition) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	        args[_key2 - 2] = arguments[_key2];
	      }
	
	      printWarning.apply(undefined, [format].concat(args));
	    }
	  };
	}
	
	module.exports = warning;

/***/ }),
/* 116 */
/*!*************************************!*\
  !*** ./~/fbjs/lib/emptyFunction.js ***!
  \*************************************/
/***/ (function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	
	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}
	
	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};
	
	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};
	
	module.exports = emptyFunction;

/***/ }),
/* 117 */
/*!******************************************!*\
  !*** ./~/fbjs/lib/hyphenateStyleName.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var hyphenate = __webpack_require__(/*! ./hyphenate */ 118);
	
	var msPattern = /^ms-/;
	
	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}
	
	module.exports = hyphenateStyleName;

/***/ }),
/* 118 */
/*!*********************************!*\
  !*** ./~/fbjs/lib/hyphenate.js ***!
  \*********************************/
/***/ (function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */
	
	var _uppercasePattern = /([A-Z])/g;
	
	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}
	
	module.exports = hyphenate;

/***/ }),
/* 119 */
/*!*****************************************!*\
  !*** ./~/fbjs/lib/memoizeStringOnly.js ***!
  \*****************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */
	
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}
	
	module.exports = memoizeStringOnly;

/***/ }),
/* 120 */
/*!*******************************!*\
  !*** ./~/glamor/lib/clean.js ***!
  \*******************************/
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.default = clean;
	// Returns true for null, false, undefined and {}
	function isFalsy(value) {
	  return value === null || value === undefined || value === false || (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && Object.keys(value).length === 0;
	}
	
	function cleanObject(object) {
	  if (isFalsy(object)) return null;
	  if ((typeof object === 'undefined' ? 'undefined' : _typeof(object)) !== 'object') return object;
	
	  var acc = {},
	      keys = Object.keys(object),
	      hasFalsy = false;
	  for (var i = 0; i < keys.length; i++) {
	    var value = object[keys[i]];
	    var filteredValue = clean(value);
	    if (filteredValue === null || filteredValue !== value) {
	      hasFalsy = true;
	    }
	    if (filteredValue !== null) {
	      acc[keys[i]] = filteredValue;
	    }
	  }
	  return Object.keys(acc).length === 0 ? null : hasFalsy ? acc : object;
	}
	
	function cleanArray(rules) {
	  var hasFalsy = false;
	  var filtered = [];
	  rules.forEach(function (rule) {
	    var filteredRule = clean(rule);
	    if (filteredRule === null || filteredRule !== rule) {
	      hasFalsy = true;
	    }
	    if (filteredRule !== null) {
	      filtered.push(filteredRule);
	    }
	  });
	  return filtered.length == 0 ? null : hasFalsy ? filtered : rules;
	}
	
	// Takes style array or object provided by user and clears all the falsy data 
	// If there is no styles left after filtration returns null
	function clean(input) {
	  return Array.isArray(input) ? cleanArray(input) : cleanObject(input);
	}

/***/ }),
/* 121 */
/*!*********************************!*\
  !*** ./~/glamor/lib/plugins.js ***!
  \*********************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.PluginSet = PluginSet;
	exports.fallbacks = fallbacks;
	exports.contentWrap = contentWrap;
	exports.prefixes = prefixes;
	
	var _objectAssign = __webpack_require__(/*! object-assign */ 108);
	
	var _objectAssign2 = _interopRequireDefault(_objectAssign);
	
	var _CSSPropertyOperations = __webpack_require__(/*! ./CSSPropertyOperations */ 110);
	
	var _prefixer = __webpack_require__(/*! ./prefixer */ 122);
	
	var _prefixer2 = _interopRequireDefault(_prefixer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var isDev = function (x) {
	  return x === 'development' || !x;
	}(("production"));
	
	function PluginSet(initial) {
	  this.fns = initial || [];
	}
	
	(0, _objectAssign2.default)(PluginSet.prototype, {
	  add: function add() {
	    var _this = this;
	
	    for (var _len = arguments.length, fns = Array(_len), _key = 0; _key < _len; _key++) {
	      fns[_key] = arguments[_key];
	    }
	
	    fns.forEach(function (fn) {
	      if (_this.fns.indexOf(fn) >= 0) {
	        if (isDev) {
	          console.warn('adding the same plugin again, ignoring'); //eslint-disable-line no-console
	        }
	      } else {
	        _this.fns = [fn].concat(_this.fns);
	      }
	    });
	  },
	  remove: function remove(fn) {
	    this.fns = this.fns.filter(function (x) {
	      return x !== fn;
	    });
	  },
	  clear: function clear() {
	    this.fns = [];
	  },
	  transform: function transform(o) {
	    return this.fns.reduce(function (o, fn) {
	      return fn(o);
	    }, o);
	  }
	});
	
	function fallbacks(node) {
	  var hasArray = Object.keys(node.style).map(function (x) {
	    return Array.isArray(node.style[x]);
	  }).indexOf(true) >= 0;
	  if (hasArray) {
	    var style = node.style;
	
	    var flattened = Object.keys(style).reduce(function (o, key) {
	      o[key] = Array.isArray(style[key]) ? style[key].join('; ' + (0, _CSSPropertyOperations.processStyleName)(key) + ': ') : style[key];
	      return o;
	    }, {});
	    // todo - 
	    // flatten arrays which haven't been flattened yet 
	    return (0, _objectAssign2.default)({}, node, { style: flattened });
	  }
	  return node;
	}
	
	var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit'];
	
	function contentWrap(node) {
	  if (node.style.content) {
	    var cont = node.style.content;
	    if (contentValues.indexOf(cont) >= 0) {
	      return node;
	    }
	    if (/^(attr|calc|counters?|url)\(/.test(cont)) {
	      return node;
	    }
	    if (cont.charAt(0) === cont.charAt(cont.length - 1) && (cont.charAt(0) === '"' || cont.charAt(0) === "'")) {
	      return node;
	    }
	    return _extends({}, node, { style: _extends({}, node.style, { content: '"' + cont + '"' }) });
	  }
	  return node;
	}
	
	function prefixes(node) {
	  return (0, _objectAssign2.default)({}, node, { style: (0, _prefixer2.default)(_extends({}, node.style)) });
	}

/***/ }),
/* 122 */
/*!**********************************!*\
  !*** ./~/glamor/lib/prefixer.js ***!
  \**********************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = prefixer;
	
	var _staticData = __webpack_require__(/*! inline-style-prefixer/static/staticData */ 123);
	
	var _staticData2 = _interopRequireDefault(_staticData);
	
	var _prefixProperty = __webpack_require__(/*! inline-style-prefixer/utils/prefixProperty */ 124);
	
	var _prefixProperty2 = _interopRequireDefault(_prefixProperty);
	
	var _prefixValue = __webpack_require__(/*! inline-style-prefixer/utils/prefixValue */ 126);
	
	var _prefixValue2 = _interopRequireDefault(_prefixValue);
	
	var _cursor = __webpack_require__(/*! inline-style-prefixer/static/plugins/cursor */ 127);
	
	var _cursor2 = _interopRequireDefault(_cursor);
	
	var _crossFade = __webpack_require__(/*! inline-style-prefixer/static/plugins/crossFade */ 128);
	
	var _crossFade2 = _interopRequireDefault(_crossFade);
	
	var _filter = __webpack_require__(/*! inline-style-prefixer/static/plugins/filter */ 130);
	
	var _filter2 = _interopRequireDefault(_filter);
	
	var _flex = __webpack_require__(/*! inline-style-prefixer/static/plugins/flex */ 131);
	
	var _flex2 = _interopRequireDefault(_flex);
	
	var _flexboxOld = __webpack_require__(/*! inline-style-prefixer/static/plugins/flexboxOld */ 132);
	
	var _flexboxOld2 = _interopRequireDefault(_flexboxOld);
	
	var _gradient = __webpack_require__(/*! inline-style-prefixer/static/plugins/gradient */ 133);
	
	var _gradient2 = _interopRequireDefault(_gradient);
	
	var _imageSet = __webpack_require__(/*! inline-style-prefixer/static/plugins/imageSet */ 134);
	
	var _imageSet2 = _interopRequireDefault(_imageSet);
	
	var _position = __webpack_require__(/*! inline-style-prefixer/static/plugins/position */ 135);
	
	var _position2 = _interopRequireDefault(_position);
	
	var _sizing = __webpack_require__(/*! inline-style-prefixer/static/plugins/sizing */ 136);
	
	var _sizing2 = _interopRequireDefault(_sizing);
	
	var _transition = __webpack_require__(/*! inline-style-prefixer/static/plugins/transition */ 137);
	
	var _transition2 = _interopRequireDefault(_transition);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var plugins = [_crossFade2.default, _cursor2.default, _filter2.default, _flexboxOld2.default, _gradient2.default, _imageSet2.default, _position2.default, _sizing2.default, _transition2.default, _flex2.default]; // custom facade for inline-style-prefixer
	
	var prefixMap = _staticData2.default.prefixMap;
	
	function prefixer(style) {
	  for (var property in style) {
	    var value = style[property];
	
	    var processedValue = (0, _prefixValue2.default)(plugins, property, value, style, prefixMap);
	
	    // only modify the value if it was touched
	    // by any plugin to prevent unnecessary mutations
	    if (processedValue) {
	      style[property] = processedValue;
	    }
	
	    (0, _prefixProperty2.default)(prefixMap, property, style);
	  }
	  return style;
	}

/***/ }),
/* 123 */
/*!******************************************************!*\
  !*** ./~/inline-style-prefixer/static/staticData.js ***!
  \******************************************************/
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var w = ["Webkit"];
	var m = ["Moz"];
	var ms = ["ms"];
	var wm = ["Webkit", "Moz"];
	var wms = ["Webkit", "ms"];
	var wmms = ["Webkit", "Moz", "ms"];
	
	exports.default = {
	  plugins: [],
	  prefixMap: { "appearance": wm, "userSelect": wmms, "textEmphasisPosition": w, "textEmphasis": w, "textEmphasisStyle": w, "textEmphasisColor": w, "boxDecorationBreak": w, "clipPath": w, "maskImage": w, "maskMode": w, "maskRepeat": w, "maskPosition": w, "maskClip": w, "maskOrigin": w, "maskSize": w, "maskComposite": w, "mask": w, "maskBorderSource": w, "maskBorderMode": w, "maskBorderSlice": w, "maskBorderWidth": w, "maskBorderOutset": w, "maskBorderRepeat": w, "maskBorder": w, "maskType": w, "textDecorationStyle": w, "textDecorationSkip": w, "textDecorationLine": w, "textDecorationColor": w, "filter": w, "fontFeatureSettings": w, "breakAfter": wmms, "breakBefore": wmms, "breakInside": wmms, "columnCount": wm, "columnFill": wm, "columnGap": wm, "columnRule": wm, "columnRuleColor": wm, "columnRuleStyle": wm, "columnRuleWidth": wm, "columns": wm, "columnSpan": wm, "columnWidth": wm, "writingMode": wms, "flex": w, "flexBasis": w, "flexDirection": w, "flexGrow": w, "flexFlow": w, "flexShrink": w, "flexWrap": w, "alignContent": w, "alignItems": w, "alignSelf": w, "justifyContent": w, "order": w, "transform": w, "transformOrigin": w, "transformOriginX": w, "transformOriginY": w, "backfaceVisibility": w, "perspective": w, "perspectiveOrigin": w, "transformStyle": w, "transformOriginZ": w, "animation": w, "animationDelay": w, "animationDirection": w, "animationFillMode": w, "animationDuration": w, "animationIterationCount": w, "animationName": w, "animationPlayState": w, "animationTimingFunction": w, "backdropFilter": w, "fontKerning": w, "scrollSnapType": wms, "scrollSnapPointsX": wms, "scrollSnapPointsY": wms, "scrollSnapDestination": wms, "scrollSnapCoordinate": wms, "shapeImageThreshold": w, "shapeImageMargin": w, "shapeImageOutside": w, "hyphens": wmms, "flowInto": wms, "flowFrom": wms, "regionFragment": wms, "textAlignLast": m, "tabSize": m, "wrapFlow": ms, "wrapThrough": ms, "wrapMargin": ms, "gridTemplateColumns": ms, "gridTemplateRows": ms, "gridTemplateAreas": ms, "gridTemplate": ms, "gridAutoColumns": ms, "gridAutoRows": ms, "gridAutoFlow": ms, "grid": ms, "gridRowStart": ms, "gridColumnStart": ms, "gridRowEnd": ms, "gridRow": ms, "gridColumn": ms, "gridColumnEnd": ms, "gridColumnGap": ms, "gridRowGap": ms, "gridArea": ms, "gridGap": ms, "textSizeAdjust": wms, "borderImage": w, "borderImageOutset": w, "borderImageRepeat": w, "borderImageSlice": w, "borderImageSource": w, "borderImageWidth": w, "transitionDelay": w, "transitionDuration": w, "transitionProperty": w, "transitionTimingFunction": w }
	};
	module.exports = exports["default"];

/***/ }),
/* 124 */
/*!*********************************************************!*\
  !*** ./~/inline-style-prefixer/utils/prefixProperty.js ***!
  \*********************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = prefixProperty;
	
	var _capitalizeString = __webpack_require__(/*! ./capitalizeString */ 125);
	
	var _capitalizeString2 = _interopRequireDefault(_capitalizeString);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function prefixProperty(prefixProperties, property, style) {
	  if (prefixProperties.hasOwnProperty(property)) {
	    var requiredPrefixes = prefixProperties[property];
	    for (var i = 0, len = requiredPrefixes.length; i < len; ++i) {
	      style[requiredPrefixes[i] + (0, _capitalizeString2.default)(property)] = style[property];
	    }
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 125 */
/*!***********************************************************!*\
  !*** ./~/inline-style-prefixer/utils/capitalizeString.js ***!
  \***********************************************************/
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = capitalizeString;
	function capitalizeString(str) {
	  return str.charAt(0).toUpperCase() + str.slice(1);
	}
	module.exports = exports["default"];

/***/ }),
/* 126 */
/*!******************************************************!*\
  !*** ./~/inline-style-prefixer/utils/prefixValue.js ***!
  \******************************************************/
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = prefixValue;
	function prefixValue(plugins, property, value, style, metaData) {
	  for (var i = 0, len = plugins.length; i < len; ++i) {
	    var processedValue = plugins[i](property, value, style, metaData);
	
	    // we can stop processing if a value is returned
	    // as all plugin criteria are unique
	    if (processedValue) {
	      return processedValue;
	    }
	  }
	}
	module.exports = exports["default"];

/***/ }),
/* 127 */
/*!**********************************************************!*\
  !*** ./~/inline-style-prefixer/static/plugins/cursor.js ***!
  \**********************************************************/
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = cursor;
	var prefixes = ['-webkit-', '-moz-', ''];
	
	var values = {
	  'zoom-in': true,
	  'zoom-out': true,
	  grab: true,
	  grabbing: true
	};
	
	function cursor(property, value) {
	  if (property === 'cursor' && values.hasOwnProperty(value)) {
	    return prefixes.map(function (prefix) {
	      return prefix + value;
	    });
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 128 */
/*!*************************************************************!*\
  !*** ./~/inline-style-prefixer/static/plugins/crossFade.js ***!
  \*************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = crossFade;
	
	var _isPrefixedValue = __webpack_require__(/*! css-in-js-utils/lib/isPrefixedValue */ 129);
	
	var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// http://caniuse.com/#search=cross-fade
	var prefixes = ['-webkit-', ''];
	function crossFade(property, value) {
	  if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && value.indexOf('cross-fade(') > -1) {
	    return prefixes.map(function (prefix) {
	      return value.replace(/cross-fade\(/g, prefix + 'cross-fade(');
	    });
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 129 */
/*!**************************************************!*\
  !*** ./~/css-in-js-utils/lib/isPrefixedValue.js ***!
  \**************************************************/
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isPrefixedValue;
	var regex = /-webkit-|-moz-|-ms-/;
	
	function isPrefixedValue(value) {
	  return typeof value === 'string' && regex.test(value);
	}
	module.exports = exports['default'];

/***/ }),
/* 130 */
/*!**********************************************************!*\
  !*** ./~/inline-style-prefixer/static/plugins/filter.js ***!
  \**********************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = filter;
	
	var _isPrefixedValue = __webpack_require__(/*! css-in-js-utils/lib/isPrefixedValue */ 129);
	
	var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// http://caniuse.com/#feat=css-filter-function
	var prefixes = ['-webkit-', ''];
	function filter(property, value) {
	  if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && value.indexOf('filter(') > -1) {
	    return prefixes.map(function (prefix) {
	      return value.replace(/filter\(/g, prefix + 'filter(');
	    });
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 131 */
/*!********************************************************!*\
  !*** ./~/inline-style-prefixer/static/plugins/flex.js ***!
  \********************************************************/
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = flex;
	var values = {
	  flex: ['-webkit-box', '-moz-box', '-ms-flexbox', '-webkit-flex', 'flex'],
	  'inline-flex': ['-webkit-inline-box', '-moz-inline-box', '-ms-inline-flexbox', '-webkit-inline-flex', 'inline-flex']
	};
	
	function flex(property, value) {
	  if (property === 'display' && values.hasOwnProperty(value)) {
	    return values[value];
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 132 */
/*!**************************************************************!*\
  !*** ./~/inline-style-prefixer/static/plugins/flexboxOld.js ***!
  \**************************************************************/
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = flexboxOld;
	var alternativeValues = {
	  'space-around': 'justify',
	  'space-between': 'justify',
	  'flex-start': 'start',
	  'flex-end': 'end',
	  'wrap-reverse': 'multiple',
	  wrap: 'multiple'
	};
	
	var alternativeProps = {
	  alignItems: 'WebkitBoxAlign',
	  justifyContent: 'WebkitBoxPack',
	  flexWrap: 'WebkitBoxLines'
	};
	
	function flexboxOld(property, value, style) {
	  if (property === 'flexDirection' && typeof value === 'string') {
	    if (value.indexOf('column') > -1) {
	      style.WebkitBoxOrient = 'vertical';
	    } else {
	      style.WebkitBoxOrient = 'horizontal';
	    }
	    if (value.indexOf('reverse') > -1) {
	      style.WebkitBoxDirection = 'reverse';
	    } else {
	      style.WebkitBoxDirection = 'normal';
	    }
	  }
	  if (alternativeProps.hasOwnProperty(property)) {
	    style[alternativeProps[property]] = alternativeValues[value] || value;
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 133 */
/*!************************************************************!*\
  !*** ./~/inline-style-prefixer/static/plugins/gradient.js ***!
  \************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = gradient;
	
	var _isPrefixedValue = __webpack_require__(/*! css-in-js-utils/lib/isPrefixedValue */ 129);
	
	var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var prefixes = ['-webkit-', '-moz-', ''];
	
	var values = /linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/;
	
	function gradient(property, value) {
	  if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && values.test(value)) {
	    return prefixes.map(function (prefix) {
	      return prefix + value;
	    });
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 134 */
/*!************************************************************!*\
  !*** ./~/inline-style-prefixer/static/plugins/imageSet.js ***!
  \************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = imageSet;
	
	var _isPrefixedValue = __webpack_require__(/*! css-in-js-utils/lib/isPrefixedValue */ 129);
	
	var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// http://caniuse.com/#feat=css-image-set
	var prefixes = ['-webkit-', ''];
	function imageSet(property, value) {
	  if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && value.indexOf('image-set(') > -1) {
	    return prefixes.map(function (prefix) {
	      return value.replace(/image-set\(/g, prefix + 'image-set(');
	    });
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 135 */
/*!************************************************************!*\
  !*** ./~/inline-style-prefixer/static/plugins/position.js ***!
  \************************************************************/
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = position;
	function position(property, value) {
	  if (property === 'position' && value === 'sticky') {
	    return ['-webkit-sticky', 'sticky'];
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 136 */
/*!**********************************************************!*\
  !*** ./~/inline-style-prefixer/static/plugins/sizing.js ***!
  \**********************************************************/
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = sizing;
	var prefixes = ['-webkit-', '-moz-', ''];
	
	var properties = {
	  maxHeight: true,
	  maxWidth: true,
	  width: true,
	  height: true,
	  columnWidth: true,
	  minWidth: true,
	  minHeight: true
	};
	var values = {
	  'min-content': true,
	  'max-content': true,
	  'fill-available': true,
	  'fit-content': true,
	  'contain-floats': true
	};
	
	function sizing(property, value) {
	  if (properties.hasOwnProperty(property) && values.hasOwnProperty(value)) {
	    return prefixes.map(function (prefix) {
	      return prefix + value;
	    });
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 137 */
/*!**************************************************************!*\
  !*** ./~/inline-style-prefixer/static/plugins/transition.js ***!
  \**************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = transition;
	
	var _hyphenateProperty = __webpack_require__(/*! css-in-js-utils/lib/hyphenateProperty */ 138);
	
	var _hyphenateProperty2 = _interopRequireDefault(_hyphenateProperty);
	
	var _isPrefixedValue = __webpack_require__(/*! css-in-js-utils/lib/isPrefixedValue */ 129);
	
	var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);
	
	var _capitalizeString = __webpack_require__(/*! ../../utils/capitalizeString */ 125);
	
	var _capitalizeString2 = _interopRequireDefault(_capitalizeString);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var properties = {
	  transition: true,
	  transitionProperty: true,
	  WebkitTransition: true,
	  WebkitTransitionProperty: true,
	  MozTransition: true,
	  MozTransitionProperty: true
	};
	
	
	var prefixMapping = {
	  Webkit: '-webkit-',
	  Moz: '-moz-',
	  ms: '-ms-'
	};
	
	function prefixValue(value, propertyPrefixMap) {
	  if ((0, _isPrefixedValue2.default)(value)) {
	    return value;
	  }
	
	  // only split multi values, not cubic beziers
	  var multipleValues = value.split(/,(?![^()]*(?:\([^()]*\))?\))/g);
	
	  for (var i = 0, len = multipleValues.length; i < len; ++i) {
	    var singleValue = multipleValues[i];
	    var values = [singleValue];
	    for (var property in propertyPrefixMap) {
	      var dashCaseProperty = (0, _hyphenateProperty2.default)(property);
	
	      if (singleValue.indexOf(dashCaseProperty) > -1 && dashCaseProperty !== 'order') {
	        var prefixes = propertyPrefixMap[property];
	        for (var j = 0, pLen = prefixes.length; j < pLen; ++j) {
	          // join all prefixes and create a new value
	          values.unshift(singleValue.replace(dashCaseProperty, prefixMapping[prefixes[j]] + dashCaseProperty));
	        }
	      }
	    }
	
	    multipleValues[i] = values.join(',');
	  }
	
	  return multipleValues.join(',');
	}
	
	function transition(property, value, style, propertyPrefixMap) {
	  // also check for already prefixed transitions
	  if (typeof value === 'string' && properties.hasOwnProperty(property)) {
	    var outputValue = prefixValue(value, propertyPrefixMap);
	    // if the property is already prefixed
	    var webkitOutput = outputValue.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter(function (val) {
	      return !/-moz-|-ms-/.test(val);
	    }).join(',');
	
	    if (property.indexOf('Webkit') > -1) {
	      return webkitOutput;
	    }
	
	    var mozOutput = outputValue.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter(function (val) {
	      return !/-webkit-|-ms-/.test(val);
	    }).join(',');
	
	    if (property.indexOf('Moz') > -1) {
	      return mozOutput;
	    }
	
	    style['Webkit' + (0, _capitalizeString2.default)(property)] = webkitOutput;
	    style['Moz' + (0, _capitalizeString2.default)(property)] = mozOutput;
	    return outputValue;
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 138 */
/*!****************************************************!*\
  !*** ./~/css-in-js-utils/lib/hyphenateProperty.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = hyphenateProperty;
	
	var _hyphenateStyleName = __webpack_require__(/*! hyphenate-style-name */ 139);
	
	var _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function hyphenateProperty(property) {
	  return (0, _hyphenateStyleName2.default)(property);
	}
	module.exports = exports['default'];

/***/ }),
/* 139 */
/*!*****************************************!*\
  !*** ./~/hyphenate-style-name/index.js ***!
  \*****************************************/
/***/ (function(module, exports) {

	'use strict';
	
	var uppercasePattern = /[A-Z]/g;
	var msPattern = /^ms-/;
	var cache = {};
	
	function hyphenateStyleName(string) {
	    return string in cache
	    ? cache[string]
	    : cache[string] = string
	      .replace(uppercasePattern, '-$&')
	      .toLowerCase()
	      .replace(msPattern, '-ms-');
	}
	
	module.exports = hyphenateStyleName;


/***/ }),
/* 140 */
/*!******************************!*\
  !*** ./~/glamor/lib/hash.js ***!
  \******************************/
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = doHash;
	// murmurhash2 via https://gist.github.com/raycmorgan/588423
	
	function doHash(str, seed) {
	  var m = 0x5bd1e995;
	  var r = 24;
	  var h = seed ^ str.length;
	  var length = str.length;
	  var currentIndex = 0;
	
	  while (length >= 4) {
	    var k = UInt32(str, currentIndex);
	
	    k = Umul32(k, m);
	    k ^= k >>> r;
	    k = Umul32(k, m);
	
	    h = Umul32(h, m);
	    h ^= k;
	
	    currentIndex += 4;
	    length -= 4;
	  }
	
	  switch (length) {
	    case 3:
	      h ^= UInt16(str, currentIndex);
	      h ^= str.charCodeAt(currentIndex + 2) << 16;
	      h = Umul32(h, m);
	      break;
	
	    case 2:
	      h ^= UInt16(str, currentIndex);
	      h = Umul32(h, m);
	      break;
	
	    case 1:
	      h ^= str.charCodeAt(currentIndex);
	      h = Umul32(h, m);
	      break;
	  }
	
	  h ^= h >>> 13;
	  h = Umul32(h, m);
	  h ^= h >>> 15;
	
	  return h >>> 0;
	}
	
	function UInt32(str, pos) {
	  return str.charCodeAt(pos++) + (str.charCodeAt(pos++) << 8) + (str.charCodeAt(pos++) << 16) + (str.charCodeAt(pos) << 24);
	}
	
	function UInt16(str, pos) {
	  return str.charCodeAt(pos++) + (str.charCodeAt(pos++) << 8);
	}
	
	function Umul32(n, m) {
	  n = n | 0;
	  m = m | 0;
	  var nlo = n & 0xffff;
	  var nhi = n >>> 16;
	  var res = nlo * m + ((nhi * m & 0xffff) << 16) | 0;
	  return res;
	}

/***/ }),
/* 141 */
/*!**************************************!*\
  !*** ./public_ufe/js/utils/radii.js ***!
  \**************************************/
/***/ (function(module, exports) {

	'use strict';
	
	/**
	 * Utility for extracting border radii props from components
	 */
	
	function radii(props) {
	    var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;
	
	    var _ref = props || {},
	        rounded = _ref.rounded,
	        pill = _ref.pill,
	        circle = _ref.circle;
	
	    var borderRadius = void 0;
	
	    if (rounded === true) {
	        borderRadius = r;
	    } else if (rounded === false) {
	        borderRadius = 0;
	    } else if (typeof rounded === 'number') {
	        borderRadius = rounded;
	    }
	
	    if (typeof rounded === 'string') {
	        var obj = {
	            top: r + 'px ' + r + 'px 0 0',
	            right: '0 ' + r + 'px ' + r + 'px 0',
	            bottom: '0 0 ' + r + 'px ' + r + 'px',
	            left: r + 'px 0 0 ' + r + 'px'
	        };
	        borderRadius = obj[rounded] || null;
	    }
	
	    if (pill || circle) {
	        borderRadius = 99999;
	    }
	
	    if (typeof borderRadius === 'undefined') {
	        return {};
	    } else {
	        return {
	            borderRadius: borderRadius
	        };
	    }
	}
	
	module.exports = radii;

/***/ }),
/* 142 */
/*!**************************************************************************!*\
  !*** ./public_ufe/js/components/Bcc/BccStyleWrapper/BccStyleWrapper.jsx ***!
  \**************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['BccStyleWrapper'] = function BccStyleWrapper() {
	        return BccStyleWrapperClass;
	    };
	}
	
	var _require = __webpack_require__(/*! style */ 106),
	    space = _require.space;
	
	var Box = __webpack_require__(/*! components/Box/Box */ 143);
	
	var BccStyleWrapper = function BccStyleWrapper() {};
	
	BccStyleWrapper.prototype.render = function () {
	    var _props = this.props,
	        isTopNav = _props.isTopNav,
	        customStyle = _props.customStyle,
	        props = _objectWithoutProperties(_props, ['isTopNav', 'customStyle']);
	
	    // convert style properties Array to Object
	
	
	    var styleProps = {};
	    customStyle && customStyle.map(function (property) {
	        styleProps[property] = true;
	    });
	
	    var verticalPadding = isTopNav ? space[4] : Sephora.isMobile() ? space[6] : space[7];
	
	    var classes = void 0;
	    if (styleProps.FR_CA_HIDE) {
	        classes = 'OneLinkHide';
	    } else if (styleProps.FR_CA_SHOW) {
	        classes = 'OneLinkShow';
	    }
	
	    return React.createElement(Box, _extends({}, props, {
	        className: classes,
	        paddingTop: styleProps.TOP_PADDING ? verticalPadding : null,
	        paddingBottom: styleProps.BOTTOM_PADDING ? verticalPadding : null }));
	};
	
	// Added by sephora-jsx-loader.js
	BccStyleWrapper.prototype.path = 'Bcc/BccStyleWrapper';
	// Added by sephora-jsx-loader.js
	BccStyleWrapper.prototype.class = 'BccStyleWrapper';
	// Added by sephora-jsx-loader.js
	BccStyleWrapper.prototype.getInitialState = function () {
	    BccStyleWrapper.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	BccStyleWrapper.prototype.render = wrapComponentRender(BccStyleWrapper.prototype.render);
	// Added by sephora-jsx-loader.js
	var BccStyleWrapperClass = React.createClass(BccStyleWrapper.prototype);
	// Added by sephora-jsx-loader.js
	BccStyleWrapperClass.prototype.classRef = BccStyleWrapperClass;
	// Added by sephora-jsx-loader.js
	Object.assign(BccStyleWrapperClass, BccStyleWrapper);
	// Added by sephora-jsx-loader.js
	module.exports = BccStyleWrapperClass;

/***/ }),
/* 143 */
/*!**********************************************!*\
  !*** ./public_ufe/js/components/Box/Box.jsx ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['Box'] = function Box() {
	        return BoxClass;
	    };
	}
	var Base = __webpack_require__(/*! components/Base/Base */ 105);
	
	var Box = function Box() {};
	
	Box.prototype.render = function () {
	    var _props = this.props,
	        is = _props.is,
	        display = _props.display,
	        props = _objectWithoutProperties(_props, ['is', 'display']);
	
	    var isFlex = display === 'flex' || display === 'inline-flex';
	
	    var Component = 'div';
	
	    if (is) {
	        Component = is;
	    } else if (this.props.href) {
	        Component = 'a';
	        /* NOTE: firefox 39 does not currently support flex layout on `button` */
	    } else if (this.props.onClick && !isFlex) {
	        Component = 'button';
	    }
	
	    var defaultDisplay = Component !== 'div' ? 'block' : null;
	
	    return React.createElement(Base, _extends({}, props, {
	        is: Component,
	        display: display || defaultDisplay }));
	};
	
	// Added by sephora-jsx-loader.js
	Box.prototype.path = 'Box';
	// Added by sephora-jsx-loader.js
	Box.prototype.class = 'Box';
	// Added by sephora-jsx-loader.js
	Box.prototype.getInitialState = function () {
	    Box.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	Box.prototype.render = wrapComponentRender(Box.prototype.render);
	// Added by sephora-jsx-loader.js
	var BoxClass = React.createClass(Box.prototype);
	// Added by sephora-jsx-loader.js
	BoxClass.prototype.classRef = BoxClass;
	// Added by sephora-jsx-loader.js
	Object.assign(BoxClass, Box);
	// Added by sephora-jsx-loader.js
	module.exports = BoxClass;

/***/ }),
/* 144 */
/*!*********************************************!*\
  !*** ./public_ufe/js/pages/Empty/Empty.jsx ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['Empty'] = function Empty() {
	        return EmptyClass;
	    };
	}
	var Empty = function Empty() {
	    return null;
	};
	
	Empty.prototype.getInitialState = Empty;
	
	Empty.prototype.render = function () {
	    return null;
	};
	
	// Added by sephora-jsx-loader.js
	Empty.prototype.path = 'Empty';
	// Added by sephora-jsx-loader.js
	Empty.prototype.class = 'Empty';
	// Added by sephora-jsx-loader.js
	Empty.prototype.getInitialState = function () {
	    Empty.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	Empty.prototype.render = wrapComponentRender(Empty.prototype.render);
	// Added by sephora-jsx-loader.js
	var EmptyClass = React.createClass(Empty.prototype);
	// Added by sephora-jsx-loader.js
	EmptyClass.prototype.classRef = EmptyClass;
	// Added by sephora-jsx-loader.js
	Object.assign(EmptyClass, Empty);
	// Added by sephora-jsx-loader.js
	module.exports = EmptyClass;

/***/ }),
/* 145 */
/*!*************************************************************!*\
  !*** ./public_ufe/js/components/TestTarget/TestTarget.c.js ***!
  \*************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	var TestTarget = function TestTarget() {};
	
	// Added by sephora-jsx-loader.js
	TestTarget.prototype.shouldComponentUpdate = wrapComponentRenderModule.shouldComponentUpdate;
	var store = __webpack_require__(/*! Store */ 146);
	var watch = __webpack_require__(/*! redux-watch */ 187);
	var Events = __webpack_require__(/*! utils/framework/Events */ 95);
	var BCC = __webpack_require__(/*! utils/BCC */ 364);
	var TEST_TYPES = __webpack_require__(/*! utils/TestTarget */ 365).TEST_TYPES;
	var setSwapComponent = __webpack_require__(/*! actions/TestTargetActions */ 341).setSwapComponent;
	
	/**
	  * T&T tested components may need to be explicitly added here in case they haven't been required
	  * by another component (meaning it does not yet exist in the component library).
	  *
	  * These require statements are wrapped in require.ensure so that the required component
	  * and its dependencies are not included in the priority bundle. They are added to the
	  * components chunk instead.
	  */
	
	// require.ensure([], function(require) {
	//     if (!Sephora.isRootRender) {
	//         Sephora.Util.InflatorComps.Comps.Test = function () {
	//             return require('components/Test/Test');
	//         };
	//      }
	// }, 'components');
	
	TestTarget.prototype.ctrlr = function () {
	    var _this = this;
	
	    if (Sephora.isThirdPartySite) {
	        this.defaultToControl();
	        return;
	    }
	
	    var testComponentClassLoaded = new Promise(function (resolve, reject) {
	        Events.onLastLoadEvent(window, [Events.TestTargetReady], function () {
	            if (Sephora.Util.InflatorComps.Comps[_this.props.testComponent]) {
	                resolve();
	            } else {
	                Events.onLastLoadEvent(window, [Events.InPageCompsCtrlrsApplied], function () {
	                    if (Sephora.Util.InflatorComps.Comps[_this.props.testComponent]) {
	                        resolve();
	                    } else {
	                        reject();
	                    }
	                });
	            }
	        });
	    });
	
	    testComponentClassLoaded.then(function () {
	
	        _this.executeTest();
	
	        // Subscribe to T&T updates
	        var testTargetWatch = watch(store.getState, 'testTarget.results');
	        store.subscribe(testTargetWatch(function (newVal) {
	            _this.executeTest();
	        }));
	    }, function () {
	
	        /* TODO: Find an optimal solution for edge cases where the component class
	        may not be available yet. */
	        var warning = 'TestTarget: %s component class was not found, rendering empty instead.';
	        return console.error(warning, _this.props.testComponent);
	    });
	};
	
	TestTarget.prototype.executeTest = function () {
	    var _this2 = this;
	
	    var results = store.getState().testTarget;
	    var testResults = this.getTestResults(results);
	    var testEligible = this.props.testName && this.props.testEnabled && testResults;
	
	    if (!results.timeout && testEligible) {
	
	        /* Handle tests involving BCC components*/
	        if (this.props.isBcc && testResults.currentTest.testType !== undefined) {
	
	            switch (testResults.currentTest.testType) {
	                case TEST_TYPES.REORDERING:
	
	                    /* Retrieve the name of the component that is supposed to swap with
	                    this instance. */
	
	                    // jscs:disable maximumLineLength
	                    if (this.props.name in testResults.currentTest.arrangement) {
	                        var replacementComponent = testResults.currentTest.arrangement[this.props.name];
	
	                        this.registerSwapComponents(testResults.currentTest, testResults.testName).then(function (components) {
	                            return _this2.handleComponentSwap(components, replacementComponent);
	                        }, function (err) {
	                            return _this2.defaultToControl(err);
	                        });
	                    } else {
	                        this.defaultToControl();
	                    }
	                    break;
	                case TEST_TYPES.TOGGLE:
	                    if (this.shouldHideComponent(testResults.currentTest.result)) {
	                        this.setState({ componentHidden: true });
	                        /* If component is to be hidden, returns to remain <Empty> and sets
	                        componentHidden flag to hide bccStyleWrapper. */
	                        return;
	                    } else {
	
	                        //jscs: disable maximumLineLength
	                        this.setState({
	                            displayComponent: Sephora.Util.InflatorComps.Comps[this.props.testComponent](),
	                            updateProps: false
	                        });
	                        break;
	                    }
	
	                default:
	                    this.defaultToControl();
	            }
	
	            /* Handle hard-coded tests */
	        } else {
	            this.setState({
	                displayComponent: Sephora.Util.InflatorComps.Comps[this.props.testComponent](),
	                updateProps: { testTarget: _defineProperty({}, testResults.testName, testResults.currentTest) }
	            });
	        }
	
	        if (this.props.testCallback) {
	            /* Hook to execute a callback when the test executes, useful for state changes */
	            this.props.testCallback();
	        }
	    } else {
	
	        /* Default to control if:
	        ** 1. Test is disabled
	        ** 2. testName was not passed
	        ** 3. No matching result in store
	        ** 4. Test flag is false in store
	        ** 5. T&T service timeouts
	        */
	        this.defaultToControl();
	    }
	};
	
	TestTarget.prototype.getTestResults = function (results) {
	    //TODO: BCC and API should return an array of tests
	    var testNames = this.props.testName ? this.props.testName.split(',') : [];
	
	    var testResults = [];
	
	    testNames.forEach(function (name) {
	        var trimmedName = name.trim();
	
	        if (results.offers[trimmedName]) {
	            testResults.push({
	                testName: trimmedName,
	                currentTest: results.offers[trimmedName]
	            });
	        }
	    });
	
	    if (testResults.length) {
	        return testResults.pop();
	    } else {
	        return false;
	    }
	};
	
	TestTarget.prototype.defaultToControl = function (error) {
	    var defaultProps = void 0;
	
	    if (this.props.isBcc) {
	        defaultProps = this.props;
	    } else {
	        defaultProps = { testTarget: false };
	    }
	
	    /* Render component as control case */
	    this.setState({
	        displayComponent: Sephora.Util.InflatorComps.Comps[this.props.testComponent](),
	        updateProps: defaultProps
	    });
	
	    if (error) {
	        console.error(error);
	    }
	};
	
	/**
	 * @param {object} currentTest - This test's corresponding object sent from T&T.
	 */
	TestTarget.prototype.shouldHideComponent = function (currentTest) {
	    return typeof currentTest.isHidden !== 'undefined' && currentTest.isHidden;
	};
	
	/**
	 * @param {array} components - This test's associated components.
	 * @param {string} componentName - The name of the component to be swapped with (BCC property).
	 */
	TestTarget.prototype.handleComponentSwap = function (components, componentName) {
	
	    /* Set the component's default setup as fallback. */
	    var componentToRender = this.props.testComponent;
	    var propsToRender = this.props;
	
	    /* If there's no replaceComponent, then just hide the original one */
	    if (!componentName) {
	        this.setState({ componentHidden: true });
	        return;
	    }
	
	    /* Filter the current test's component 'library' with the name of the component to be
	    swapped with. */
	    var replacement = components.filter(function (component) {
	        return component.name === componentName;
	    });
	
	    /* Ideally, the filtering will always return one component, however, we do a safety
	    check in case there is a mismatch between the component names. If that is the case,
	    it will render with the fallback set above. */
	    if (replacement.length) {
	        replacement = replacement.pop();
	
	        /* Render this instance with the data of the component that it's being swapped with. */
	        componentToRender = replacement.testComponent;
	        propsToRender = replacement;
	    }
	
	    this.setState({
	        displayComponent: Sephora.Util.InflatorComps.Comps[componentToRender](),
	        updateProps: propsToRender
	    });
	};
	
	/**
	 * @param {object} currentTest - This test's corresponding object sent from T&T.
	 */
	TestTarget.prototype.registerSwapComponents = function (currentTest, testName) {
	    /* Send component data to store so other instances can make it their own. */
	    var modifiedProps = Object.assign({}, this.props);
	    modifiedProps.testName = testName;
	
	    store.dispatch(setSwapComponent(modifiedProps));
	
	    /* Wait until the tested component's data is registered in the store before starting
	    ** to swap.
	    */
	    return new Promise(function (resolve, reject) {
	        var getSwapComponents = function getSwapComponents() {
	            return store.getState().testTarget.swaps[testName];
	        };
	
	        /* Resolve only when all components being tested have been stored. */
	        var componentsHaveBeenRegistered = function componentsHaveBeenRegistered() {
	            var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getSwapComponents();
	            return components.length === currentTest.componentCount;
	        };
	
	        if (componentsHaveBeenRegistered()) {
	            resolve(getSwapComponents());
	        } else {
	
	            /* Default to control in case test setup was misconfigured. This will occur if the
	            amount of BCC components asigned to a same test does not match the component count
	            setting in the T&T result. */
	            var TIMEOUT = 3000;
	            setTimeout(function () {
	                reject('TestTarget: component test ' + testName + ' has timeout.');
	            }, TIMEOUT);
	
	            /* Watch for components being registered to swap. */
	            var watcher = watch(store.getState, 'testTarget.swaps');
	            store.subscribe(watcher(function (newVal) {
	                if (componentsHaveBeenRegistered(newVal[testName])) {
	                    resolve(newVal[testName]);
	                }
	            }));
	        }
	    });
	};
	
	// Added by sephora-jsx-loader.js
	module.exports = TestTarget.prototype;

/***/ }),
/* 146 */
/*!**************************************!*\
  !*** ./public_ufe/js/store/Store.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _redux = __webpack_require__(/*! redux */ 147);
	
	var _reduxThunk = __webpack_require__(/*! redux-thunk */ 166);
	
	var _reduxThunk2 = _interopRequireDefault(_reduxThunk);
	
	var _reducers = __webpack_require__(/*! reducers/reducers */ 167);
	
	var _reducers2 = _interopRequireDefault(_reducers);
	
	var _reduxWatch = __webpack_require__(/*! redux-watch */ 187);
	
	var _reduxWatch2 = _interopRequireDefault(_reduxWatch);
	
	var _objectPath = __webpack_require__(/*! object-path */ 188);
	
	var _Helpers = __webpack_require__(/*! utils/Helpers */ 189);
	
	var _reduxActionWatch = __webpack_require__(/*! redux-action-watch */ 352);
	
	var _reduxActionWatch2 = _interopRequireDefault(_reduxActionWatch);
	
	var _Constants = __webpack_require__(/*! utils/framework/Constants */ 104);
	
	var _Constants2 = _interopRequireDefault(_Constants);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var actionWatchMiddleware = _reduxActionWatch2.default.middleware(_Constants2.default.ACTION_WATCHER_STATE_NAME);
	
	var store = (0, _redux.createStore)(_reducers2.default, (0, _redux.applyMiddleware)(actionWatchMiddleware, _reduxThunk2.default));
	
	var originalDispatch = store.dispatch;
	store.dispatch = function (action) {
	    if (action instanceof Promise) {
	        // TODO: wait for code to load in Sephora.isLegacyMode
	        action.then(function (actionResult) {
	            return originalDispatch.call(store, actionResult);
	        });
	    } else {
	        originalDispatch.call(store, action);
	    }
	};
	
	/**
	 *
	 * @param  {string || object} properties - You can pass a string describing the store property
	 * name that you're interacting with. This will get pattern-matched to a property of the same name
	 * in your local state. Eg. store.setAndWatch('user', this);
	 *
	 * If you need to a different name for your local state property, pass an object instead of a string
	 * where the key name is the store property name, and the key value is the local state property
	 * name. Eg. store.setAndWatch({'user': 'myUser'}, this);
	 *
	 * If you need to access a nested property you can look for it using dot notation.
	 * Eg. store.setAndWatch('user.firstName', this). If you pass as string it will use the deepest
	 * property to name the local state property. You can pass as object to specify the propert name
	 * too: store.setAndWatch({'user.firstName': 'userName'}, this);
	 *
	 * You can pass multiple properties to setAndWatch together by passing inside an array. These
	 * properties will be grouped together in the initial setState object, but will have independent
	 * watchers set for each properties. Likewise, you can specify the properties in any of the formats
	 * described above.
	 * Eg. store.setAndWatch(['basket', 'user.firstName', {'loves.currentLoves': 'loves'}], this);
	 *
	 * @param  {object} component - Component reference if state is to be controlled automatically
	 * Eg. store.setAndWatch('user', this); You can pass null if you don't need the state operations
	 * but still get and watch a given value with the callback (useful for just doing side effects
	 * or usage in util functions).
	 *
	 * @param  {function} callback - Callback function gets executed initially after setState and in
	 * each watcher's tick. If no component was passed the callback is still executed initially and in
	 * each watcher's tick. The callback gets passed the given store property value, and its old value
	 * in the case of the watcher.
	 * Eg. store.setAndWatch('user.firstName', null, (name) => console.log('Hi, ' + name));
	 *
	 * If you need more leverage in your state operation, you can use the callback for setting state.
	 * Just make sure you don't pass the component reference.
	 * Eg. store.setAndWatch('user', null, (userData) => {
	 *      this.setState({
	 *          user: userData,
	 *          isBI: this.isBeautyInsider(userData);
	 *      });
	 * });
	 * @return {array} - returns an array with all the store watchers that were set.
	 * store.subscribe returns a function which you call in order to remove the subscription,
	 * so in this case you can unsubscribe from a given property like this:
	 *
	 * let subscriptions = store.setAndWatch(['user'], this);
	 * subscriptions[0]();
	 */
	store.setAndWatch = function (properties, component) {
	    var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
	
	    var propertyMap = {};
	    var watchers = [];
	
	    if (typeof properties === 'string' || (0, _Helpers.isObject)(properties)) {
	        properties = [properties];
	    }
	
	    if (component && !component.state) {
	
	        // jscs:disable maximumLineLength
	        console.error('[Store.setAndWatch]: Components passed must have a state object in order ' + 'to set state. Skipping state operation.');
	    }
	
	    function handleState(value) {
	        var oldValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
	
	        if (component && component.state) {
	
	            /*jshint ignore:start*/
	            component.setState(_extends({}, value), function () {
	                if (callback) {
	                    callback.call(component, value, oldValue);
	                }
	            });
	
	            /*jshint ignore:end*/
	        } else if (callback) {
	            callback(value, oldValue);
	        }
	    }
	
	    function getPropertyName(property) {
	
	        // Names property after the deepest nested property
	        if (property.indexOf('.') > -1) {
	            return property.split('.').pop();
	        } else {
	            return property;
	        }
	    }
	
	    function getObjectData(object) {
	        var objectProperties = Object.keys(object);
	
	        if (objectProperties.length > 1) {
	
	            // jscs:disable maximumLineLength
	            console.error('[Store.setAndWatch]: Objects passed can only have one assigned proper' + 'ty each. Use separate objects for each property that you need to set and watch.');
	        }
	
	        var keyName = objectProperties[0];
	        var keyValue = object[keyName];
	
	        return {
	            keyName: keyName,
	            keyValue: keyValue
	        };
	    }
	
	    properties.forEach(function (property) {
	        var storeValue = void 0;
	        var propertyName = void 0;
	
	        if ((0, _Helpers.isObject)(property)) {
	            var _getObjectData = getObjectData(property),
	                keyName = _getObjectData.keyName,
	                keyValue = _getObjectData.keyValue;
	
	            storeValue = (0, _objectPath.get)(store.getState(), keyName);
	            propertyName = keyValue;
	        } else {
	            storeValue = (0, _objectPath.get)(store.getState(), property);
	            propertyName = getPropertyName(property);
	        }
	
	        propertyMap[propertyName] = storeValue;
	    });
	
	    handleState(propertyMap);
	
	    properties.forEach(function (property) {
	        var watcher = void 0;
	        var propertyName = void 0;
	
	        if ((0, _Helpers.isObject)(property)) {
	            var _getObjectData2 = getObjectData(property),
	                keyName = _getObjectData2.keyName,
	                keyValue = _getObjectData2.keyValue;
	
	            watcher = (0, _reduxWatch2.default)(store.getState, keyName);
	            propertyName = keyValue;
	        } else {
	            watcher = (0, _reduxWatch2.default)(store.getState, property);
	            propertyName = getPropertyName(property);
	        }
	
	        var instance = store.subscribe(watcher(function (newVal, oldVal) {
	            handleState(_defineProperty({}, propertyName, newVal), _defineProperty({}, propertyName, oldVal));
	        }));
	
	        watchers.push(instance);
	    });
	
	    return watchers;
	};
	
	module.exports = store;

/***/ }),
/* 147 */
/*!******************************!*\
  !*** ./~/redux/lib/index.js ***!
  \******************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;
	
	var _createStore = __webpack_require__(/*! ./createStore */ 148);
	
	var _createStore2 = _interopRequireDefault(_createStore);
	
	var _combineReducers = __webpack_require__(/*! ./combineReducers */ 161);
	
	var _combineReducers2 = _interopRequireDefault(_combineReducers);
	
	var _bindActionCreators = __webpack_require__(/*! ./bindActionCreators */ 163);
	
	var _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);
	
	var _applyMiddleware = __webpack_require__(/*! ./applyMiddleware */ 164);
	
	var _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);
	
	var _compose = __webpack_require__(/*! ./compose */ 165);
	
	var _compose2 = _interopRequireDefault(_compose);
	
	var _warning = __webpack_require__(/*! ./utils/warning */ 162);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	/*
	* This is a dummy function to check if the function name has been altered by minification.
	* If the function has been minified and NODE_ENV !== 'production', warn the user.
	*/
	function isCrushed() {}
	
	if (false) {
	  (0, _warning2["default"])('You are currently using minified code outside of NODE_ENV === \'production\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
	}
	
	exports.createStore = _createStore2["default"];
	exports.combineReducers = _combineReducers2["default"];
	exports.bindActionCreators = _bindActionCreators2["default"];
	exports.applyMiddleware = _applyMiddleware2["default"];
	exports.compose = _compose2["default"];

/***/ }),
/* 148 */
/*!************************************!*\
  !*** ./~/redux/lib/createStore.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.ActionTypes = undefined;
	exports["default"] = createStore;
	
	var _isPlainObject = __webpack_require__(/*! lodash/isPlainObject */ 149);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _symbolObservable = __webpack_require__(/*! symbol-observable */ 159);
	
	var _symbolObservable2 = _interopRequireDefault(_symbolObservable);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	/**
	 * These are private action types reserved by Redux.
	 * For any unknown actions, you must return the current state.
	 * If the current state is undefined, you must return the initial state.
	 * Do not reference these action types directly in your code.
	 */
	var ActionTypes = exports.ActionTypes = {
	  INIT: '@@redux/INIT'
	};
	
	/**
	 * Creates a Redux store that holds the state tree.
	 * The only way to change the data in the store is to call `dispatch()` on it.
	 *
	 * There should only be a single store in your app. To specify how different
	 * parts of the state tree respond to actions, you may combine several reducers
	 * into a single reducer function by using `combineReducers`.
	 *
	 * @param {Function} reducer A function that returns the next state tree, given
	 * the current state tree and the action to handle.
	 *
	 * @param {any} [initialState] The initial state. You may optionally specify it
	 * to hydrate the state from the server in universal apps, or to restore a
	 * previously serialized user session.
	 * If you use `combineReducers` to produce the root reducer function, this must be
	 * an object with the same shape as `combineReducers` keys.
	 *
	 * @param {Function} enhancer The store enhancer. You may optionally specify it
	 * to enhance the store with third-party capabilities such as middleware,
	 * time travel, persistence, etc. The only store enhancer that ships with Redux
	 * is `applyMiddleware()`.
	 *
	 * @returns {Store} A Redux store that lets you read the state, dispatch actions
	 * and subscribe to changes.
	 */
	function createStore(reducer, initialState, enhancer) {
	  var _ref2;
	
	  if (typeof initialState === 'function' && typeof enhancer === 'undefined') {
	    enhancer = initialState;
	    initialState = undefined;
	  }
	
	  if (typeof enhancer !== 'undefined') {
	    if (typeof enhancer !== 'function') {
	      throw new Error('Expected the enhancer to be a function.');
	    }
	
	    return enhancer(createStore)(reducer, initialState);
	  }
	
	  if (typeof reducer !== 'function') {
	    throw new Error('Expected the reducer to be a function.');
	  }
	
	  var currentReducer = reducer;
	  var currentState = initialState;
	  var currentListeners = [];
	  var nextListeners = currentListeners;
	  var isDispatching = false;
	
	  function ensureCanMutateNextListeners() {
	    if (nextListeners === currentListeners) {
	      nextListeners = currentListeners.slice();
	    }
	  }
	
	  /**
	   * Reads the state tree managed by the store.
	   *
	   * @returns {any} The current state tree of your application.
	   */
	  function getState() {
	    return currentState;
	  }
	
	  /**
	   * Adds a change listener. It will be called any time an action is dispatched,
	   * and some part of the state tree may potentially have changed. You may then
	   * call `getState()` to read the current state tree inside the callback.
	   *
	   * You may call `dispatch()` from a change listener, with the following
	   * caveats:
	   *
	   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
	   * If you subscribe or unsubscribe while the listeners are being invoked, this
	   * will not have any effect on the `dispatch()` that is currently in progress.
	   * However, the next `dispatch()` call, whether nested or not, will use a more
	   * recent snapshot of the subscription list.
	   *
	   * 2. The listener should not expect to see all state changes, as the state
	   * might have been updated multiple times during a nested `dispatch()` before
	   * the listener is called. It is, however, guaranteed that all subscribers
	   * registered before the `dispatch()` started will be called with the latest
	   * state by the time it exits.
	   *
	   * @param {Function} listener A callback to be invoked on every dispatch.
	   * @returns {Function} A function to remove this change listener.
	   */
	  function subscribe(listener) {
	    if (typeof listener !== 'function') {
	      throw new Error('Expected listener to be a function.');
	    }
	
	    var isSubscribed = true;
	
	    ensureCanMutateNextListeners();
	    nextListeners.push(listener);
	
	    return function unsubscribe() {
	      if (!isSubscribed) {
	        return;
	      }
	
	      isSubscribed = false;
	
	      ensureCanMutateNextListeners();
	      var index = nextListeners.indexOf(listener);
	      nextListeners.splice(index, 1);
	    };
	  }
	
	  /**
	   * Dispatches an action. It is the only way to trigger a state change.
	   *
	   * The `reducer` function, used to create the store, will be called with the
	   * current state tree and the given `action`. Its return value will
	   * be considered the **next** state of the tree, and the change listeners
	   * will be notified.
	   *
	   * The base implementation only supports plain object actions. If you want to
	   * dispatch a Promise, an Observable, a thunk, or something else, you need to
	   * wrap your store creating function into the corresponding middleware. For
	   * example, see the documentation for the `redux-thunk` package. Even the
	   * middleware will eventually dispatch plain object actions using this method.
	   *
	   * @param {Object} action A plain object representing “what changed”. It is
	   * a good idea to keep actions serializable so you can record and replay user
	   * sessions, or use the time travelling `redux-devtools`. An action must have
	   * a `type` property which may not be `undefined`. It is a good idea to use
	   * string constants for action types.
	   *
	   * @returns {Object} For convenience, the same action object you dispatched.
	   *
	   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
	   * return something else (for example, a Promise you can await).
	   */
	  function dispatch(action) {
	    if (!(0, _isPlainObject2["default"])(action)) {
	      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
	    }
	
	    if (typeof action.type === 'undefined') {
	      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
	    }
	
	    if (isDispatching) {
	      throw new Error('Reducers may not dispatch actions.');
	    }
	
	    try {
	      isDispatching = true;
	      currentState = currentReducer(currentState, action);
	    } finally {
	      isDispatching = false;
	    }
	
	    var listeners = currentListeners = nextListeners;
	    for (var i = 0; i < listeners.length; i++) {
	      listeners[i]();
	    }
	
	    return action;
	  }
	
	  /**
	   * Replaces the reducer currently used by the store to calculate the state.
	   *
	   * You might need this if your app implements code splitting and you want to
	   * load some of the reducers dynamically. You might also need this if you
	   * implement a hot reloading mechanism for Redux.
	   *
	   * @param {Function} nextReducer The reducer for the store to use instead.
	   * @returns {void}
	   */
	  function replaceReducer(nextReducer) {
	    if (typeof nextReducer !== 'function') {
	      throw new Error('Expected the nextReducer to be a function.');
	    }
	
	    currentReducer = nextReducer;
	    dispatch({ type: ActionTypes.INIT });
	  }
	
	  /**
	   * Interoperability point for observable/reactive libraries.
	   * @returns {observable} A minimal observable of state changes.
	   * For more information, see the observable proposal:
	   * https://github.com/zenparsing/es-observable
	   */
	  function observable() {
	    var _ref;
	
	    var outerSubscribe = subscribe;
	    return _ref = {
	      /**
	       * The minimal observable subscription method.
	       * @param {Object} observer Any object that can be used as an observer.
	       * The observer object should have a `next` method.
	       * @returns {subscription} An object with an `unsubscribe` method that can
	       * be used to unsubscribe the observable from the store, and prevent further
	       * emission of values from the observable.
	       */
	
	      subscribe: function subscribe(observer) {
	        if (typeof observer !== 'object') {
	          throw new TypeError('Expected the observer to be an object.');
	        }
	
	        function observeState() {
	          if (observer.next) {
	            observer.next(getState());
	          }
	        }
	
	        observeState();
	        var unsubscribe = outerSubscribe(observeState);
	        return { unsubscribe: unsubscribe };
	      }
	    }, _ref[_symbolObservable2["default"]] = function () {
	      return this;
	    }, _ref;
	  }
	
	  // When a store is created, an "INIT" action is dispatched so that every
	  // reducer returns their initial state. This effectively populates
	  // the initial state tree.
	  dispatch({ type: ActionTypes.INIT });
	
	  return _ref2 = {
	    dispatch: dispatch,
	    subscribe: subscribe,
	    getState: getState,
	    replaceReducer: replaceReducer
	  }, _ref2[_symbolObservable2["default"]] = observable, _ref2;
	}

/***/ }),
/* 149 */
/*!***********************************!*\
  !*** ./~/lodash/isPlainObject.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ 150),
	    getPrototype = __webpack_require__(/*! ./_getPrototype */ 156),
	    isObjectLike = __webpack_require__(/*! ./isObjectLike */ 158);
	
	/** `Object#toString` result references. */
	var objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);
	
	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.8.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
	    return false;
	  }
	  var proto = getPrototype(value);
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
	    funcToString.call(Ctor) == objectCtorString;
	}
	
	module.exports = isPlainObject;


/***/ }),
/* 150 */
/*!*********************************!*\
  !*** ./~/lodash/_baseGetTag.js ***!
  \*********************************/
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(/*! ./_Symbol */ 151),
	    getRawTag = __webpack_require__(/*! ./_getRawTag */ 154),
	    objectToString = __webpack_require__(/*! ./_objectToString */ 155);
	
	/** `Object#toString` result references. */
	var nullTag = '[object Null]',
	    undefinedTag = '[object Undefined]';
	
	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
	
	/**
	 * The base implementation of `getTag` without fallbacks for buggy environments.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  if (value == null) {
	    return value === undefined ? undefinedTag : nullTag;
	  }
	  return (symToStringTag && symToStringTag in Object(value))
	    ? getRawTag(value)
	    : objectToString(value);
	}
	
	module.exports = baseGetTag;


/***/ }),
/* 151 */
/*!*****************************!*\
  !*** ./~/lodash/_Symbol.js ***!
  \*****************************/
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(/*! ./_root */ 152);
	
	/** Built-in value references. */
	var Symbol = root.Symbol;
	
	module.exports = Symbol;


/***/ }),
/* 152 */
/*!***************************!*\
  !*** ./~/lodash/_root.js ***!
  \***************************/
/***/ (function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(/*! ./_freeGlobal */ 153);
	
	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
	
	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();
	
	module.exports = root;


/***/ }),
/* 153 */
/*!*********************************!*\
  !*** ./~/lodash/_freeGlobal.js ***!
  \*********************************/
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
	
	module.exports = freeGlobal;
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 154 */
/*!********************************!*\
  !*** ./~/lodash/_getRawTag.js ***!
  \********************************/
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(/*! ./_Symbol */ 151);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
	
	/**
	 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the raw `toStringTag`.
	 */
	function getRawTag(value) {
	  var isOwn = hasOwnProperty.call(value, symToStringTag),
	      tag = value[symToStringTag];
	
	  try {
	    value[symToStringTag] = undefined;
	    var unmasked = true;
	  } catch (e) {}
	
	  var result = nativeObjectToString.call(value);
	  if (unmasked) {
	    if (isOwn) {
	      value[symToStringTag] = tag;
	    } else {
	      delete value[symToStringTag];
	    }
	  }
	  return result;
	}
	
	module.exports = getRawTag;


/***/ }),
/* 155 */
/*!*************************************!*\
  !*** ./~/lodash/_objectToString.js ***!
  \*************************************/
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/**
	 * Converts `value` to a string using `Object.prototype.toString`.
	 *
	 * @private
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 */
	function objectToString(value) {
	  return nativeObjectToString.call(value);
	}
	
	module.exports = objectToString;


/***/ }),
/* 156 */
/*!***********************************!*\
  !*** ./~/lodash/_getPrototype.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(/*! ./_overArg */ 157);
	
	/** Built-in value references. */
	var getPrototype = overArg(Object.getPrototypeOf, Object);
	
	module.exports = getPrototype;


/***/ }),
/* 157 */
/*!******************************!*\
  !*** ./~/lodash/_overArg.js ***!
  \******************************/
/***/ (function(module, exports) {

	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}
	
	module.exports = overArg;


/***/ }),
/* 158 */
/*!**********************************!*\
  !*** ./~/lodash/isObjectLike.js ***!
  \**********************************/
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return value != null && typeof value == 'object';
	}
	
	module.exports = isObjectLike;


/***/ }),
/* 159 */
/*!**********************************************!*\
  !*** ./~/redux/~/symbol-observable/index.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {/* global window */
	'use strict';
	
	module.exports = __webpack_require__(/*! ./ponyfill */ 160)(global || window || this);
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 160 */
/*!*************************************************!*\
  !*** ./~/redux/~/symbol-observable/ponyfill.js ***!
  \*************************************************/
/***/ (function(module, exports) {

	'use strict';
	
	module.exports = function symbolObservablePonyfill(root) {
		var result;
		var Symbol = root.Symbol;
	
		if (typeof Symbol === 'function') {
			if (Symbol.observable) {
				result = Symbol.observable;
			} else {
				result = Symbol('observable');
				Symbol.observable = result;
			}
		} else {
			result = '@@observable';
		}
	
		return result;
	};


/***/ }),
/* 161 */
/*!****************************************!*\
  !*** ./~/redux/lib/combineReducers.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports["default"] = combineReducers;
	
	var _createStore = __webpack_require__(/*! ./createStore */ 148);
	
	var _isPlainObject = __webpack_require__(/*! lodash/isPlainObject */ 149);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _warning = __webpack_require__(/*! ./utils/warning */ 162);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	function getUndefinedStateErrorMessage(key, action) {
	  var actionType = action && action.type;
	  var actionName = actionType && '"' + actionType.toString() + '"' || 'an action';
	
	  return 'Given action ' + actionName + ', reducer "' + key + '" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state.';
	}
	
	function getUnexpectedStateShapeWarningMessage(inputState, reducers, action) {
	  var reducerKeys = Object.keys(reducers);
	  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'initialState argument passed to createStore' : 'previous state received by the reducer';
	
	  if (reducerKeys.length === 0) {
	    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
	  }
	
	  if (!(0, _isPlainObject2["default"])(inputState)) {
	    return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
	  }
	
	  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
	    return !reducers.hasOwnProperty(key);
	  });
	
	  if (unexpectedKeys.length > 0) {
	    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
	  }
	}
	
	function assertReducerSanity(reducers) {
	  Object.keys(reducers).forEach(function (key) {
	    var reducer = reducers[key];
	    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });
	
	    if (typeof initialState === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined.');
	    }
	
	    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
	    if (typeof reducer(undefined, { type: type }) === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined.');
	    }
	  });
	}
	
	/**
	 * Turns an object whose values are different reducer functions, into a single
	 * reducer function. It will call every child reducer, and gather their results
	 * into a single state object, whose keys correspond to the keys of the passed
	 * reducer functions.
	 *
	 * @param {Object} reducers An object whose values correspond to different
	 * reducer functions that need to be combined into one. One handy way to obtain
	 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
	 * undefined for any action. Instead, they should return their initial state
	 * if the state passed to them was undefined, and the current state for any
	 * unrecognized action.
	 *
	 * @returns {Function} A reducer function that invokes every reducer inside the
	 * passed object, and builds a state object with the same shape.
	 */
	function combineReducers(reducers) {
	  var reducerKeys = Object.keys(reducers);
	  var finalReducers = {};
	  for (var i = 0; i < reducerKeys.length; i++) {
	    var key = reducerKeys[i];
	    if (typeof reducers[key] === 'function') {
	      finalReducers[key] = reducers[key];
	    }
	  }
	  var finalReducerKeys = Object.keys(finalReducers);
	
	  var sanityError;
	  try {
	    assertReducerSanity(finalReducers);
	  } catch (e) {
	    sanityError = e;
	  }
	
	  return function combination() {
	    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var action = arguments[1];
	
	    if (sanityError) {
	      throw sanityError;
	    }
	
	    if (false) {
	      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action);
	      if (warningMessage) {
	        (0, _warning2["default"])(warningMessage);
	      }
	    }
	
	    var hasChanged = false;
	    var nextState = {};
	    for (var i = 0; i < finalReducerKeys.length; i++) {
	      var key = finalReducerKeys[i];
	      var reducer = finalReducers[key];
	      var previousStateForKey = state[key];
	      var nextStateForKey = reducer(previousStateForKey, action);
	      if (typeof nextStateForKey === 'undefined') {
	        var errorMessage = getUndefinedStateErrorMessage(key, action);
	        throw new Error(errorMessage);
	      }
	      nextState[key] = nextStateForKey;
	      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
	    }
	    return hasChanged ? nextState : state;
	  };
	}

/***/ }),
/* 162 */
/*!**************************************!*\
  !*** ./~/redux/lib/utils/warning.js ***!
  \**************************************/
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports["default"] = warning;
	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	  try {
	    // This error was thrown as a convenience so that if you enable
	    // "break on all exceptions" in your console,
	    // it would pause the execution at this line.
	    throw new Error(message);
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */
	}

/***/ }),
/* 163 */
/*!*******************************************!*\
  !*** ./~/redux/lib/bindActionCreators.js ***!
  \*******************************************/
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports["default"] = bindActionCreators;
	function bindActionCreator(actionCreator, dispatch) {
	  return function () {
	    return dispatch(actionCreator.apply(undefined, arguments));
	  };
	}
	
	/**
	 * Turns an object whose values are action creators, into an object with the
	 * same keys, but with every function wrapped into a `dispatch` call so they
	 * may be invoked directly. This is just a convenience method, as you can call
	 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
	 *
	 * For convenience, you can also pass a single function as the first argument,
	 * and get a function in return.
	 *
	 * @param {Function|Object} actionCreators An object whose values are action
	 * creator functions. One handy way to obtain it is to use ES6 `import * as`
	 * syntax. You may also pass a single function.
	 *
	 * @param {Function} dispatch The `dispatch` function available on your Redux
	 * store.
	 *
	 * @returns {Function|Object} The object mimicking the original object, but with
	 * every action creator wrapped into the `dispatch` call. If you passed a
	 * function as `actionCreators`, the return value will also be a single
	 * function.
	 */
	function bindActionCreators(actionCreators, dispatch) {
	  if (typeof actionCreators === 'function') {
	    return bindActionCreator(actionCreators, dispatch);
	  }
	
	  if (typeof actionCreators !== 'object' || actionCreators === null) {
	    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
	  }
	
	  var keys = Object.keys(actionCreators);
	  var boundActionCreators = {};
	  for (var i = 0; i < keys.length; i++) {
	    var key = keys[i];
	    var actionCreator = actionCreators[key];
	    if (typeof actionCreator === 'function') {
	      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
	    }
	  }
	  return boundActionCreators;
	}

/***/ }),
/* 164 */
/*!****************************************!*\
  !*** ./~/redux/lib/applyMiddleware.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports["default"] = applyMiddleware;
	
	var _compose = __webpack_require__(/*! ./compose */ 165);
	
	var _compose2 = _interopRequireDefault(_compose);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	/**
	 * Creates a store enhancer that applies middleware to the dispatch method
	 * of the Redux store. This is handy for a variety of tasks, such as expressing
	 * asynchronous actions in a concise manner, or logging every action payload.
	 *
	 * See `redux-thunk` package as an example of the Redux middleware.
	 *
	 * Because middleware is potentially asynchronous, this should be the first
	 * store enhancer in the composition chain.
	 *
	 * Note that each middleware will be given the `dispatch` and `getState` functions
	 * as named arguments.
	 *
	 * @param {...Function} middlewares The middleware chain to be applied.
	 * @returns {Function} A store enhancer applying the middleware.
	 */
	function applyMiddleware() {
	  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
	    middlewares[_key] = arguments[_key];
	  }
	
	  return function (createStore) {
	    return function (reducer, initialState, enhancer) {
	      var store = createStore(reducer, initialState, enhancer);
	      var _dispatch = store.dispatch;
	      var chain = [];
	
	      var middlewareAPI = {
	        getState: store.getState,
	        dispatch: function dispatch(action) {
	          return _dispatch(action);
	        }
	      };
	      chain = middlewares.map(function (middleware) {
	        return middleware(middlewareAPI);
	      });
	      _dispatch = _compose2["default"].apply(undefined, chain)(store.dispatch);
	
	      return _extends({}, store, {
	        dispatch: _dispatch
	      });
	    };
	  };
	}

/***/ }),
/* 165 */
/*!********************************!*\
  !*** ./~/redux/lib/compose.js ***!
  \********************************/
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports["default"] = compose;
	/**
	 * Composes single-argument functions from right to left. The rightmost
	 * function can take multiple arguments as it provides the signature for
	 * the resulting composite function.
	 *
	 * @param {...Function} funcs The functions to compose.
	 * @returns {Function} A function obtained by composing the argument functions
	 * from right to left. For example, compose(f, g, h) is identical to doing
	 * (...args) => f(g(h(...args))).
	 */
	
	function compose() {
	  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
	    funcs[_key] = arguments[_key];
	  }
	
	  if (funcs.length === 0) {
	    return function (arg) {
	      return arg;
	    };
	  } else {
	    var _ret = function () {
	      var last = funcs[funcs.length - 1];
	      var rest = funcs.slice(0, -1);
	      return {
	        v: function v() {
	          return rest.reduceRight(function (composed, f) {
	            return f(composed);
	          }, last.apply(undefined, arguments));
	        }
	      };
	    }();
	
	    if (typeof _ret === "object") return _ret.v;
	  }
	}

/***/ }),
/* 166 */
/*!************************************!*\
  !*** ./~/redux-thunk/lib/index.js ***!
  \************************************/
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	function createThunkMiddleware(extraArgument) {
	  return function (_ref) {
	    var dispatch = _ref.dispatch;
	    var getState = _ref.getState;
	    return function (next) {
	      return function (action) {
	        if (typeof action === 'function') {
	          return action(dispatch, getState, extraArgument);
	        }
	
	        return next(action);
	      };
	    };
	  };
	}
	
	var thunk = createThunkMiddleware();
	thunk.withExtraArgument = createThunkMiddleware;
	
	exports['default'] = thunk;

/***/ }),
/* 167 */
/*!********************************************!*\
  !*** ./public_ufe/js/reducers/reducers.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var _combineReducers;
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var Constants = __webpack_require__(/*! utils/framework/Constants */ 104);
	var combineReducers = __webpack_require__(/*! redux */ 147).combineReducers;
	var basket = __webpack_require__(/*! ./basket */ 168);
	var category = __webpack_require__(/*! ./category */ 312);
	var framework = __webpack_require__(/*! ./framework */ 316);
	var hamburger = __webpack_require__(/*! ./hamburger */ 317);
	var interstice = __webpack_require__(/*! ./interstice */ 318);
	var modals = __webpack_require__(/*! ./modals */ 319);
	var productGrid = __webpack_require__(/*! ./productGrid */ 321);
	var productSort = __webpack_require__(/*! ./productSort */ 324);
	var user = __webpack_require__(/*! ./user */ 325);
	var productFilters = __webpack_require__(/*! ./productFilters */ 326);
	var loves = __webpack_require__(/*! ./loves */ 330);
	var product = __webpack_require__(/*! ./product */ 331);
	var search = __webpack_require__(/*! ./search */ 333);
	var stickyBanner = __webpack_require__(/*! ./stickyBanner */ 336);
	var productRecs = __webpack_require__(/*! ./productRecs */ 337);
	var inlineBasket = __webpack_require__(/*! ./inline-basket */ 339);
	var testTarget = __webpack_require__(/*! ./testTarget */ 340);
	var targeters = __webpack_require__(/*! ./targeters */ 342);
	var welcomeMat = __webpack_require__(/*! ./welcomeMat */ 343);
	var termsConditions = __webpack_require__(/*! ./termsConditions */ 344);
	var samples = __webpack_require__(/*! ./samples */ 346);
	var rewards = __webpack_require__(/*! ./rewards */ 348);
	var promo = __webpack_require__(/*! ./promo */ 350);
	var applePaySession = __webpack_require__(/*! ./applePaySession */ 351);
	var reduxActionWatch = __webpack_require__(/*! redux-action-watch */ 352);
	var reservations = __webpack_require__(/*! ./reservations */ 359);
	var profile = __webpack_require__(/*! ./profile */ 360);
	var socialInfo = __webpack_require__(/*! ./socialInfo */ 361);
	var virtualArtist = __webpack_require__(/*! ./virtualArtist */ 362);
	
	var ufe = combineReducers((_combineReducers = {
	    basket: basket,
	    inlineBasket: inlineBasket,
	    category: category,
	    framework: framework,
	    hamburger: hamburger,
	    interstice: interstice,
	    loves: loves,
	    modals: modals,
	    productGrid: productGrid,
	    productSort: productSort,
	    productFilters: productFilters,
	    user: user,
	    product: product,
	    search: search,
	    stickyBanner: stickyBanner,
	    productRecs: productRecs,
	    targeters: targeters,
	    testTarget: testTarget,
	    welcomeMat: welcomeMat,
	    termsConditions: termsConditions,
	    samples: samples,
	    rewards: rewards,
	    applePaySession: applePaySession,
	    promo: promo
	}, _defineProperty(_combineReducers, Constants.ACTION_WATCHER_STATE_NAME, reduxActionWatch.reducer), _defineProperty(_combineReducers, 'reservations', reservations), _defineProperty(_combineReducers, 'profile', profile), _defineProperty(_combineReducers, 'socialInfo', socialInfo), _defineProperty(_combineReducers, 'virtualArtist', virtualArtist), _combineReducers));
	
	module.exports = ufe;

/***/ }),
/* 168 */
/*!******************************************!*\
  !*** ./public_ufe/js/reducers/basket.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var ACTION_TYPES = __webpack_require__(/*! actions/BasketActions */ 169).TYPES;
	
	var initialState = {
	    isInitialized: false,
	    itemCount: 0,
	    rewards: [],
	    promos: [],
	    samples: [],
	    products: [],
	    subtotal: '$0.00',
	    rawSubTotal: '$0.00',
	    pendingBasketSkus: []
	};
	
	/**
	 * If removing property from basket state, don't remove property entirely.
	 * If you do, state will not reflect change due to object.assign.
	 * Instead set property value to null to simulate removal, this will update state.
	 */
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.UPDATE_BASKET:
	            return Object.assign({}, state, { basketLevelMessages: undefined }, action.basket);
	        case ACTION_TYPES.SHOW_BASKET_ERROR:
	            {
	                var basket = action.error && action.itemsAndErrors ? Object.assign({}, state, { items: action.itemsAndErrors }) : state.items;
	                return Object.assign({}, state, {
	                    basket: basket,
	                    error: action.error
	                });
	            }
	        case ACTION_TYPES.SHOW_BASKET_WARNING:
	            {
	                return Object.assign({}, state, { basketItemWarnings: action.basketItemWarnings });
	            }
	        case ACTION_TYPES.SHOW_STICKY_APPLE_PAY_BTN:
	            return Object.assign({}, state, { showStickyApplePayBtn: action.showStickyApplePayBtn });
	        case ACTION_TYPES.SHOW_PAYPAL_RESTRICTED_MESSAGE:
	            return Object.assign({}, state, { showPaypalRestrictedMessage: action.showPaypalRestrictedMessage });
	        case ACTION_TYPES.CLEAR_PENDING_SKU:
	        case ACTION_TYPES.ADD_PENDING_SKU:
	        case ACTION_TYPES.REMOVE_PENDING_SKU:
	            return Object.assign({}, state, { pendingBasketSkus: action.pendingBasketSkus });
	        default:
	            return state;
	    }
	};

/***/ }),
/* 169 */
/*!************************************************!*\
  !*** ./public_ufe/js/actions/BasketActions.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var basketApi = __webpack_require__(/*! services/api/basket */ 170);
	var biApi = __webpack_require__(/*! services/api/beautyInsider */ 260);
	
	var basketUtils = __webpack_require__(/*! utils/Basket */ 190);
	var Locale = __webpack_require__(/*! utils/LanguageLocale */ 4);
	var skuUtils = __webpack_require__(/*! utils/Sku */ 185);
	var userUtils = __webpack_require__(/*! utils/User */ 186);
	
	var Actions = __webpack_require__(/*! Actions */ 175);
	var processEvent = __webpack_require__(/*! analytics/processEvent */ 176);
	var analyticsConsts = __webpack_require__(/*! analytics/constants */ 178);
	var addToBasketEvent = __webpack_require__(/*! analytics/bindings/pages/all/addToBasketEvent */ 308);
	var blueCore = __webpack_require__(/*! analytics/bluecore */ 309);
	var inlineBasketActions = __webpack_require__(/*! ./InlineBasketActions */ 310);
	var Location = __webpack_require__(/*! utils/Location */ 3);
	
	var Storage = __webpack_require__(/*! utils/localStorage/Storage */ 275);
	var LOCAL_STORAGE = __webpack_require__(/*! utils/localStorage/Constants */ 274);
	var BASKET_EXPIRY = Storage.MINUTES * 15;
	
	var TYPES = {
	    UPDATE_BASKET: 'UPDATE_BASKET',
	    SHOW_BASKET_ERROR: 'SHOW_BASKET_ERROR',
	    SHOW_BASKET_WARNING: 'SHOW_BASKET_WARNING',
	    SHOW_STICKY_APPLE_PAY_BTN: 'SHOW_STICKY_APPLE_PAY_BTN',
	    SHOW_PAYPAL_RESTRICTED_MESSAGE: 'SHOW_PAYPAL_RESTRICTED_MESSAGE',
	    ADD_PENDING_SKU: 'ADD_PENDING_SKU',
	    CLEAR_PENDING_SKU: 'CLEAR_PENDING_SKU',
	    REMOVE_PENDING_SKU: 'REMOVE_PENDING_SKU'
	};
	
	var HTTP_STATUS_ACCEPTED = 202;
	
	var OPERATION = {
	    ADDED_PRODUCT: 'ADDED_PRODUCT',
	    UPDATED_PRODUCT: 'UPDATE_PRODUCT',
	    ADDED_REWARD: 'ADD_REWARD'
	};
	
	var PROMO_TO_BE_REMOVED = -10102;
	
	function updateBasket(basket) {
	    /* We cache basket data each time the basket is updated with fresh API data so we do not have
	    to call the user/full API on each page load. However, we set an expire time of 15 minutes. */
	    Storage.local.setItem(LOCAL_STORAGE.BASKET, basket, BASKET_EXPIRY);
	
	    var countryCode = userUtils.getShippingCountry().countryCode;
	
	    if (basketUtils.isEmpty(basket) && countryCode !== Locale.COUNTRIES.US) {
	        var defaultSubtotal = basketUtils.getDefaultSubtotal();
	
	        basket.subtotal = defaultSubtotal;
	        basket.rawSubTotal = defaultSubtotal;
	    }
	
	    basket.isInitialized = true;
	
	    return {
	        type: TYPES.UPDATE_BASKET,
	        basket: basketUtils.separateItems(basket)
	    };
	}
	
	function showError(error, items, errorMessages) {
	    // errors array is empty for next case (that's why we use errorMessages):
	    // errorCode: -1081
	    // 'There is a limit of 10 per person for this item. We have added 0 item(s) to your basket.'
	    var basketError = Object.assign({}, error);
	    if (error) {
	        if (error.errors && !Object.keys(error.errors).length) {
	            // sometimes it is empty
	            basketError.errorMessages = error.errorMessages;
	        } else if (!Object.keys(error).length && errorMessages) {
	            basketError.errorMessages = errorMessages;
	        }
	    }
	    if (error && !basketError.errorMessages && (typeof error === 'undefined' ? 'undefined' : _typeof(error)) === 'object') {
	        basketError.errorMessages = Object.keys(error).map(function (errorKey) {
	            if (error[errorKey] instanceof Array) {
	                return error[errorKey].join(',');
	            } else {
	                return error[errorKey];
	            }
	        });
	    }
	    return {
	        type: TYPES.SHOW_BASKET_ERROR,
	        error: basketError,
	        itemsAndErrors: items || null
	    };
	}
	
	function addPendingProduct(skus) {
	    var store = __webpack_require__(/*! Store */ 146);
	
	    if (!Array.isArray(skus)) {
	        skus = [skus];
	    }
	
	    var pendingBasketSkus = store.getState().basket.pendingBasketSkus.concat(skus);
	    return {
	        type: TYPES.ADD_PENDING_SKU,
	        pendingBasketSkus: pendingBasketSkus
	    };
	}
	
	function removePendingProduct(sku) {
	    var store = __webpack_require__(/*! Store */ 146);
	    var pendingBasketSkus = store.getState().basket.pendingBasketSkus.filter(function (item) {
	        return item.skuId !== sku.skuId || item.methodId !== sku.methodId;
	    });
	    return {
	        type: TYPES.REMOVE_PENDING_SKU,
	        pendingBasketSkus: pendingBasketSkus
	    };
	}
	
	function clearPendingProductList() {
	
	    return {
	        type: TYPES.CLEAR_PENDING_SKU,
	        pendingBasketSkus: []
	    };
	}
	
	function showWarning(basketItemWarnings) {
	    return {
	        type: TYPES.SHOW_BASKET_WARNING,
	        basketItemWarnings: basketItemWarnings
	    };
	}
	
	function refreshBasket(keepItemLevelErrors) {
	    return function (dispatch) {
	        return basketApi.getBasketDetails().then(function (data) {
	            if (keepItemLevelErrors && data.items) {
	                var itemsAndErrs = basketUtils.catchItemLevelErrors(keepItemLevelErrors, data);
	                if (itemsAndErrs) {
	                    data = Object.assign({}, data, { items: itemsAndErrs });
	                }
	            }
	            return dispatch(updateBasket(data));
	        }).catch(function (reason) {
	            return dispatch(showError(data));
	        });
	    };
	}
	
	function confirmBasketUpdateModal(dispatch, message, callback, cancelCallback) {
	    dispatch(Actions.showInfoModal(true, 'Confirmation', message, 'Continue', callback, true, null, null, null, cancelCallback));
	}
	
	function showPaypalRestrictedMessage() {
	    return {
	        type: TYPES.SHOW_PAYPAL_RESTRICTED_MESSAGE,
	        showPaypalRestrictedMessage: true
	    };
	}
	
	function showStickyApplePayBtn(isSticky) {
	    return {
	        type: TYPES.SHOW_STICKY_APPLE_PAY_BTN,
	        showStickyApplePayBtn: isSticky
	    };
	}
	
	/**
	 * Since the current API response sometimes retrieves errors inside the
	 * basket and sometimes within a totally different format,
	 * this method will check always for errors.lso this it will dispatch
	 * different actions relevant to the operation that called this function.
	 *
	 * OPERATION.UPDATED_PRODUCT: dispatch updateBasket with the straight basket response.
	 * OPERATION.ADDED_PRODUCT: calculate new basket object using the basket response.
	 * Else for ADDED_REWARD: dispatch updateBasket with straight basket response.
	 * NOTE:For the last 2 cases, if it comes the quantity param it dispatches addedProductsNotification
	 */
	function makeGenericAddUpdateProductToBasketSuccessHandler(dispatch, quantity, performedAction, successCallback) {
	    return function (data) {
	        if (typeof successCallback === 'function') {
	            successCallback(data);
	        }
	
	        // operation-specifyc logic
	        var updatedBasket = null;
	
	        switch (performedAction) {
	            case OPERATION.UPDATED_PRODUCT:
	                updatedBasket = updateBasket(data);
	                break;
	            case OPERATION.ADDED_PRODUCT:
	
	                //When adding a product to basket,
	                // the api response does not contain the full basket
	                updatedBasket = updateBasket(basketUtils.calculateUpdatedBasket(data));
	                break;
	            case OPERATION.ADDED_REWARD:
	            default:
	                updatedBasket = updateBasket(data.basket);
	                break;
	        }
	
	        dispatch(updatedBasket);
	
	        if (quantity) {
	            dispatch(inlineBasketActions.addedProductsNotification(quantity));
	        }
	
	        if (!Location.isBasketPage()) {
	            dispatch(inlineBasketActions.showInlineBasket(true));
	        }
	
	        dispatch(showWarning(basketUtils.catchItemLevelMessages(data)));
	        return updatedBasket;
	    };
	}
	
	function makeGenericBasketOperationFailureHandler(dispatch) {
	    return function (reason) {
	        if (!Location.isBasketPage()) {
	            dispatch(inlineBasketActions.showInlineBasket(true));
	        }
	
	        var itemsAndErrors = basketUtils.catchItemLevelErrors(reason);
	        dispatch(showError(reason.errors, itemsAndErrors, reason.errorMessages));
	
	        return Promise.reject(reason);
	    };
	}
	
	function updateQuantities(skuList, successCallback, modifyConfirmed) {
	    var _arguments = arguments;
	
	    var orderId = basketUtils.getOrderId();
	
	    return function (dispatch) {
	        return basketApi.updateBasket({
	            orderId: orderId,
	            skuList: skuList,
	            modifyConfirmed: modifyConfirmed
	        }).then(function (data) {
	            var promise = void 0;
	
	            if (data.responseStatus === HTTP_STATUS_ACCEPTED) {
	                confirmBasketUpdateModal(dispatch, data.errorMessages.join('. '), function () {
	                    dispatch(updateQuantities(skuList, function () {
	                        if (data.errorCode === PROMO_TO_BE_REMOVED) {
	                            var PromoActions = __webpack_require__(/*! actions/PromoActions */ 298);
	                            dispatch(PromoActions.removePromo(orderId));
	                        }
	                        successCallback.apply(null, _arguments);
	                    }, true));
	
	                    dispatch(Actions.showInfoModal(false));
	                }, function () {
	                    dispatch(refreshBasket());
	                });
	
	                promise = Promise.resolve(null);
	            } else {
	                promise = Promise.resolve(data);
	            }
	
	            return promise;
	        }).then(function (data) {
	            // data can be null here because of 202 responseStatus in the above clause.
	            var handler = data && makeGenericAddUpdateProductToBasketSuccessHandler(dispatch, null, OPERATION.UPDATED_PRODUCT, successCallback);
	            handler && handler(data);
	        }).catch(makeGenericBasketOperationFailureHandler(dispatch));
	    };
	}
	
	function addProductToBasket(sku, quantity, successCallback) {
	    quantity = quantity || 1;
	
	    return function (dispatch) {
	        return basketApi.addToCart({
	            orderId: basketUtils.getOrderId(),
	            skuList: [{
	                isAcceptTerms: skuUtils.isFlash(sku),
	                qty: quantity,
	                skuId: sku.skuId
	            }]
	        }).then(makeGenericAddUpdateProductToBasketSuccessHandler(dispatch, quantity, OPERATION.ADDED_PRODUCT, successCallback)).catch(makeGenericBasketOperationFailureHandler(dispatch));
	    };
	}
	
	function addRewardToBasket(skuId, quantity, successCallback) {
	    return function (dispatch) {
	        return biApi.addBiRewardsToCart(skuId).then(makeGenericAddUpdateProductToBasketSuccessHandler(dispatch, quantity, OPERATION.ADDED_REWARD, successCallback)).catch(makeGenericBasketOperationFailureHandler(dispatch));
	    };
	}
	
	/**
	 * Add analytics/bluecore to the originally passed in success callback
	 * @param  {obj} sku - The sku that was added
	 * @param  {function} originalCallback
	 * @param  {string} analyticsContext - A string which we use later to make decisions
	 * @return {function} - A new function that will be used as the success callback
	 */
	function createDecoratedSuccessCallback(sku, originalCallback, analyticsContext, productId) {
	    var skuList = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];
	
	    return function () {
	        //Analytics
	        if (digitalData.page.attributes.tempProps.isEnrollToFlash) {
	            analyticsContext = analyticsConsts.CONTEXT.ROUGE_ENROLL_FLASH;
	        }
	        processEvent.preprocess.commonInteractions({
	            bindingMethods: [addToBasketEvent],
	            context: analyticsContext,
	            sku: sku,
	            skuList: skuList,
	            eventName: analyticsConsts.EVENT_NAMES.ADD_TO_BASKET
	        });
	
	        // Bluecore Add to Cart Trigger
	        if (!!sku.type && sku.type.toLowerCase() === skuUtils.skuTypes.STANDARD) {
	            blueCore.addToCartEvent(productId);
	        }
	
	        originalCallback && originalCallback.apply(null, arguments);
	    };
	}
	
	function addMultipleSkusToBasket(skus, skusQuantity, successCallback, analyticsContext, productId, mainSku) {
	    return function (dispatch) {
	        return basketApi.addToCart({
	            orderId: basketUtils.getOrderId(),
	            skuList: skus.map(function (sku) {
	                return {
	                    qty: sku.qty,
	                    skuId: sku.skuId,
	                    isAcceptTerms: sku.isAcceptTerms
	
	                };
	            })
	        }).then(makeGenericAddUpdateProductToBasketSuccessHandler(dispatch, skusQuantity, OPERATION.ADDED_PRODUCT, successCallback)).then(createDecoratedSuccessCallback(mainSku, function () {}, analyticsContext, productId, skus)).catch(makeGenericBasketOperationFailureHandler(dispatch));
	    };
	}
	
	/**
	 * Function to add a new sample to the basket
	 * The 'Add Samples to Basket API' receives an array of samples sku.
	 * If only one sku is added it will replace the list of samples added
	 * previously
	 * basketUtils.getSamplesInBasket returns an array of the current list of
	 * samples in the basket, then pushes the new sku
	 * @param sku
	 * @param successCallback
	 */
	function addSampleToBasket(sku, successCallback) {
	    return function (dispatch) {
	        // basket.samples contains an array of Sample objects,
	        // we only need an array of Sample skuId
	        var store = __webpack_require__(/*! Store */ 146);
	        var sampleSkuIdList = store.getState().basket.samples.map(function (item) {
	            return item.sku.skuId;
	        });
	        sampleSkuIdList.push(sku.skuId);
	
	        return basketApi.addSamplesToBasket(sampleSkuIdList).then(function (data) {
	            successCallback(data);
	            dispatch(showError());
	            dispatch(updateBasket(data));
	        }).catch(function (reason) {
	            dispatch(showError(reason));
	        });
	    };
	}
	
	/**
	 * Removes an Sku from the Basket
	 * @param  {Object} sku - The sku to be removed
	 * @param  {Boolean} samplePanel - Whether or not the item removed is in the sample panel (optional)
	 * @param  {Boolean} trackAna - Whether or not to track the removal (optional)
	 * @param  {Boolean} modifyConfirmed - Appends modifyConfirmed=true to the url.  This is used when
	 * calling a second time following a 202 response from the server (see API docs for details)
	 * @returns {Function} Action to be performed
	 */
	function removeProductFromBasket(sku) {
	    var samplePanel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	    var trackAna = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
	    var modifyConfirmed = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
	
	
	    return function (dispatch) {
	        basketApi.removeSkuFromBasket(basketUtils.getOrderId(), sku.skuId, modifyConfirmed).then(function (data) {
	            // Analytics
	            if (trackAna) {
	                var isSample = skuUtils.isSample(sku) && samplePanel;
	
	                processEvent.process(analyticsConsts.LINK_TRACKING_EVENT, {
	                    data: {
	                        bindingMethods: [__webpack_require__(/*! analytics/bindings/pages/all/removeFromBasketEvent */ 311)],
	                        eventStrings: ['scRemove'],
	                        linkName: isSample ? 'Remove samples from Basket' : 'Remove From Basket',
	                        sku: sku
	                    }
	                });
	
	                // Bluecore event for remove product from cart
	                blueCore.removeFromCartEvent(sku.productId);
	            }
	
	            if (skuUtils.isGwp(sku)) {
	                data.promoApplied = false;
	                if (basketUtils.getGwpPromoInBasket(data).length === 0) {
	                    data.promoMessage = null;
	                    data.promoWarning = null;
	                }
	            }
	
	            dispatch(showError());
	
	            dispatch(updateBasket(data));
	        }).catch(function (reason) {
	            if (reason.responseStatus === HTTP_STATUS_ACCEPTED) {
	                var messages = reason.errorMessages;
	                // Append a period and a line break to the last product
	                if (Array.isArray(messages) && messages.length > 0) {
	                    var lastProductName = messages[messages.length - 1];
	                    lastProductName += '.';
	                    messages[messages.length - 1] = lastProductName;
	                    messages.push('');
	                }
	                messages.push('Are you sure you want to continue?');
	                confirmBasketUpdateModal(dispatch, messages.join(''), function () {
	                    dispatch(removeProductFromBasket(sku, samplePanel, trackAna, true));
	                    dispatch(Actions.showInfoModal(false));
	                });
	            } else {
	
	                dispatch(showError(reason));
	            }
	        });
	    };
	}
	
	function removeRewardFromBasket(sku, successCallback) {
	    return function (dispatch) {
	        return biApi.removeBiRewardFromBasket(basketUtils.getOrderId(), sku.skuId).then(function (data) {
	            if (typeof successCallback === 'function') {
	                successCallback(data);
	            }
	            dispatch(updateBasket(data.basket));
	        }).catch(function (reason) {
	            var itemsAndErrors = basketUtils.catchItemLevelErrors(reason);
	            dispatch(showError(reason.errors, itemsAndErrors, reason.errorMessages));
	            return Promise.reject(reason);
	        });
	    };
	}
	
	/**
	 * Determines the type of item to be removed and calls the corresponding action
	 * @param  {Object} item - The item to be removed
	 * @param  {Boolean} trackAna - Whether or not to track the removal (optional)
	 * @returns {Function} Action to be performed
	 */
	function removeItemFromBasket(item, trackAna) {
	    return function (dispatch) {
	        var isReward = skuUtils.isBiReward(item);
	        if (isReward) {
	            return dispatch(removeRewardFromBasket(item.sku));
	        } else if (skuUtils.isGwp(item.sku)) {
	            var PromoActions = __webpack_require__(/*! actions/PromoActions */ 298);
	            return dispatch(PromoActions.removePromo(basketUtils.getOrderId()));
	        } else {
	            return dispatch(removeProductFromBasket(item.sku, false, trackAna));
	        }
	    };
	}
	
	function addToBasket(sku, quantity, successCallback, analyticsContext, samplePanel, productId) {
	
	    var result = void 0;
	
	    quantity = parseInt(quantity);
	
	    if (skuUtils.isBiReward(sku)) {
	        if (skuUtils.isInBasket(sku.skuId)) {
	            result = removeRewardFromBasket(sku, successCallback);
	        } else {
	            result = addRewardToBasket(sku.skuId, quantity, createDecoratedSuccessCallback(sku, successCallback, analyticsContext));
	        }
	    } else if (skuUtils.isSample(sku)) {
	        if (skuUtils.isInBasket(sku.skuId)) {
	            result = removeProductFromBasket(sku, samplePanel);
	        } else {
	            result = addSampleToBasket(sku, createDecoratedSuccessCallback(sku, successCallback, analyticsContext));
	        }
	    } else {
	        result = addProductToBasket(sku, quantity, createDecoratedSuccessCallback(sku, successCallback, analyticsContext, productId));
	    }
	
	    return result;
	}
	
	module.exports = {
	    TYPES: TYPES,
	
	    // skuType-independent add sku to basket.
	    addToBasket: addToBasket,
	
	    // Fully update basket in store with the new data.
	    updateBasket: updateBasket,
	
	    // Fetch basket from server and put it into store. No parameters needed.
	    refreshBasket: refreshBasket,
	
	    removePendingProduct: removePendingProduct,
	    addPendingProduct: addPendingProduct,
	    clearPendingProductList: clearPendingProductList,
	
	    updateQuantities: updateQuantities,
	    removeItemFromBasket: removeItemFromBasket,
	    showError: showError,
	    showWarning: showWarning,
	    addMultipleSkusToBasket: addMultipleSkusToBasket,
	
	    showPaypalRestrictedMessage: showPaypalRestrictedMessage,
	    showStickyApplePayBtn: showStickyApplePayBtn
	};

/***/ }),
/* 170 */
/*!****************************************************!*\
  !*** ./public_ufe/js/services/api/basket/index.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// This module provides API call methods for Sephora Commerce Basket APIs:
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Basket+APIs
	
	
	var getSamples = __webpack_require__(/*! ./getSamples */ 171);
	var getBasketDetails = __webpack_require__(/*! ./getBasketDetails */ 299);
	var subscribeToPlay = __webpack_require__(/*! ./subscribeToPlay */ 300);
	var addToCart = __webpack_require__(/*! ./addToCart */ 301);
	var applyPromotion = __webpack_require__(/*! ./applyPromotion */ 302);
	var updateBasket = __webpack_require__(/*! ./updateBasket */ 303);
	var addSamplesToBasket = __webpack_require__(/*! ./addSamplesToBasket */ 304);
	var addMsgPromotionToBasket = __webpack_require__(/*! ./addMsgPromotionToBasket */ 305);
	var removePromotion = __webpack_require__(/*! ./removePromotion */ 306);
	var removeSkuFromBasket = __webpack_require__(/*! ./removeSkuFromBasket */ 307);
	
	module.exports = {
	    getSamples: getSamples,
	    getBasketDetails: getBasketDetails,
	    addToCart: addToCart,
	    applyPromotion: applyPromotion,
	    updateBasket: updateBasket,
	    addSamplesToBasket: addSamplesToBasket,
	    addMsgPromotionToBasket: addMsgPromotionToBasket,
	    removePromotion: removePromotion,
	    removeSkuFromBasket: removeSkuFromBasket,
	    subscribeToPlay: subscribeToPlay
	};

/***/ }),
/* 171 */
/*!*********************************************************!*\
  !*** ./public_ufe/js/services/api/basket/getSamples.js ***!
  \*********************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Get+Samples+API
	
	
	function getSamples() {
	    var url = '/api/util/samples';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'GET'
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = getSamples;

/***/ }),
/* 172 */
/*!****************************************!*\
  !*** ./public_ufe/js/utils/Refetch.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	function fetchSuccess(response, options, resolve, url) {
	    // jscs:disable maximumLineLength
	    var Authentication = __webpack_require__(/*! ./Authentication */ 173); // Do not bubble up, it causes circular dependency
	    if (options.isRawResponse) {
	        resolve(response);
	    } else {
	        var json = response.json();
	        var responseStatus = response.status;
	        json.then(function (jsonResponse) {
	            if (response.status === 403) {
	                switch (jsonResponse.errorCode) {
	                    case 407:
	                        Authentication.ssiExpiredSignIn(url, options, resolve, response);
	                        return;
	                    case 409:
	                        Authentication.autoLogin(url, options, resolve, response);
	                        return;
	                    default:
	
	                        // jscs:disable maximumLineLength
	                        if (response.profileStatus !== undefined && response.profileStatus === 0) {
	
	                            // TODO
	                            //Authentication.sessionTimeoutAnonymous();
	                            var profileStatus = response.profileStatus;
	                        } else {
	                            Authentication.sessionTimeout(url, options, resolve, response);
	                        }
	
	                        return;
	                }
	            } else if ((response.errorCode || response.errorMessages) && response.showMessages !== false) {
	
	                // TODO: Show Errors
	                var errorMessages = response.errorMessages;
	            } else if (jsonResponse.errorCode == 409) {
	                Authentication.autoLogin(url, options, resolve, response);
	                return;
	            } else if (jsonResponse.errorCode == 407) {
	                Authentication.ssiExpiredSignIn(url, options, resolve, response);
	                return;
	            }
	
	            jsonResponse.responseStatus = responseStatus;
	            resolve(jsonResponse);
	        });
	    }
	}
	
	module.exports = {
	    /**
	     *
	     * @param url
	     * @param options (can include:
	     *  method (if not provided, is set to 'GET)
	     *  credentials (if not provided, is set to 'include').
	     *  timeout (default 10 seconds)
	     *  retries (defaults to 3)
	     * @returns {Promise}
	     */
	    fetch: function (_fetch) {
	        function fetch(_x, _x2) {
	            return _fetch.apply(this, arguments);
	        }
	
	        fetch.toString = function () {
	            return _fetch.toString();
	        };
	
	        return fetch;
	    }(function (url, options) {
	        var retries = 3;
	        var timeout = 10000;
	
	        if (typeof options === 'undefined') {
	            options = {};
	        }
	
	        if (options.retries) {
	            retries = options.retries;
	        }
	
	        if (options.timeout) {
	            timeout = options.timeout;
	        }
	
	        if (!options.method) {
	            options.method = 'GET';
	        }
	
	        if (typeof options.credentials === 'undefined') {
	            options.credentials = 'include';
	        }
	
	        return new Promise(function (resolve, reject) {
	            var wrappedFetch = function wrappedFetch(n) {
	                fetch(url, options).then(function (response) {
	                    return fetchSuccess(response, options, resolve, url);
	                }).catch(function (error) {
	                    // jscs:disable maximumLineLength
	                    if (error instanceof TypeError && error.message === 'Network request failed') {
	                        if (n > 0) {
	                            setTimeout(function () {
	                                wrappedFetch(--n);
	                            }, timeout);
	                        } else {
	                            reject(error);
	                        }
	                    }
	                });
	            };
	
	            wrappedFetch(retries);
	        });
	    }),
	
	    /**
	     * Helper function for basic response status handling
	     * TODO: Actual optimistic UI updating functionality
	     * @param response
	     * @param {function} success callback
	     * @param {function} error callback
	     */
	    handleResponse: function handleResponse(response, success, error) {
	        if (response.responseStatus === 200) {
	            success();
	        } else {
	            if (error) {
	                error();
	            }
	        }
	    }
	};

/***/ }),
/* 173 */
/*!***********************************************!*\
  !*** ./public_ufe/js/utils/Authentication.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// TODO Mykhaylo Gavrylyuk: Now after doing all the services/api refactoring,
	// I trully believe that Authenticate and Refetch should be refactored into
	// services. They are not utils by their nature, though treated and used as such.
	
	
	var RestApi = __webpack_require__(/*! ./RestApi */ 174);
	var SUBMIT_ORDER_URL = '/api/checkout/submitOrder';
	var showInterstice = __webpack_require__(/*! Actions */ 175).showInterstice;
	var Location = __webpack_require__(/*! utils/Location */ 3);
	var orderActions = __webpack_require__(/*! actions/OrderActions */ 209);
	var store = __webpack_require__(/*! Store */ 146);
	var userUtils = __webpack_require__(/*! utils/User */ 186);
	var userActions = __webpack_require__(/*! actions/UserActions */ 210);
	var cookieUtil = __webpack_require__(/*! utils/Cookies */ 5);
	var ssiApi = __webpack_require__(/*! services/api/ssi */ 279);
	
	var ORDER_INIT_API = '/api/checkout/order/init';
	
	var handleTimeout = function handleTimeout(originalUrl, originalOptions, originalResolve, response, message) {
	    var user = store.getState().user;
	    var basket = store.getState().basket;
	    var options = originalOptions && originalOptions.body ? JSON.parse(originalOptions.body) : {};
	    var oldUserId = user.profileId;
	    var oldOrderId = basket.orderId;
	    var isBasketInitCheckout = originalUrl.indexOf(ORDER_INIT_API) >= 0 && Location.isBasketPage();
	
	    var afterSignIn = function afterSignIn(userData) {
	        if (isBasketInitCheckout && userData.isNewUserFlow) {
	            // Try to init order after interrrupt by sign in
	            var checkoutUtils = __webpack_require__(/*! utils/Checkout */ 281);
	            checkoutUtils.initializeCheckout({
	                isPaypalFlow: options.isPaypalFlow,
	                isApplePayFlow: options.isApplePayFlow,
	                user: userData }).then(originalResolve).catch(function () {
	                // TODO It's so strange we don't have anything here.
	            });
	        } else if (originalUrl.indexOf(SUBMIT_ORDER_URL) !== -1) {
	            // Do not Submit Order silently, after relogin.
	            // Let user review the Order before submitting
	            Location.reload();
	        } else {
	            var refetch = __webpack_require__(/*! Refetch */ 172);
	
	            refetch.fetch(originalUrl, originalOptions).then(function (res) {
	                originalResolve(res);
	            });
	        }
	    };
	
	    store.dispatch(showInterstice(false));
	
	    // make user recognized, if store thinks that she's still signed In
	    if (userUtils.isSignedIn()) {
	        user.profileStatus = 2;
	        store.dispatch(userActions.update(user));
	    }
	
	    var showSignInModal = __webpack_require__(/*! Actions */ 175).showSignInModal;
	    store.dispatch(showSignInModal(true, message, afterSignIn, isBasketInitCheckout));
	};
	
	/**
	 * Session timeout - allow user to sign in again (or if SSI, sign them in automatically)
	 * and then execute whatever ajax call they were originally attempting
	 */
	var sessionTimeout = function sessionTimeout(url, options, originalResolve, response) {
	    handleTimeout(url, options, originalResolve, response);
	};
	
	/**
	 * SSI expired.  The user must sign back in (and we show them an error message stating so)
	 * and then execute whatever ajax call they were originally attempting
	 */
	var ssiExpiredSignIn = function ssiExpiredSignIn(url, options, originalResolve, reason) {
	    handleTimeout(url, options, originalResolve, response, reason.errorMessages);
	};
	
	var autoLogin = function autoLogin(originalUrl, originalOptions, originalResolve, response) {
	    store.dispatch(showInterstice(false));
	
	    var refetch = __webpack_require__(/*! Refetch */ 172);
	
	    ssiApi.autoLogin().then(function () {
	        refetch.fetch(originalUrl, originalOptions).then(originalResolve);
	    }).catch(function (reason) {
	        ssiExpiredSignIn(originalUrl, originalOptions, originalResolve, reason);
	    });
	
	    /*
	     // TODO: after 17.2
	     // Account.getProfile(response.profileId, true).done(function() {
	     //     reinitializeOrder(true);
	     // });
	     */
	};
	
	/*
	 * Show the signin modal and apply postponed promo after Login if an apple pay session
	 *
	 * Note: this is needed only on basket and checkout but needs to be on all ways of logging in on
	 * those pages, thus its presence here as a universal decorator
	 */
	var showSignInModalWithPromoDecoration = function showSignInModalWithPromoDecoration(resolve, reject) {
	    var isNewUserFlow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
	    var analyticsData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
	
	    // Required on the method level bc/ of a circular dependency otherwise.
	    var Actions = __webpack_require__(/*! Actions */ 175);
	    var storeLocal = __webpack_require__(/*! Store */ 146);
	
	    var decoratedResolve = function decoratedResolve(data) {
	
	        var applePaySession = storeLocal.getState().applePaySession;
	        // TODO: Remove isActive ApplePay check when you need to enable it for any signIn
	        if (applePaySession.isActive) {
	            var promo = storeLocal.getState().promo;
	            if (promo.afterLogin) {
	                var applyPromo = __webpack_require__(/*! actions/PromoActions */ 298).applyPromo;
	                storeLocal.dispatch(applyPromo(promo.afterLogin, function (result) {
	                    resolve(data);
	                }));
	            } else {
	                resolve(data);
	            }
	        } else {
	            resolve(data);
	        }
	    };
	
	    storeLocal.dispatch(Actions.showSignInModal(true, null, decoratedResolve, isNewUserFlow, analyticsData, reject));
	};
	
	/**
	 * Renders the sign-in / register overlay if needed.  then redirects/calls the desired function
	 *
	 * Note: only checks for signed in/recognized versus anonymous, does not differentiate between
	 * signed in and recognized (API call return status will handle that accordingly)
	 *
	 * @param {String} redirect        *TODO* Optional: path to redirect,
	 *                                  else redirected to same page or home
	 * @param {object} objdata         *TODO* Optional: object for storing the temporary data required
	 *                                  by functionality which needs
	 *                                 to be performed after registration is done
	 *                                 objdata format should be : {
	 *                                      sActionType : 'Loves',
	 *                                      oActionData : {}
	 *                                 }
	 **/
	// TODO: support redirect, and objdata
	var requireAuthentication = function requireAuthentication() {
	    var requiredForRecognized = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
	    var isNewUserFlow = arguments[1];
	    var analyticsData = arguments[2];
	
	    //const store = require('Store');
	    var validateUserStatus = __webpack_require__(/*! utils/User */ 186).validateUserStatus;
	
	    return new Promise(function (resolve, reject) {
	        validateUserStatus().then(function (user) {
	            var profileStatus = user.profileStatus;
	
	            if (profileStatus === 0 || profileStatus === 2 && requiredForRecognized) {
	                showSignInModalWithPromoDecoration(resolve, reject, isNewUserFlow, analyticsData);
	            } else {
	                resolve();
	            }
	        });
	    });
	};
	
	// TODO THOMAS 17.4:
	//  refactor various files that are using the above requireAuthentication function
	//  so that those files use new decorator that calls this promise function
	//  files include: ProductQuickLookMessage.c.js, AccountGreeting.c.js, InlineBasket.c.js,
	//  ProductLove.c.js, RewardItem.c.js, PleaseSignIn.c.js
	var requireRecognizedAuthentication = function requireRecognizedAuthentication() {
	    var validateUserStatus = __webpack_require__(/*! utils/User */ 186).validateUserStatus;
	
	    return new Promise(function (resolve, reject) {
	        validateUserStatus().then(function (user) {
	            var profileStatus = user.profileStatus;
	
	            if (profileStatus === 0) {
	                showSignInModalWithPromoDecoration(resolve, reject);
	            } else {
	                resolve();
	            }
	        });
	    });
	};
	
	var requireLoggedInAuthentication = function requireLoggedInAuthentication() {
	    var validateUserStatus = __webpack_require__(/*! utils/User */ 186).validateUserStatus;
	
	    return new Promise(function (resolve, reject) {
	        validateUserStatus().then(function (user) {
	            var profileStatus = user.profileStatus;
	
	            if (profileStatus === 0 || profileStatus === 2) {
	                showSignInModalWithPromoDecoration(resolve, reject);
	            } else {
	                resolve();
	            }
	        });
	    });
	};
	
	module.exports = {
	    // TODO
	    // sessionTimeoutAnonymous : sessionTimeoutAnonymous,
	    sessionTimeout: sessionTimeout,
	
	    // TODO
	    //authenticate : authenticate,
	    ssiExpiredSignIn: ssiExpiredSignIn,
	    autoLogin: autoLogin,
	    requireAuthentication: requireAuthentication,
	    requireRecognizedAuthentication: requireRecognizedAuthentication,
	    requireLoggedInAuthentication: requireLoggedInAuthentication
	};

/***/ }),
/* 174 */
/*!****************************************!*\
  !*** ./public_ufe/js/utils/RestApi.js ***!
  \****************************************/
/***/ (function(module, exports) {

	'use strict';
	
	module.exports = function () {
	    var TLS_REQUIRED = ['shopping-cart', 'basket', //api/basket',
	    'bulk', //api/bulk',
	    'checkout', //api/checkout',
	    'my', //api/my',
	    'users', // rest/users,
	    'auth', // rest/auth
	    'secure', // rest/forgotpassword
	    'ssi' // rest/ssi
	    ];
	
	    /**
	     * Generates the proper    non/SSL/TLS host connection string
	     * (i.e., https://localhost:3001)
	     * @param {String} path '/path/to/endpoint?query=foo'
	     * @return {String}
	     */
	    function getRestLocation(path) {
	
	        var host = void 0;
	        var port = void 0;
	        var exPath = path.split('/');
	        var useTls = TLS_REQUIRED.indexOf(exPath[2]) > -1;
	
	        if (exPath[2] === 'users' && exPath[5] === 'check') {
	            useTls = false;
	        }
	
	        if (useTls) {
	            var sslPort = Sephora.sslPort;
	
	            host = Sephora.host || window.location.hostname;
	            port = typeof sslPort === 'undefined' || sslPort === 443 || sslPort === '' ? '' : ':' + sslPort;
	            return ['https://', host, port, path].join('');
	        }
	
	        return path;
	    }
	
	    return {
	        getRestLocation: getRestLocation
	    };
	}();

/***/ }),
/* 175 */
/*!******************************************!*\
  !*** ./public_ufe/js/actions/Actions.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var processEvent = __webpack_require__(/*! analytics/processEvent */ 176);
	var anaConsts = __webpack_require__(/*! analytics/constants */ 178);
	var anaUtils = __webpack_require__(/*! analytics/utils */ 179);
	
	var TYPES = {
	    LOAD_MORE_PRODUCTS: 'LOAD_MORE_PRODUCTS',
	    UPDATE_PRODUCT_SORT: 'UPDATE_PRODUCT_SORT',
	    SHOW_HAMBURGER_MENU: 'SHOW_HAMBURGER_MENU',
	    SHOW_BCC_MODAL: 'SHOW_BCC_MODAL',
	    SHOW_SIGN_IN_MODAL: 'SHOW_SIGN_IN_MODAL',
	    SHOW_REGISTER_MODAL: 'SHOW_REGISTER_MODAL',
	    SHOW_BI_REGISTER_MODAL: 'SHOW_BI_REGISTER_MODAL',
	    SHOW_FORGOT_PASSWORD_MODAL: 'SHOW_FORGOT_PASSWORD_MODAL',
	    SHOW_INFO_MODAL: 'SHOW_INFO_MODAL',
	    SHOW_SAMPLE_MODAL: 'SHOW_SAMPLE_MODAL',
	    SHOW_VIDEO_MODAL: 'SHOW_VIDEO_MODAL',
	    SHOW_PROMO_MODAL: 'SHOW_PROMO_MODAL',
	    SHOW_REWARD_MODAL: 'SHOW_REWARD_MODAL',
	    SHOW_QUICK_LOOK_MODAL: 'SHOW_QUICK_LOOK_MODAL',
	    SHOW_MEDIA_MODAL: 'SHOW_MEDIA_MODAL',
	    SHOW_COLOR_IQ_MODAL: 'SHOW_COLOR_IQ_MODAL',
	    SHOW_STICKY_BANNER: 'SHOW_STICKY_BANNER',
	    UPDATE_QUICK_LOOK: 'UPDATE_QUICK_LOOK',
	    SHOW_COUNTRY_SWITCHER_MODAL: 'SHOW_COUNTRY_SWITCHER_MODAL',
	    SHOW_COUNTRY_SWITCHER_PROMPT: 'SHOW_COUNTRY_SWITCHER_PROMPT',
	    SHOW_INTERNATIONAL_SHIPPING_MODAL: 'SHOW_INTERNATIONAL_SHIPPING_MODAL',
	    SHOW_EMAIL_WHEN_IN_STOCK_MODAL: 'SHOW_EMAIL_WHEN_IN_STOCK_MODAL',
	    SHOW_INTERSTICE: 'SHOW_INTERSTICE',
	    ENABLE_APPLEPAY_SESSION: 'ENABLE_APPLEPAY_SESSION',
	    SHOW_SHARE_LINK_MODAL: 'SHOW_SHARE_LINK_MODAL',
	    SHOW_PRODUCT_FINDER_MODAL: 'SHOW_PRODUCT_FINDER_MODAL',
	    SHOW_FIND_IN_STORE_MODAL: 'SHOW_FIND_IN_STORE_MODAL',
	    SHOW_FIND_IN_STORE_MAP_MODAL: 'SHOW_FIND_IN_STORE_MAP_MODAL'
	};
	
	var wrapForLegacyAction = __webpack_require__(/*! actions/Legacy */ 208).wrapForLegacyAction;
	
	module.exports = {
	    TYPES: TYPES,
	
	    loadMoreProducts: function loadMoreProducts(products) {
	        return {
	            type: TYPES.LOAD_MORE_PRODUCTS,
	            products: products
	        };
	    },
	
	    updateProductSort: function updateProductSort(sortOption) {
	        return {
	            type: TYPES.UPDATE_PRODUCT_SORT,
	            sortOption: sortOption
	        };
	    },
	
	    // Hamburger Menu
	    showHamburgerMenu: wrapForLegacyAction(Sephora.legacy && Sephora.legacy.Actions && Sephora.legacy.Actions.showHamburgerMenu ? Sephora.legacy.Actions.showHamburgerMenu.bind(null, TYPES.SHOW_HAMBURGER_MENU) : null, function (isOpen) {
	        if (isOpen) {
	            processEvent.process(anaConsts.LINK_TRACKING_EVENT, {
	                data: {
	                    eventStrings: ['event71'],
	                    linkName: anaUtils.buildNavPath(['left nav', 'hamburger']),
	                    navigationInfo: anaUtils.buildNavPath(['left nav', 'hamburger'])
	                }
	            });
	        }
	
	        return {
	            type: TYPES.SHOW_HAMBURGER_MENU,
	            isOpen: isOpen
	        };
	    }),
	
	    // Modals
	    showBccModal: wrapForLegacyAction(Sephora.legacy && Sephora.legacy.Actions ? Sephora.legacy.Actions.showBccModal : null, function (isOpen, bccModalTemplate, bccParentComponentName) {
	        return {
	            type: TYPES.SHOW_BCC_MODAL,
	            isOpen: isOpen,
	            bccModalTemplate: bccModalTemplate,
	            bccParentComponentName: bccParentComponentName
	        };
	    }),
	
	    //TODO: refactor these aprameters getting passed through.  It's super hacky and will only get
	    // worse as we add more special cases relating to signin
	    // jscs:disable maximumLineLength
	    showSignInModal: wrapForLegacyAction(Sephora.legacy && Sephora.legacy.Actions ? Sephora.legacy.Actions.showSignInModal : null, function (isOpen, messages, callback) {
	        var isNewUserFlow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
	        var analyticsData = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
	        var errback = arguments[5];
	
	
	        //Analytics - Track Sign-In Modal
	        var signInData = {
	            pageName: 'sign in:sign in:n/a:*',
	            pageType: 'sign in',
	            pageDetail: 'sign in'
	        };
	
	        if (isOpen) {
	            Object.assign(signInData, analyticsData);
	
	            processEvent.process(anaConsts.ASYNC_PAGE_LOAD, {
	                data: signInData
	            });
	        }
	        //end Analtytics
	
	        return {
	            type: TYPES.SHOW_SIGN_IN_MODAL,
	            isOpen: isOpen,
	            isNewUserFlow: isNewUserFlow,
	            messages: messages,
	            callback: callback,
	            errback: errback
	        };
	    }),
	
	    showForgotPasswordModal: wrapForLegacyAction(Sephora.legacy && Sephora.legacy.Actions && Sephora.legacy.Actions.showInfoModal ? Sephora.legacy.Actions.showInfoModal : null, function (isOpen, email) {
	        return {
	            type: TYPES.SHOW_FORGOT_PASSWORD_MODAL,
	            isOpen: isOpen,
	            email: email
	        };
	    }),
	
	    /*
	        ARGUMENTS FOR SHOW INFO MODAL
	        isOpen: boolean
	        title: string for title section of modal (optional)
	        message: string for body of modal
	        buttonText: string for the button text (Yes, Confirm) (optional)
	        callback: function to run after user clicks the confirm button (optional)
	        showCancelButton: boolean, displays optional cancel button (optional, defaults to false)
	        cancelText: string for the cancel button text (showCancelButton needs to be true)
	        isHtml: boolean for whether the message is html or not (optional, defaults to false)
	        confirmMsgObj: contains title and message for a confirmation modal
	            that is launched after click confirm or yes button (optional)
	    */
	    showInfoModal: wrapForLegacyAction(Sephora.legacy && Sephora.legacy.Actions && Sephora.legacy.Actions.showInfoModal ? Sephora.legacy.Actions.showInfoModal : null, function (isOpen, title, message, buttonText, callback, showCancelButton, cancelText, isHtml, confirmMsgObj, cancelCallback) {
	        return {
	            type: TYPES.SHOW_INFO_MODAL,
	            isOpen: isOpen,
	            title: title,
	            message: message,
	            buttonText: buttonText,
	            callback: callback,
	            showCancelButton: showCancelButton,
	            cancelText: cancelText,
	            isHtml: isHtml,
	            confirmMsgObj: confirmMsgObj,
	            cancelCallback: cancelCallback
	        };
	    }),
	
	    showMediaModal: function showMediaModal(isOpen, mediaId, title, modalClose) {
	        return {
	            type: TYPES.SHOW_MEDIA_MODAL,
	            isOpen: isOpen,
	            mediaId: mediaId,
	            title: title,
	            modalClose: modalClose
	        };
	    },
	
	    showColorIQModal: function showColorIQModal(isOpen, callback) {
	        return {
	            type: TYPES.SHOW_COLOR_IQ_MODAL,
	            isOpen: isOpen,
	            callback: callback
	        };
	    },
	
	    // jscs:disable maximumLineLength
	    showRegisterModal: wrapForLegacyAction(Sephora.legacy && Sephora.legacy.Actions ? Sephora.legacy.Actions.showRegisterModal : null, function (isOpen, message, callback, userEmail, isStoreUser, biData, errback) {
	        return {
	            type: TYPES.SHOW_REGISTER_MODAL,
	            isOpen: isOpen,
	            message: message,
	            callback: callback,
	            presetLogin: userEmail,
	            isStoreUser: isStoreUser,
	            biData: biData,
	            errback: errback
	        };
	    }),
	
	    showBiRegisterModal: wrapForLegacyAction(Sephora.legacy && Sephora.legacy.Actions && Sephora.legacy.Actions.showBiRegisterModal ? Sephora.legacy.Actions.showBiRegisterModal : null, function (isOpen, callback, isCommunity) {
	        var cancellationCallback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
	
	        return {
	            type: TYPES.SHOW_BI_REGISTER_MODAL,
	            isOpen: isOpen,
	            callback: callback,
	            cancellationCallback: cancellationCallback,
	            isCommunity: isCommunity
	        };
	    }),
	
	    forceRegisterModal: wrapForLegacyAction(Sephora.legacy && Sephora.legacy.Actions && Sephora.legacy.Actions.forceRegisterModal ? Sephora.legacy.Actions.forceRegisterModal : null, function (isOnlyBI) {
	        if (isOnlyBI) {
	            // User is already registered, show BI Register Modal
	            return {
	                type: TYPES.SHOW_BI_REGISTER_MODAL,
	                isOpen: true
	            };
	        } else {
	            return {
	                type: TYPES.SHOW_REGISTER_MODAL,
	                isOpen: true
	            };
	        }
	    }),
	
	    showSampleModal: function showSampleModal(isOpen, sampleList, allowedQtyPerOrder, samplesMessage) {
	        return {
	            type: TYPES.SHOW_SAMPLE_MODAL,
	            isOpen: isOpen,
	            sampleList: sampleList,
	            allowedQtyPerOrder: allowedQtyPerOrder,
	            samplesMessage: samplesMessage
	        };
	    },
	
	    showVideoModal: function showVideoModal(config) {
	        return {
	            type: TYPES.SHOW_VIDEO_MODAL,
	            isOpen: config.isOpen,
	            videoTitle: config.videoTitle,
	            videoModalUpdated: config.videoModalUpdated,
	            video: config.video
	        };
	    },
	
	    showPromoModal: function showPromoModal(isOpen, promosList, maxMsgSkusToSelect, instructions, promoCode) {
	        return {
	            type: TYPES.SHOW_PROMO_MODAL,
	            isOpen: isOpen,
	            promoCode: promoCode,
	            promosList: promosList,
	            maxMsgSkusToSelect: maxMsgSkusToSelect,
	            instructions: instructions
	        };
	    },
	
	    showRewardModal: function showRewardModal(isOpen) {
	        return {
	            type: TYPES.SHOW_REWARD_MODAL,
	            isOpen: isOpen
	        };
	    },
	
	    showQuickLookModal: function showQuickLookModal(isOpen, skuType, sku, isCertonaProduct) {
	        return {
	            type: TYPES.SHOW_QUICK_LOOK_MODAL,
	            isOpen: isOpen,
	            skuType: skuType,
	            sku: sku,
	            isCertonaProduct: isCertonaProduct
	        };
	    },
	
	    showStickyBanner: function showStickyBanner(isOpen, height) {
	        return {
	            type: TYPES.SHOW_STICKY_BANNER,
	            isOpen: isOpen,
	            height: isOpen ? height : 0
	        };
	    },
	
	    enableApplePaySession: function enableApplePaySession(isActive) {
	        return {
	            type: TYPES.ENABLE_APPLEPAY_SESSION,
	            isActive: isActive
	        };
	    },
	
	    showEmailMeWhenInStockModal: wrapForLegacyAction(Sephora.legacy && Sephora.legacy.Actions && Sephora.legacy.Actions.showEmailMeWhenInStockModal ? Sephora.legacy.Actions.showEmailMeWhenInStockModal : null, function (isOpen, product, currentSku, isQuickLook) {
	        return {
	            type: TYPES.SHOW_EMAIL_WHEN_IN_STOCK_MODAL,
	            isOpen: isOpen,
	            product: product,
	            currentSku: currentSku,
	            isQuickLook: isQuickLook
	        };
	    }),
	
	    updateQuickLookContent: function updateQuickLookContent(product, sku) {
	        return {
	            type: TYPES.UPDATE_QUICK_LOOK,
	            quickLookProduct: product,
	            sku: sku
	        };
	    },
	
	    // jscs:disable maximumLineLength
	    showCountrySwitcherModal: wrapForLegacyAction(Sephora.legacy && Sephora.legacy.Actions ? Sephora.legacy.Actions.showCountrySwitcherModal : null, function (isOpen, ctry, lang, ctryName) {
	        return {
	            type: TYPES.SHOW_COUNTRY_SWITCHER_MODAL,
	            isOpen: isOpen,
	            desiredCountry: ctry,
	            desiredLang: lang,
	            switchCountryName: ctryName
	        };
	    }),
	
	    showCountrySwitcherPrompt: wrapForLegacyAction(Sephora.legacy && Sephora.legacy.Actions ? Sephora.legacy.Actions.showCountrySwitcherPrompt : null, function (isOpen) {
	        // MW Hamburger Menu modal
	        return {
	            type: TYPES.SHOW_COUNTRY_SWITCHER_PROMPT,
	            isOpen: isOpen
	        };
	    }),
	
	    showInternationalShippingModal: function showInternationalShippingModal(isOpen) {
	        return {
	            type: TYPES.SHOW_INTERNATIONAL_SHIPPING_MODAL,
	            isOpen: isOpen
	        };
	    },
	
	    // Interstice
	
	    showInterstice: function showInterstice(isVisible) {
	        return {
	            type: TYPES.SHOW_INTERSTICE,
	            isVisible: isVisible
	        };
	    },
	
	    showShareLinkModal: function showShareLinkModal(isOpen, title, shareUrl) {
	        return {
	            type: TYPES.SHOW_SHARE_LINK_MODAL,
	            isOpen: isOpen,
	            title: title,
	            shareUrl: shareUrl
	        };
	    },
	
	    showProductFinderModal: function showProductFinderModal(isOpen, bccData) {
	        return {
	            type: TYPES.SHOW_PRODUCT_FINDER_MODAL,
	            isOpen: isOpen,
	            bccData: bccData
	        };
	    },
	
	    showFindInStoreModal: function showFindInStoreModal(isOpen, currentProduct, zipCode, searchedDistance, storesToShow) {
	        return {
	            type: TYPES.SHOW_FIND_IN_STORE_MODAL,
	            isOpen: isOpen,
	            currentProduct: currentProduct,
	            zipCode: zipCode,
	            searchedDistance: searchedDistance,
	            storesToShow: storesToShow
	        };
	    },
	
	    showFindInStoreMapModal: function showFindInStoreMapModal(isOpen, currentProduct, selectedStore, zipCode, searchedDistance, storesToShow) {
	        return {
	            type: TYPES.SHOW_FIND_IN_STORE_MAP_MODAL,
	            isOpen: isOpen,
	            currentProduct: currentProduct,
	            selectedStore: selectedStore,
	            zipCode: zipCode,
	            searchedDistance: searchedDistance,
	            storesToShow: storesToShow
	        };
	    }
	};

/***/ }),
/* 176 */
/*!*************************************************!*\
  !*** ./public_ufe/js/analytics/processEvent.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * This module becomes a property of Sephora.analytics.
	 *
	 * Its purpose is to hold methods which preprocess event data
	 * so that the tag management system can simply read from the
	 * digitalData object and not need to employ its own logic.
	 */
	
	var commonInteractions = __webpack_require__(/*! analytics/preprocess/preprocessCommonInteractions */ 177);
	var getBindingMethods = __webpack_require__(/*! analytics/getBindingMethods */ 196);
	var anaConsts = __webpack_require__(/*! analytics/constants */ 178);
	var anaUtils = __webpack_require__(/*! analytics/utils */ 179);
	var postProcess = __webpack_require__(/*! analytics/postProcessEvent */ 207);
	
	var eventInProgress = {};
	
	var EVENTS_POOL = [];
	var eventRunning = false;
	
	function getEventHash(eventName, eventData) {
	    return eventName + JSON.stringify(eventData !== undefined ? eventData : {});
	}
	
	/*
	 Makes the call of event debounced, so during the first call no other call of the same event is
	 possible. Debounce uses pair eventName + eventParams.data as a hash key to detect whether
	 it is the same event or not. It does not count other params of event, such as pageType,
	 only eventParams.data is used for it
	 */
	function debounceProcessEvents(processToDebounce) {
	    /* eslint-disable no-invalid-this */
	    var self = this;
	    return function (eventName) {
	        var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	        var eventHash = getEventHash(eventName, opts.data);
	        if (!eventInProgress[eventHash]) {
	            var removeEventInProgress = function removeEventInProgress(event) {
	                var eventHashToRemove = getEventHash(event.type, event.detail.data);
	                if (eventInProgress[eventHashToRemove]) {
	                    delete eventInProgress[eventHashToRemove];
	                    window.removeEventListener(eventName, removeEventInProgress);
	                }
	            };
	
	            eventInProgress[eventHash] = true;
	
	            window.addEventListener(eventName, removeEventInProgress);
	            processToDebounce.apply(self, arguments);
	        }
	    };
	}
	
	/**
	 * Take a page type and and event name and start a multi-step process which:
	 * - Decides which data needs to be bound and how.
	 * - Decides what dependencies to wait for
	 * - Finally sends an event that is handled by our tag management system
	 * @param  {string} eventName The name of this event
	 * @param  {object} opts An optional object containing any amount of other arguments
	 */
	function processEvents(eventName) {
	    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	
	    try {
	        // Being extra safe, don't do anything unless promises object has been loaded.
	
	        if (anaUtils.safelyReadProperty('Sephora.analytics.promises') === '') {
	            return;
	        }
	
	        /* TODO: Aaron - clean up require
	         ** Note: Moving the Events require here, breaks all mobile analytics, adding it
	         ** at the top of the file causes other issues.
	         const Events = require('utils/framework/Events');
	         const fire = this.fire;
	          When fixes are ready, wrap the code below in:
	         Events.onLastLoadEvent(window, [Events.PostLoad], function () {
	         */
	
	        var methodsToCallOnEvent = [];
	
	        opts.data = opts.data || {};
	
	        opts.pageType = opts.pageType || anaUtils.safelyReadProperty('digitalData.page.category.pageType') || anaUtils.safelyReadProperty('Sephora.analytics.backendData.pageType');
	
	        //Add the promises that we always need to wait for
	        methodsToCallOnEvent.push(Sephora.analytics.promises.tagManagementSystemReady);
	
	        //Wait for initial page load on all events besides initial page load
	        if (eventName !== anaConsts.PAGE_LOAD) {
	            methodsToCallOnEvent.push(Sephora.analytics.promises.initialPageLoadFired);
	        }
	
	        //Add all the binding methods relevant to this page
	        methodsToCallOnEvent = methodsToCallOnEvent.concat(getBindingMethods(opts.pageType, eventName, opts.data));
	
	        this.fire(eventName, methodsToCallOnEvent, opts.data);
	    } catch (e) {
	        console.log(e);
	    }
	}
	
	var methods = {
	
	    /**
	     * Ensure that all promises are fulfilled, call all binding methods and
	     * finally fire an event for the tag management system.
	     * @param  {string} eventName     The name of the event to trigger
	     * @param  {array}  methodsToCall The methods to call before firing the event
	     * @return {[type]}               [description]
	     */
	    fire: function fire(currentEventName, currentMethodsToCall) {
	        var currentData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	        //Declare fire so we can recursively call it from within
	        var fireEvent = function fireEvent(eventName, methodsToCall, data) {
	            if (methodsToCall.length) {
	                var method = methodsToCall.shift();
	                if (method instanceof Promise) {
	                    method.then(function () {
	                        fireEvent(eventName, methodsToCall, data);
	                    });
	                } else if (typeof method === 'function') {
	                    if (method.isConditional) {
	
	                        //Only call fire again if the method returns true
	                        if (method(data)) {
	                            fireEvent(eventName, methodsToCall, data);
	                        }
	                    } else {
	                        method(data);
	                        fireEvent(eventName, methodsToCall, data);
	                    }
	                }
	            } else {
	                setTimeout(function () {
	                    eventRunning = false;
	                    /* eslint-disable no-use-before-define */
	                    scheduleEvent();
	                }, 1000); // delay to prevent one concurrent event compromise another
	                //Actually trigger the event for Signal
	                eventRunning = true;
	                Sephora.analytics.utils.fireEventForTagManager(eventName, {
	                    detail: {
	                        data: data,
	                        specificEventName: data.specificEventName
	                    }
	                });
	
	                //Do any special post event actions
	                postProcess(eventName);
	            }
	        };
	        function scheduleEvent() {
	            if (!eventRunning) {
	                var event = EVENTS_POOL.shift();
	                if (event) {
	                    fireEvent(event.eventName, event.methodsToCall, event.data);
	                }
	            }
	        }
	        EVENTS_POOL.push({
	            eventName: currentEventName,
	            data: currentData,
	            methodsToCall: currentMethodsToCall
	        });
	        scheduleEvent();
	    },
	
	    preprocess: {
	        commonInteractions: commonInteractions
	    }
	
	}; //End methods
	methods.process = debounceProcessEvents.call(methods, processEvents);
	
	/*
	 The event will fire only once per page cycle. To check that it has already been fired we
	 try to get this event from event history throughout all page and find it there
	 To find it we use checkAttr, which should be uniquely identifying this event among others
	 Usually checkAttr is a data part of opts
	 */
	methods.processOnce = function (eventName) {
	    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	    var checkAttr = arguments[2];
	
	    var lastEvent = anaUtils.getMostRecentEvent(eventName, checkAttr);
	    var isEventFiredAlready = Object.keys(lastEvent).length;
	    if (!isEventFiredAlready) {
	        methods.process.apply(this, arguments);
	    }
	};
	
	module.exports = methods;

/***/ }),
/* 177 */
/*!****************************************************************************!*\
  !*** ./public_ufe/js/analytics/preprocess/preprocessCommonInteractions.js ***!
  \****************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var anaConsts = __webpack_require__(/*! analytics/constants */ 178);
	var utils = __webpack_require__(/*! analytics/utils */ 179);
	var skuUtils = __webpack_require__(/*! utils/Sku */ 185);
	var userUtils = __webpack_require__(/*! utils/User */ 186);
	
	/**
	 * Determine how to bind data for an event based on the context in the parameter
	 * Common interactions preprocessed here include:
	 * - Add to Basket
	 * - Love / Un-Love
	 * - Swatch Click
	 * @param  {object} data An object containing specifics for this event
	 */
	module.exports = function (data) {
	
	    var processEvent = __webpack_require__(/*! analytics/processEvent */ 176);
	
	    var addBindingMethods = function addBindingMethods(methodsToAdd) {
	        var existingMethods = data.bindingMethods || [];
	
	        /* Order of binding methods matters. The base method should happen first because
	        ** subsequent methods extend the originals. This is why we do existing.concat(new) */
	        data.bindingMethods = existingMethods.length ? existingMethods.concat(methodsToAdd) : methodsToAdd;
	    };
	
	    switch (data.context) {
	        case anaConsts.QUICK_LOOK_MODAL:
	            addBindingMethods([__webpack_require__(/*! analytics/bindings/pages/all/quickLookInteraction */ 192)]);
	            break;
	        case anaConsts.CONTEXT.BASKET_SAMPLES:
	            addBindingMethods([__webpack_require__(/*! analytics/bindings/pages/basket/addSampleToBasket */ 193)]);
	            break;
	        case anaConsts.CONTEXT.BASKET_REWARDS:
	            addBindingMethods([__webpack_require__(/*! analytics/bindings/pages/basket/addRewardToBasket */ 194)]);
	            break;
	        case anaConsts.CONTEXT.BASKET_LOVES:
	            addBindingMethods(function () {
	                var currentEvent = utils.getMostRecentEvent(anaConsts.LINK_TRACKING_EVENT);
	
	                data.eventStrings = currentEvent.eventInfo.attributes.eventStrings || [];
	                data.eventStrings.push(anaConsts.Event.ATB_FROM_BASKET_LOVE_CAROUSEL);
	
	                Object.assign(currentEvent.eventInfo.attributes.eventStrings, data.eventStrings);
	            });
	
	            break;
	        case anaConsts.CONTEXT.USE_IT_WITH:
	            addBindingMethods(function () {
	                var currentEvent = utils.getMostRecentEvent(anaConsts.LINK_TRACKING_EVENT);
	                currentEvent.eventInfo.attributes.productStrings += '|eVar72=' + anaConsts.CONTEXT.USE_IT_WITH;
	            });
	
	            break;
	        case anaConsts.CONTEXT.BASKET_PRODUCT:
	
	            //Do special things based on which skus are being added to basket
	            if (data.skuList) {
	                var hasFlashSku = function () {
	                    return data.skuList.some(function (item) {
	                        if (item.skuId === skuUtils.IDs.FLASH) {
	                            return true;
	                        } else {
	                            return false;
	                        }
	                    });
	                }();
	
	                if (hasFlashSku) {
	                    addBindingMethods([__webpack_require__(/*! analytics/bindings/pages/product/addFlashAndProductToBasket */ 195)]);
	                }
	            } else {
	                addBindingMethods(function () {
	                    var currentEvent = utils.getMostRecentEvent(anaConsts.LINK_TRACKING_EVENT);
	
	                    currentEvent.eventInfo.attributes.productStrings += '|eVar72=' + anaConsts.CONTEXT.BASKET_PRODUCT;
	                });
	            }
	
	            break;
	        case anaConsts.CONTEXT.ROUGE_ENROLL_FLASH:
	
	            addBindingMethods([__webpack_require__(/*! analytics/bindings/pages/product/addFlashAndProductToBasket */ 195)]);
	
	            break;
	        case anaConsts.CONTEXT.ADD_FLASH_BASKET_BANNER:
	            addBindingMethods(function () {
	                var currentEvent = utils.getMostRecentEvent(anaConsts.LINK_TRACKING_EVENT);
	                currentEvent.eventInfo.attributes.actionInfo = anaConsts.CAMPAIGN_STRINGS.ADD_FLASH_IN_BASKET_BANNER;
	                currentEvent.eventInfo.attributes.internalCampaign = anaConsts.CAMPAIGN_STRINGS.ADD_FLASH_IN_BASKET_BANNER;
	                currentEvent.eventInfo.attributes.productStrings += '|eVar72=' + anaConsts.PAGE_NAMES.BASKET;
	            });
	            break;
	        default:
	
	        //Do nothing
	    }
	
	    processEvent.process(anaConsts.LINK_TRACKING_EVENT, { data: data });
	};

/***/ }),
/* 178 */
/*!**********************************************!*\
  !*** ./public_ufe/js/analytics/constants.js ***!
  \**********************************************/
/***/ (function(module, exports) {

	'use strict';
	
	/**
	 * Constants for analytics.
	 * These are not really constants as they are ultimately mutable properties
	 * of an object, but they still serve their purpose of providing an alias
	 * which can be used instead of a string.
	 */
	
	module.exports = function () {
	    var ASYNC_PAGE_LOAD = 'asyncPageLoad';
	    var PAGE_LOAD = 'pageLoadEvent';
	    var PRODUCT_PAGE_LOAD = 'productPageLoad';
	    var LINK_TRACKING_EVENT = 'linkTrackingEvent';
	    var DOUBLE_CLICK_FOOTER = 'doubleClickFooter';
	    var DOUBLE_CLICK_PRODUCT_PAGE = 'doubleClickProductPage';
	
	    /* Quick Look Events */
	    var QUICK_LOOK_LOAD = 'quickLookLoad';
	
	    /* Sign-In Events */
	    var SIGN_IN_MODAL_LOAD = 'signInModalLoad';
	    var SIGN_IN_SUCCESS = 'signInSuccess';
	    var SIGN_IN_PAGE_TYPE_DETAIL = 'sign in';
	
	    /* Registration Events */
	    var REGISTER_MODAL_LOAD = 'registerModalLoad';
	
	    /* End Quick Look Events */
	
	    /* Used for Context */
	    var QUICK_LOOK_MODAL = 'quickLookModal';
	
	    /* SIGNAL (Tag Management System)
	    ** The below constants are needed because Signal does not have find and replace.
	    ** These will be referenced within Signal instead of being called directly so that we can make
	    ** updates here and references will still point to the actual method, value, etc. */
	
	    //This gets populated in loadAnalytics.js, to avoid a circular reference problem.
	    var GET_MOST_RECENT_EVENT = function GET_MOST_RECENT_EVENT() {};
	
	    /* End Signal Constants */
	
	    var PAGE_VARIANTS = {
	        SWATCHES: '1',
	        ONLY_FEW_LEFT: '2',
	        ALTERNATE_IMAGES: '3',
	        HERO_VIDEOS: '4',
	        HOW_TO_USE_TAB: '5',
	        INGREDIENTS_TAB: '6',
	        USE_IT_WITH: '7',
	        EXPLORE_VIDEOS: '8',
	        EXPLORE_ARTICLES: '9',
	        EXPLORE_LOOKS: '10',
	        YOU_MIGHT_ALSO_LIKE: '11',
	        SIMILAR_PRODUCTS: '12',
	        RECENTLY_VIEWED: '13',
	        FIND_IN_A_STORE: '14'
	    };
	
	    var CUSTOMIZABLE_SETS_VARIANTS = {
	        NOT_CUSTOMIZABLE: 0,
	        IS_CUSTOMIZABLE_CHOOSE_FREE_ITEM: '1',
	        IS_CUSTOMIZABLE: '2'
	    };
	
	    var REFERRER_DOMAINS = ['google.', 'bing.', 'a9.', '*, q', 'abacho.', 'ah-ha.', 'alexa.', 'allesklar.', 'wo,words', 'alltheweb.', 'q,query', 'altavista.', 'aol.', 'arianna.', 'query,b1', 'asiaco.', 'query,qry', 'ask.', 'q,ask', 'atlas.', 'austronaut.', 'begriff,suche', 'auyantepui.', 'clave', 'bluewin.', 'qry,q', 'centrum.', 'club-internet.', 'dino-online.', 'dir.com.', 'req', 'dmoz.', 'search', 'dogpile.', 'q,qkw', 'eniro.', 'euroseek.', 'string,query', 'exalead.', 'excite.', 'search,s,qkw', 'findlink.', 'key', 'findwhat.', 'mt', 'fireball.', 'freeserve.', 'gigablast.', 'go2net.', 'general', 'goeureka.', 'key', 'q,as_q,as_epq,as_oq', 'googlesyndication.', 'url', 'greekspider.', 'keywords', 'hotbot.', 'query,mt', 'ilor.', 'iltrovatore.', 'index.nana.co.il.', 'infoseek.', 'qt,q', 'infospace.', 'qkw', 'intuitsearch.', 'iwon.', 'ixquick.', 'jubii.', 'query,soegeord', 'jyxo.', 'kanoodle.', 'kataweb.', 'kvasir.', 'live.', 'looksmart.', 'qt,key,querystring', 'lycos.', 'query,mt,q,qry', 'mamma.', 'metacrawler.', 'q,general,qry', 'msn.', 'q,mt', 'mywebsearch.', 'searchfor', 'mysearch.', 'netex.', 'srchkey,keyword', 'netscape.', 'search,searchstring,query', 'netster.', 'nettavisen.', 'query,q', 'ninemsn.', 'nlsearch.', 'qr', 'nomade.', 'mt,s', 'northernlight.', 'oozap.', 'overture.', 'ozu.', 'passagen.', 'quick.', 'ftxt_query', 'savvy.', 'scrubtheweb.', 'keyword,q', 'www.search.com.', 'searchalot.', 'searchhippo.', 'sensis.', 'find', 'seznam.', 'w', 'soneraplaza.', 'qt', 'splatsearch.', 'searchstring', 'sprinks.', 'terms', 'spray.', 'srch.', 'supereva.', 'teoma.', 'thunderstone.', 'tiscali.ch.', 'key', 'tjohoo.', 'soktext,mt,query', 'track.', 'truesearch.', 'tygo.', 'vinden.', 'virgilio.', 'qs', 'vivisimo.', 'voila.', 'kw', 'walla.', 'wanadoo.', 'fkw', 'web.', 'su', 'webcrawler.', 'qkw,search,searchtext', 'webwatch.', 'findindb', 'wepa.', 'query', 'wisenut.', 'xpsn.', 'kwd', 'ya.', 'yahoo.', 'p,va,vp,vo', 'ynet.', 'zerx.'];
	
	    // The most up-to-date event dictionary is supposed to be under
	    // the following link:
	    // jscs:disable maximumLineLength
	    // https://jira.sephora.com/wiki/pages/viewpage.action
	    // ?spaceKey=ANLYTX&title=SiteCatalyst+Variable+Mapping+and+Reports
	    var Event = {
	
	        INTERNAL_SEARCH: 'event1',
	
	        EMAIL_OPT_IN: 'event6',
	
	        REGISTRATION_WITH_BI: 'event11',
	        REGISTRATION_WITHOUT_BI: 'event12',
	        REGISTRATION_STEP_1: 'event14',
	        REGISTRATION_SUCCESSFUL: 'event15',
	
	        CAPTCHA_ENTERED: 'event39',
	        CAPTCHA_FAILED: 'event65',
	
	        SIGN_IN_SUCCESS: 'event100',
	        SIGN_IN_ATTEMPT: 'event140',
	        SIGN_IN_FAILED: 'event141',
	        UPLOAD_PROFILE_PHOTO: 'event180',
	        EDIT_ABOUT_ME_TEXT: 'event181',
	        PRODUCT_VIEW: 'event24',
	        PRODUCT_PAGE_VIEW: 'event200',
	        PRODUCT_PAGE_COLORIQ_ENABLED: 'event201',
	
	        // TODO: Assign better names to these constants
	        EVENT_4: 'event4',
	        EVENT_17: 'event17',
	        EVENT_27: 'event27',
	        EVENT_28: 'event28',
	        ATB_FROM_BASKET_LOVE_CAROUSEL: 'event36',
	        EVENT_37: 'event37',
	        EVENT_61: 'event61',
	        EVENT_71: 'event71',
	        EVENT_86: 'event86',
	        EVENT_102: 'event102',
	        FLASH_ROUGE_ENROLL: 'event128',
	        SC_VIEW: 'scView',
	        SC_REMOVE: 'scRemove',
	        SC_ADD: 'scAdd',
	
	        ADD_REVIEW_RATE_AND_REVEW: 'event148',
	        ADD_REVIEW_CONFIRMATION: 'event149'
	    };
	
	    var EVENT_NAMES = {
	        ADD_TO_BASKET: 'add_to_basket',
	        ADD_TO_LOVES: 'add_to_loves',
	        REMOVE_FROM_LOVES: 'remove_from_loves',
	        CERTONA_IMPRESSION: 'certona_impression',
	        HERO_VIDEO_CLICK: 'HERO_VIDEO_CLICK'
	    };
	
	    var CONTEXT = {
	        BASKET_PRODUCT: 'product',
	        BASKET_SAMPLES: 'basket_samples',
	        BASKET_REWARDS: 'basket_rewards',
	        BASKET_LOVES: 'basket_loves',
	        USE_IT_WITH: 'use it with',
	        ADD_FLASH_BASKET_BANNER: 'add flash in basket banner',
	        ROUGE_ENROLL_FLASH: 'rouge_enroll_flash'
	    };
	
	    var CAMPAIGN_STRINGS = {
	        ADD_TO_BASKET: 'add-to-basket',
	        ENROLL_IN_FLASH: 'flash basket banner:enroll in flash',
	        ADD_FLASH_IN_BASKET_BANNER: 'flash basket banner:add to basket'
	    };
	
	    var LinkData = {
	        SSI: 'stay signed in',
	        SELECT_SAMPLES: 'basket:select samples:top',
	        SELECT_REWARDS: 'basket:redeem rewards:top',
	        CHECKOT_BUTTON_STANDARD: 'checkout:payment:standard',
	        ENROLL_IN_FLASH: 'Enroll in Flash'
	    };
	
	    var PAGE_NAMES = {
	        HOMEPAGE: 'home page',
	        BASKET: 'basket',
	        LISTS_MAIN: 'lists-main',
	        MY_ACCOUNT: 'my-account',
	        PROFILE: 'my-profile'
	    };
	
	    var PAGE_TYPES = {
	        HOMEPAGE: 'home page',
	        BASKET: 'basket',
	        USER_PROFILE: 'user profile',
	        COMMUNITY_PROFILE: 'cmnty profile',
	        PRODUCT_FINDER: 'productfinder',
	        PRODUCT: 'product'
	    };
	
	    return {
	        ASYNC_PAGE_LOAD: ASYNC_PAGE_LOAD,
	        PAGE_LOAD: PAGE_LOAD,
	        PRODUCT_PAGE_LOAD: PRODUCT_PAGE_LOAD,
	        QUICK_LOOK_LOAD: QUICK_LOOK_LOAD,
	        GET_MOST_RECENT_EVENT: GET_MOST_RECENT_EVENT,
	        LINK_TRACKING_EVENT: LINK_TRACKING_EVENT,
	        DOUBLE_CLICK_FOOTER: DOUBLE_CLICK_FOOTER,
	        DOUBLE_CLICK_PRODUCT_PAGE: DOUBLE_CLICK_PRODUCT_PAGE,
	        SIGN_IN_MODAL_LOAD: SIGN_IN_MODAL_LOAD,
	        SIGN_IN_SUCCESS: SIGN_IN_SUCCESS,
	        SIGN_IN_PAGE_TYPE_DETAIL: SIGN_IN_PAGE_TYPE_DETAIL,
	        REGISTER_MODAL_LOAD: REGISTER_MODAL_LOAD,
	        QUICK_LOOK_MODAL: QUICK_LOOK_MODAL,
	        REFERRER_DOMAINS: REFERRER_DOMAINS,
	        Event: Event,
	        EVENT_NAMES: EVENT_NAMES,
	        CONTEXT: CONTEXT,
	        CAMPAIGN_STRINGS: CAMPAIGN_STRINGS,
	        LinkData: LinkData,
	        PAGE_NAMES: PAGE_NAMES,
	        PAGE_TYPES: PAGE_TYPES,
	        PAGE_VARIANTS: PAGE_VARIANTS,
	        CUSTOMIZABLE_SETS_VARIANTS: CUSTOMIZABLE_SETS_VARIANTS
	    };
	}();

/***/ }),
/* 179 */
/*!******************************************!*\
  !*** ./public_ufe/js/analytics/utils.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	/**
	 * Analytics Utility Functions *
	 *
	 * This module is a property of Sephora.analytics.
	 *
	 * Dependencies: DataLayer.js
	 */
	module.exports = function () {
	    var deepExtend = __webpack_require__(/*! deep-extend */ 180);
	    var cookieUtils = __webpack_require__(/*! utils/Cookies */ 5);
	    var Locale = __webpack_require__(/*! utils/LanguageLocale.js */ 4);
	    var skuUtils = __webpack_require__(/*! utils/Sku */ 185);
	    var analyticsConsts = __webpack_require__(/*! analytics/constants */ 178);
	
	    var methods = {
	
	        /**
	         * Some values should only be added if certain conditons are met when the
	         * next page loads. This function takes a value, runs the appropriate tests
	         * and returns true if that value should be added.
	         * @param  {object} - sourceObj The original object to add verified data to
	         * @param {object} - dataToCheck An object containing values that will be added
	         * if tests are passed.
	         * @return {object} The potentially altered sourceObj that was passed in.
	         */
	        addIfConditionsMet: function addIfConditionsMet(sourceObj, dataToCheck) {
	            var profileInfo = window.digitalData.user[0].profile[0].profileInfo;
	            var events = dataToCheck.events;
	
	            if (events && Array.isArray(events)) {
	                for (var i = 0; i < events.length; i += 1) {
	                    var currentEvent = events[i].trim();
	
	                    //Add events object if it didn't already exist
	                    sourceObj.events = sourceObj.events || [];
	
	                    //Email opt-in
	                    if (currentEvent === 'event6' && profileInfo.biType !== 'non-bi') {
	                        /* TODO: I'm waiting on BE Team to expose something like
	                        ** Sephora.User.emailOptIn so I can check this
	                        ** For now I'm just going to say yes if user is now bi */
	                        sourceObj.events.push(currentEvent);
	                    }
	
	                    //Bi Opt-in
	                    if (currentEvent === 'event11' && profileInfo.biType !== 'non-bi') {
	                        sourceObj.events.push(currentEvent);
	                    }
	
	                    //Captcha was present
	                    if (currentEvent === 'event39' && profileInfo.signInStatus === 'signed in') {
	                        sourceObj.events.push(currentEvent);
	                    }
	                }
	            }
	
	            return sourceObj;
	        },
	
	        /**
	        * Create a new item using the W3C blue print at the specified location.
	        * @param  {string} location - Name of the array at which to add the new item
	        * @param  {string} objToMerge - An object with values to merge into the new item
	        * @return {*} - A reference to the newly created object
	        * Note: This is currently only tested on adding new items to arrays. Consider
	        * whether or not to create a new func for other situations.
	        */
	        addNewItemFromSpec: function addNewItemFromSpec(location, objToMerge) {
	            var newArrayLength;
	            var newItem;
	            var newItemDestination = window.digitalData[location];
	            var specModel = {
	                event: {
	                    eventInfo: {
	                        eventName: '',
	                        eventAction: '',
	                        type: '',
	                        timeStamp: new Date(),
	                        attributes: {
	                            eventStrings: [],
	                            productStrings: []
	                        }
	                    }
	                }
	            };
	
	            newArrayLength = newItemDestination.push(specModel[location]);
	            newItem = newItemDestination[newArrayLength - 1];
	
	            if (objToMerge) {
	                deepExtend(newItem, objToMerge);
	            }
	
	            return newItem;
	        },
	
	        arrayItemsToLowerCase: function arrayItemsToLowerCase(arr) {
	            var len = arr.length;
	            var tempArray = [];
	
	            for (var i = 0; i < len; i++) {
	                if (typeof arr[i] === 'string') {
	                    tempArray[i] = arr[i].toLowerCase();
	                }
	            }
	
	            Object.assign(arr, tempArray);
	        },
	
	        /**
	         * Builds a 5 item long, colon separated string, repeating the last item if needed
	         * @param  {array} strings The strings to use to build the path
	         * @return {string}
	         */
	        buildNavPath: function buildNavPath(strings) {
	            var path = [];
	            var currentString;
	
	            for (var i = 0; i < 5; i += 1) {
	                if (strings[i]) {
	                    currentString = strings[i];
	                }
	
	                path[i] = currentString;
	            }
	
	            return path.join(':').toLowerCase();
	        },
	
	        /**
	         * Takes a name that could come from anywhere and returns the
	         * name that the reporting team wants to see for that page, module, etc.
	         * @param  {string} name - The name to be converted.
	         * @return {string} - The converted name if there was one, or the original argument.
	         */
	        convertName: function convertName(name) {
	            var map;
	
	            map = {
	                homepage: analyticsConsts.PAGE_NAMES.HOMEPAGE,
	                basketpage: analyticsConsts.PAGE_NAMES.BASKET,
	                lists: analyticsConsts.PAGE_NAMES.LISTS_MAIN,
	                profile: analyticsConsts.PAGE_NAMES.PROFILE,
	                beautyinsider: 'my beauty insider:benefits'
	            };
	
	            switch (name) {
	                case 'contentstore':
	                    name = this.convertNameFromMediaID();
	                    break;
	                default:
	            }
	
	            return map[name] || name;
	        },
	
	        /**
	         * Returns the name for content store pages mapped with media id
	         * @returns {string} - Page Name for mediaId
	         */
	        convertNameFromMediaID: function convertNameFromMediaID() {
	            var map = {
	                11000020: 'weekly specials'
	            };
	
	            return map[Sephora.analytics.backendData.mediaId];
	        },
	
	        /**
	         * Takes a type that could come from anywhere and returns the
	         * name that the reporting team wants to see for that page, module, etc.
	         * @param  {string} type - The type to be converted.
	         * @return {string} - The converted type if there was one, or the original argument.
	         */
	        convertType: function convertType(type) {
	            var map = void 0;
	
	            map = {
	                homepage: analyticsConsts.PAGE_TYPES.HOMEPAGE,
	                basketpage: analyticsConsts.PAGE_TYPES.BASKET,
	                richprofile: analyticsConsts.PAGE_TYPES.USER_PROFILE,
	                bihq: analyticsConsts.PAGE_TYPES.USER_PROFILE
	            };
	
	            return map[type] || type;
	        },
	
	        convertAdditionalInfo: function convertAdditionalInfo(info) {
	            var map = {
	                orders: 'recent-orders',
	                addresses: 'saved-addresses',
	                paymentmethods: 'payments-gift-cards',
	                emailpostal: 'email-postal-preferences'
	            };
	
	            return map[info] || info;
	        },
	
	        /**
	         * @param {bool} clear - Whether or not we should delete the item after reading it.
	         * @return {object} - The object stored in the cookie or null.
	         */
	        getPreviousPageData: function getPreviousPageData(clear) {
	            var data = {};
	
	            /* Protect against data that is not formatted as JSON */
	            try {
	                data = JSON.parse(cookieUtils.read('anaNextPageData'));
	
	                //Data must always be an object
	                if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) !== 'object' || data === null) {
	                    data = {};
	                }
	
	                if (data && data.conditionals) {
	                    for (var i = 0; i < data.conditionals.length; i += 1) {
	                        data = this.addIfConditionsMet(data, data.conditionals[i]);
	                    }
	                }
	            } catch (e) {
	                console.log('anaNextPageData was probably not formatted correctly.');
	            }
	
	            /**
	             * Some of legacy pages uses this cookie to set previous page name
	             * instead of using anaNextPageData object.
	             * TODO: remove this workaround when legacy FS is refactored to use the same object
	             * with the SAME DOMAIN
	             */
	            var prevPageName = cookieUtils.read('pPage');
	            if (prevPageName) {
	                data = data || {};
	                data.pageName = prevPageName;
	            }
	
	            if (clear) {
	                cookieUtils.delete('anaNextPageData');
	                if (Sephora.isMobile()) {
	                    cookieUtils.delete('pPage');
	                }
	            }
	
	            return data;
	        },
	
	        /**
	         * Use the event name to find the most recent of that type
	         * @param  {string} eventName The name of the event to look for
	         * @param {object} attributes Optional if need to find more specific event by extra data
	         * attributes of event as a key for lookup
	         * @return {object}           The most recent event object with that event name
	         */
	        getMostRecentEvent: function getMostRecentEvent(eventName) {
	            var attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	            function eventAttributesMatch(eventAttributes, matchAttributes) {
	                for (var matchAttr in matchAttributes) {
	                    if (matchAttributes.hasOwnProperty(matchAttr) && matchAttributes[matchAttr] !== eventAttributes[matchAttr]) {
	                        return false;
	                    }
	                }
	                return true;
	            }
	            if (window && window.digitalData && window.digitalData.event) {
	                //Start at the end
	                var i = window.digitalData.event.length - 1;
	                var savedFallback = '';
	
	                while (i !== -1) {
	                    var eventInfo = window.digitalData.event[i].eventInfo;
	
	                    if (eventInfo.attributes.specificEventName === eventName && eventAttributesMatch(eventInfo.attributes, attributes)) {
	                        return window.digitalData.event[i];
	                    } else if (!savedFallback && eventInfo.eventName === eventName && eventAttributesMatch(eventInfo.attributes, attributes)) {
	                        savedFallback = window.digitalData.event[i];
	                    }
	
	                    i -= 1;
	                }
	
	                //If we haven't already returned by now
	                return savedFallback;
	            } else {
	                return {};
	            }
	        },
	
	        /**
	         * Get the desired property from most recent event based on the parameters sent from Signal.
	         * This is important as it greatly reduces the amount of code that we need in Signal.
	         * @param  {Object} opts An object that may contain a specific event name, or prop name.
	         * @return {*} The value of the property that we need. This will usually be a string, but
	         *             could be an array or object.
	         * Note: opts.pathToProperty will be a string. Ex. 'eventInfo.attributes.actionInfo'
	         */
	        getMostRecentEventProperty: function getMostRecentEventProperty() {
	            var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	            var eventName = this.safelyReadProperty('eventObject.detail.specificEventName', opts) || opts.fallBackEventName;
	
	            return this.safelyReadProperty(opts.pathToProperty, this.getMostRecentEvent(eventName));
	        },
	
	        /**
	         * Fire an event and send data to the Tag Management System
	         * @param  {string} eventName - The name of the event that the TMS is listening for.
	         * @param  {*} eventData - Any data that needs to be sent along to the TMS event handler.
	         */
	        fireEventForTagManager: function fireEventForTagManager(eventName) {
	            var eventData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	            var event = new CustomEvent(eventName, eventData);
	
	            window.dispatchEvent(event);
	        },
	
	        /**
	        * Get the value of a query parameter.
	        * @param  {string} name - The query parameter name.
	        * @param  {string} href - The string to look in.
	        * @return {string}      - The value of the found parameter or empty string.
	        */
	        getQueryParam: function getQueryParam(param, href) {
	            try {
	                var result = '';
	
	                href = href || location.href;
	
	                if (href.indexOf('%20&%20') > 0) {
	                    href = href.replace('%20&%20', 'ampersand');
	                }
	
	                param = param.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
	                result = new RegExp('[\\?&]' + param + '=([^&#]*)').exec(href);
	                return result === null ? '' : param === 'om_mmc' ? decodeURIComponent(result[1]) : decodeURIComponent(result[1].replace(/\+/g, ' '));
	            } catch (e) {
	                console.log('There was a problem with the getQueryParam function.');
	            }
	
	            return '';
	        },
	
	        /**
	         * Remove any undefined items from an object
	         * @param  {object / array} originalObj The original object or array
	         * @return {object / array} The array with no undefined items
	         */
	        removeUndefinedItems: function removeUndefinedItems(originalObj) {
	            var isArray = Array.isArray(originalObj);
	
	            if (isArray) {
	                for (var i = 0, l = originalObj.length; i < l; i++) {
	                    if (originalObj[i] === undefined) {
	                        originalObj.splice(i, 1);
	                    }
	                }
	            } else if (originalObj) {
	                Object.keys(originalObj).forEach(function (key) {
	                    if (originalObj[key] === undefined) {
	                        delete originalObj[key];
	                    }
	                });
	            }
	
	            return originalObj;
	        },
	
	        /**
	        * @param  {array or string} path - Path to the desired value
	        * @param  {obj} start - Optional object with which to start looking up properties on
	        * @return {*} - Whatever value is stored in the desired property or ''.
	        */
	        safelyReadProperty: function safelyReadProperty() {
	            var pathToProperty = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	            var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;
	
	            var currentLocation = start;
	
	            pathToProperty = typeof pathToProperty === 'string' ? pathToProperty.split('.') : pathToProperty;
	
	            var _iteratorNormalCompletion = true;
	            var _didIteratorError = false;
	            var _iteratorError = undefined;
	
	            try {
	                for (var _iterator = pathToProperty[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	                    var currentProp = _step.value;
	
	                    if (typeof currentLocation[currentProp] !== 'undefined') {
	                        currentLocation = currentLocation[currentProp];
	                    } else {
	                        return '';
	                    }
	                }
	            } catch (err) {
	                _didIteratorError = true;
	                _iteratorError = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion && _iterator.return) {
	                        _iterator.return();
	                    }
	                } finally {
	                    if (_didIteratorError) {
	                        throw _iteratorError;
	                    }
	                }
	            }
	
	            return currentLocation;
	        },
	
	        /**
	         * Save data into a cookie that gets read on every page load.
	         * Data objects keys of prop[n], eVar[n] or event strings have
	         * their values added to Adobe's global s object before the next tag fires.
	         * @param  {object} data - The key value pairs that will be saved.
	         */
	        setNextPageData: function setNextPageData(data) {
	            var existingData = this.getPreviousPageData();
	            var mergedData;
	            var key;
	
	            try {
	                if (typeof data === 'string') {
	                    data = JSON.parse(data);
	                }
	
	                mergedData = data;
	
	                if (existingData) {
	                    for (key in data) {
	                        //Merge existing data with this data
	                        if (key === 'events' && Array.isArray(existingData[key])) {
	                            existingData[key] = existingData[key].concat(data[key]);
	                        } else {
	                            existingData[key] = data[key];
	                        }
	                    }
	
	                    mergedData = existingData;
	                }
	
	                data = JSON.stringify(mergedData);
	            } catch (e) {
	                console.log('There was a problem with setNextPageData');
	            }
	
	            cookieUtils.write('anaNextPageData', data);
	            /* set previous pageName for legacy pages */
	            if (mergedData && mergedData.pageName && Sephora.isMobile()) {
	                cookieUtils.write('pPage', mergedData.pageName);
	            }
	        },
	
	        //Build the product string for 1 product.
	        buildSingleProductString: function buildSingleProductString() {
	            var sku = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	            var events = '';
	
	            if (sku.type === skuUtils.skuTypes.SAMPLE) {
	                events += 'event17=1';
	            }
	
	            return ';' + sku.skuId + ';;;' + events + ';eVar26=' + sku.skuId;
	        },
	
	        /**
	         * Builds the products string
	         * @param  {Array} products - An array of products
	         * @returns {String} The built products string
	         */
	        buildProductStrings: function buildProductStrings() {
	            var _this = this;
	
	            var products = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	
	            var productStrings = products.map(function (product) {
	                var sku = product.currentSku || product.sku;
	
	                return !!sku ? _this.buildSingleProductString(sku) : '';
	            });
	
	            return productStrings.join(',');
	        },
	
	        /**
	        * Take a price and use Signal's currency converter to convert to USD.
	        * @param  {string} price - The original price.
	        * @return {string} - The (potentially converted) price.
	        */
	        convertToUSD: function convertToUSD(price) {
	            // Using local require due to circular depedency
	            var userUtils = __webpack_require__(/*! utils/User.js */ 186);
	
	            var currency = Locale.ISO_CURRENCY[userUtils.getShippingCountry().countryCode];
	
	            if (currency !== 'USD') {
	                if (typeof this.safelyReadProperty('BrightTag.Currency.convert') === 'function') {
	                    price = window.BrightTag.Currency.convert(price, currency, 'USD');
	                }
	            }
	
	            return price;
	        },
	
	        getDoubleClickCategory: function getDoubleClickCategory(pixel) {
	            switch (pixel) {
	                case 'footer':
	                    return Sephora.isDesktop() ? 'deskt0' : 'mobil0';
	                case 'basket':
	                    return Sephora.isDesktop() ? 'deskt000' : 'mobil000';
	                default:
	                    return '';
	            }
	        },
	
	
	        /**
	         * In an attempt to keep the digitalData object as slim as possible, this method
	         * allows us to create and populate properties on digitalData ONLY if the value exists.
	         * @param {Obejct} baseObj     The base object that will get the new property.
	         * @param {string} newProp     The key of the property that we are going to set.
	         * @param {*} value            The value of the property that we will set.
	         */
	        setIfPresent: function setIfPresent(baseObj, newProp) {
	            var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
	
	            if (value) {
	                baseObj[newProp] = value;
	            }
	        }
	    }; //End Methods
	
	    return methods;
	}(); //End utilities export

/***/ }),
/* 180 */
/*!******************************************!*\
  !*** ./~/deep-extend/lib/deep-extend.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {/*!
	 * @description Recursive object extending
	 * @author Viacheslav Lotsmanov <lotsmanov89@gmail.com>
	 * @license MIT
	 *
	 * The MIT License (MIT)
	 *
	 * Copyright (c) 2013-2015 Viacheslav Lotsmanov
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy of
	 * this software and associated documentation files (the "Software"), to deal in
	 * the Software without restriction, including without limitation the rights to
	 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
	 * the Software, and to permit persons to whom the Software is furnished to do so,
	 * subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in all
	 * copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
	 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
	 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
	 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
	 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 */
	
	'use strict';
	
	function isSpecificValue(val) {
		return (
			val instanceof Buffer
			|| val instanceof Date
			|| val instanceof RegExp
		) ? true : false;
	}
	
	function cloneSpecificValue(val) {
		if (val instanceof Buffer) {
			var x = new Buffer(val.length);
			val.copy(x);
			return x;
		} else if (val instanceof Date) {
			return new Date(val.getTime());
		} else if (val instanceof RegExp) {
			return new RegExp(val);
		} else {
			throw new Error('Unexpected situation');
		}
	}
	
	/**
	 * Recursive cloning array.
	 */
	function deepCloneArray(arr) {
		var clone = [];
		arr.forEach(function (item, index) {
			if (typeof item === 'object' && item !== null) {
				if (Array.isArray(item)) {
					clone[index] = deepCloneArray(item);
				} else if (isSpecificValue(item)) {
					clone[index] = cloneSpecificValue(item);
				} else {
					clone[index] = deepExtend({}, item);
				}
			} else {
				clone[index] = item;
			}
		});
		return clone;
	}
	
	/**
	 * Extening object that entered in first argument.
	 *
	 * Returns extended object or false if have no target object or incorrect type.
	 *
	 * If you wish to clone source object (without modify it), just use empty new
	 * object as first argument, like this:
	 *   deepExtend({}, yourObj_1, [yourObj_N]);
	 */
	var deepExtend = module.exports = function (/*obj_1, [obj_2], [obj_N]*/) {
		if (arguments.length < 1 || typeof arguments[0] !== 'object') {
			return false;
		}
	
		if (arguments.length < 2) {
			return arguments[0];
		}
	
		var target = arguments[0];
	
		// convert arguments to array and cut off target object
		var args = Array.prototype.slice.call(arguments, 1);
	
		var val, src, clone;
	
		args.forEach(function (obj) {
			// skip argument if it is array or isn't object
			if (typeof obj !== 'object' || Array.isArray(obj)) {
				return;
			}
	
			Object.keys(obj).forEach(function (key) {
				src = target[key]; // source value
				val = obj[key]; // new value
	
				// recursion prevention
				if (val === target) {
					return;
	
				/**
				 * if new value isn't object then just overwrite by new value
				 * instead of extending.
				 */
				} else if (typeof val !== 'object' || val === null) {
					target[key] = val;
					return;
	
				// just clone arrays (and recursive clone objects inside)
				} else if (Array.isArray(val)) {
					target[key] = deepCloneArray(val);
					return;
	
				// custom cloning and overwrite for specific objects
				} else if (isSpecificValue(val)) {
					target[key] = cloneSpecificValue(val);
					return;
	
				// overwrite by new value if source isn't object or array
				} else if (typeof src !== 'object' || src === null || Array.isArray(src)) {
					target[key] = deepExtend({}, val);
					return;
	
				// source value and new value is objects both, extending...
				} else {
					target[key] = deepExtend(src, val);
					return;
				}
			});
		});
	
		return target;
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../buffer/index.js */ 181).Buffer))

/***/ }),
/* 181 */
/*!***************************!*\
  !*** ./~/buffer/index.js ***!
  \***************************/
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
	/* eslint-disable no-proto */
	
	'use strict'
	
	var base64 = __webpack_require__(/*! base64-js */ 182)
	var ieee754 = __webpack_require__(/*! ieee754 */ 183)
	var isArray = __webpack_require__(/*! isarray */ 184)
	
	exports.Buffer = Buffer
	exports.SlowBuffer = SlowBuffer
	exports.INSPECT_MAX_BYTES = 50
	
	/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Use Object implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * Due to various browser bugs, sometimes the Object implementation will be used even
	 * when the browser supports typed arrays.
	 *
	 * Note:
	 *
	 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
	 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
	 *
	 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
	 *
	 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
	 *     incorrect length in some situations.
	
	 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
	 * get the Object implementation, which is slower but behaves correctly.
	 */
	Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
	  ? global.TYPED_ARRAY_SUPPORT
	  : typedArraySupport()
	
	/*
	 * Export kMaxLength after typed array support is determined.
	 */
	exports.kMaxLength = kMaxLength()
	
	function typedArraySupport () {
	  try {
	    var arr = new Uint8Array(1)
	    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
	    return arr.foo() === 42 && // typed array instances can be augmented
	        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
	        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
	  } catch (e) {
	    return false
	  }
	}
	
	function kMaxLength () {
	  return Buffer.TYPED_ARRAY_SUPPORT
	    ? 0x7fffffff
	    : 0x3fffffff
	}
	
	function createBuffer (that, length) {
	  if (kMaxLength() < length) {
	    throw new RangeError('Invalid typed array length')
	  }
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = new Uint8Array(length)
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    if (that === null) {
	      that = new Buffer(length)
	    }
	    that.length = length
	  }
	
	  return that
	}
	
	/**
	 * The Buffer constructor returns instances of `Uint8Array` that have their
	 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
	 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
	 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
	 * returns a single octet.
	 *
	 * The `Uint8Array` prototype remains unmodified.
	 */
	
	function Buffer (arg, encodingOrOffset, length) {
	  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
	    return new Buffer(arg, encodingOrOffset, length)
	  }
	
	  // Common case.
	  if (typeof arg === 'number') {
	    if (typeof encodingOrOffset === 'string') {
	      throw new Error(
	        'If encoding is specified then the first argument must be a string'
	      )
	    }
	    return allocUnsafe(this, arg)
	  }
	  return from(this, arg, encodingOrOffset, length)
	}
	
	Buffer.poolSize = 8192 // not used by this implementation
	
	// TODO: Legacy, not needed anymore. Remove in next major version.
	Buffer._augment = function (arr) {
	  arr.__proto__ = Buffer.prototype
	  return arr
	}
	
	function from (that, value, encodingOrOffset, length) {
	  if (typeof value === 'number') {
	    throw new TypeError('"value" argument must not be a number')
	  }
	
	  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
	    return fromArrayBuffer(that, value, encodingOrOffset, length)
	  }
	
	  if (typeof value === 'string') {
	    return fromString(that, value, encodingOrOffset)
	  }
	
	  return fromObject(that, value)
	}
	
	/**
	 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
	 * if value is a number.
	 * Buffer.from(str[, encoding])
	 * Buffer.from(array)
	 * Buffer.from(buffer)
	 * Buffer.from(arrayBuffer[, byteOffset[, length]])
	 **/
	Buffer.from = function (value, encodingOrOffset, length) {
	  return from(null, value, encodingOrOffset, length)
	}
	
	if (Buffer.TYPED_ARRAY_SUPPORT) {
	  Buffer.prototype.__proto__ = Uint8Array.prototype
	  Buffer.__proto__ = Uint8Array
	  if (typeof Symbol !== 'undefined' && Symbol.species &&
	      Buffer[Symbol.species] === Buffer) {
	    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
	    Object.defineProperty(Buffer, Symbol.species, {
	      value: null,
	      configurable: true
	    })
	  }
	}
	
	function assertSize (size) {
	  if (typeof size !== 'number') {
	    throw new TypeError('"size" argument must be a number')
	  } else if (size < 0) {
	    throw new RangeError('"size" argument must not be negative')
	  }
	}
	
	function alloc (that, size, fill, encoding) {
	  assertSize(size)
	  if (size <= 0) {
	    return createBuffer(that, size)
	  }
	  if (fill !== undefined) {
	    // Only pay attention to encoding if it's a string. This
	    // prevents accidentally sending in a number that would
	    // be interpretted as a start offset.
	    return typeof encoding === 'string'
	      ? createBuffer(that, size).fill(fill, encoding)
	      : createBuffer(that, size).fill(fill)
	  }
	  return createBuffer(that, size)
	}
	
	/**
	 * Creates a new filled Buffer instance.
	 * alloc(size[, fill[, encoding]])
	 **/
	Buffer.alloc = function (size, fill, encoding) {
	  return alloc(null, size, fill, encoding)
	}
	
	function allocUnsafe (that, size) {
	  assertSize(size)
	  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    for (var i = 0; i < size; ++i) {
	      that[i] = 0
	    }
	  }
	  return that
	}
	
	/**
	 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
	 * */
	Buffer.allocUnsafe = function (size) {
	  return allocUnsafe(null, size)
	}
	/**
	 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
	 */
	Buffer.allocUnsafeSlow = function (size) {
	  return allocUnsafe(null, size)
	}
	
	function fromString (that, string, encoding) {
	  if (typeof encoding !== 'string' || encoding === '') {
	    encoding = 'utf8'
	  }
	
	  if (!Buffer.isEncoding(encoding)) {
	    throw new TypeError('"encoding" must be a valid string encoding')
	  }
	
	  var length = byteLength(string, encoding) | 0
	  that = createBuffer(that, length)
	
	  var actual = that.write(string, encoding)
	
	  if (actual !== length) {
	    // Writing a hex string, for example, that contains invalid characters will
	    // cause everything after the first invalid character to be ignored. (e.g.
	    // 'abxxcd' will be treated as 'ab')
	    that = that.slice(0, actual)
	  }
	
	  return that
	}
	
	function fromArrayLike (that, array) {
	  var length = array.length < 0 ? 0 : checked(array.length) | 0
	  that = createBuffer(that, length)
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}
	
	function fromArrayBuffer (that, array, byteOffset, length) {
	  array.byteLength // this throws if `array` is not a valid ArrayBuffer
	
	  if (byteOffset < 0 || array.byteLength < byteOffset) {
	    throw new RangeError('\'offset\' is out of bounds')
	  }
	
	  if (array.byteLength < byteOffset + (length || 0)) {
	    throw new RangeError('\'length\' is out of bounds')
	  }
	
	  if (byteOffset === undefined && length === undefined) {
	    array = new Uint8Array(array)
	  } else if (length === undefined) {
	    array = new Uint8Array(array, byteOffset)
	  } else {
	    array = new Uint8Array(array, byteOffset, length)
	  }
	
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = array
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that = fromArrayLike(that, array)
	  }
	  return that
	}
	
	function fromObject (that, obj) {
	  if (Buffer.isBuffer(obj)) {
	    var len = checked(obj.length) | 0
	    that = createBuffer(that, len)
	
	    if (that.length === 0) {
	      return that
	    }
	
	    obj.copy(that, 0, 0, len)
	    return that
	  }
	
	  if (obj) {
	    if ((typeof ArrayBuffer !== 'undefined' &&
	        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
	      if (typeof obj.length !== 'number' || isnan(obj.length)) {
	        return createBuffer(that, 0)
	      }
	      return fromArrayLike(that, obj)
	    }
	
	    if (obj.type === 'Buffer' && isArray(obj.data)) {
	      return fromArrayLike(that, obj.data)
	    }
	  }
	
	  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
	}
	
	function checked (length) {
	  // Note: cannot use `length < kMaxLength()` here because that fails when
	  // length is NaN (which is otherwise coerced to zero.)
	  if (length >= kMaxLength()) {
	    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
	                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
	  }
	  return length | 0
	}
	
	function SlowBuffer (length) {
	  if (+length != length) { // eslint-disable-line eqeqeq
	    length = 0
	  }
	  return Buffer.alloc(+length)
	}
	
	Buffer.isBuffer = function isBuffer (b) {
	  return !!(b != null && b._isBuffer)
	}
	
	Buffer.compare = function compare (a, b) {
	  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
	    throw new TypeError('Arguments must be Buffers')
	  }
	
	  if (a === b) return 0
	
	  var x = a.length
	  var y = b.length
	
	  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
	    if (a[i] !== b[i]) {
	      x = a[i]
	      y = b[i]
	      break
	    }
	  }
	
	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}
	
	Buffer.isEncoding = function isEncoding (encoding) {
	  switch (String(encoding).toLowerCase()) {
	    case 'hex':
	    case 'utf8':
	    case 'utf-8':
	    case 'ascii':
	    case 'latin1':
	    case 'binary':
	    case 'base64':
	    case 'ucs2':
	    case 'ucs-2':
	    case 'utf16le':
	    case 'utf-16le':
	      return true
	    default:
	      return false
	  }
	}
	
	Buffer.concat = function concat (list, length) {
	  if (!isArray(list)) {
	    throw new TypeError('"list" argument must be an Array of Buffers')
	  }
	
	  if (list.length === 0) {
	    return Buffer.alloc(0)
	  }
	
	  var i
	  if (length === undefined) {
	    length = 0
	    for (i = 0; i < list.length; ++i) {
	      length += list[i].length
	    }
	  }
	
	  var buffer = Buffer.allocUnsafe(length)
	  var pos = 0
	  for (i = 0; i < list.length; ++i) {
	    var buf = list[i]
	    if (!Buffer.isBuffer(buf)) {
	      throw new TypeError('"list" argument must be an Array of Buffers')
	    }
	    buf.copy(buffer, pos)
	    pos += buf.length
	  }
	  return buffer
	}
	
	function byteLength (string, encoding) {
	  if (Buffer.isBuffer(string)) {
	    return string.length
	  }
	  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
	      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
	    return string.byteLength
	  }
	  if (typeof string !== 'string') {
	    string = '' + string
	  }
	
	  var len = string.length
	  if (len === 0) return 0
	
	  // Use a for loop to avoid recursion
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'ascii':
	      case 'latin1':
	      case 'binary':
	        return len
	      case 'utf8':
	      case 'utf-8':
	      case undefined:
	        return utf8ToBytes(string).length
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return len * 2
	      case 'hex':
	        return len >>> 1
	      case 'base64':
	        return base64ToBytes(string).length
	      default:
	        if (loweredCase) return utf8ToBytes(string).length // assume utf8
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	Buffer.byteLength = byteLength
	
	function slowToString (encoding, start, end) {
	  var loweredCase = false
	
	  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
	  // property of a typed array.
	
	  // This behaves neither like String nor Uint8Array in that we set start/end
	  // to their upper/lower bounds if the value passed is out of range.
	  // undefined is handled specially as per ECMA-262 6th Edition,
	  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
	  if (start === undefined || start < 0) {
	    start = 0
	  }
	  // Return early if start > this.length. Done here to prevent potential uint32
	  // coercion fail below.
	  if (start > this.length) {
	    return ''
	  }
	
	  if (end === undefined || end > this.length) {
	    end = this.length
	  }
	
	  if (end <= 0) {
	    return ''
	  }
	
	  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
	  end >>>= 0
	  start >>>= 0
	
	  if (end <= start) {
	    return ''
	  }
	
	  if (!encoding) encoding = 'utf8'
	
	  while (true) {
	    switch (encoding) {
	      case 'hex':
	        return hexSlice(this, start, end)
	
	      case 'utf8':
	      case 'utf-8':
	        return utf8Slice(this, start, end)
	
	      case 'ascii':
	        return asciiSlice(this, start, end)
	
	      case 'latin1':
	      case 'binary':
	        return latin1Slice(this, start, end)
	
	      case 'base64':
	        return base64Slice(this, start, end)
	
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return utf16leSlice(this, start, end)
	
	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = (encoding + '').toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	
	// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
	// Buffer instances.
	Buffer.prototype._isBuffer = true
	
	function swap (b, n, m) {
	  var i = b[n]
	  b[n] = b[m]
	  b[m] = i
	}
	
	Buffer.prototype.swap16 = function swap16 () {
	  var len = this.length
	  if (len % 2 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 16-bits')
	  }
	  for (var i = 0; i < len; i += 2) {
	    swap(this, i, i + 1)
	  }
	  return this
	}
	
	Buffer.prototype.swap32 = function swap32 () {
	  var len = this.length
	  if (len % 4 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 32-bits')
	  }
	  for (var i = 0; i < len; i += 4) {
	    swap(this, i, i + 3)
	    swap(this, i + 1, i + 2)
	  }
	  return this
	}
	
	Buffer.prototype.swap64 = function swap64 () {
	  var len = this.length
	  if (len % 8 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 64-bits')
	  }
	  for (var i = 0; i < len; i += 8) {
	    swap(this, i, i + 7)
	    swap(this, i + 1, i + 6)
	    swap(this, i + 2, i + 5)
	    swap(this, i + 3, i + 4)
	  }
	  return this
	}
	
	Buffer.prototype.toString = function toString () {
	  var length = this.length | 0
	  if (length === 0) return ''
	  if (arguments.length === 0) return utf8Slice(this, 0, length)
	  return slowToString.apply(this, arguments)
	}
	
	Buffer.prototype.equals = function equals (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return true
	  return Buffer.compare(this, b) === 0
	}
	
	Buffer.prototype.inspect = function inspect () {
	  var str = ''
	  var max = exports.INSPECT_MAX_BYTES
	  if (this.length > 0) {
	    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
	    if (this.length > max) str += ' ... '
	  }
	  return '<Buffer ' + str + '>'
	}
	
	Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
	  if (!Buffer.isBuffer(target)) {
	    throw new TypeError('Argument must be a Buffer')
	  }
	
	  if (start === undefined) {
	    start = 0
	  }
	  if (end === undefined) {
	    end = target ? target.length : 0
	  }
	  if (thisStart === undefined) {
	    thisStart = 0
	  }
	  if (thisEnd === undefined) {
	    thisEnd = this.length
	  }
	
	  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
	    throw new RangeError('out of range index')
	  }
	
	  if (thisStart >= thisEnd && start >= end) {
	    return 0
	  }
	  if (thisStart >= thisEnd) {
	    return -1
	  }
	  if (start >= end) {
	    return 1
	  }
	
	  start >>>= 0
	  end >>>= 0
	  thisStart >>>= 0
	  thisEnd >>>= 0
	
	  if (this === target) return 0
	
	  var x = thisEnd - thisStart
	  var y = end - start
	  var len = Math.min(x, y)
	
	  var thisCopy = this.slice(thisStart, thisEnd)
	  var targetCopy = target.slice(start, end)
	
	  for (var i = 0; i < len; ++i) {
	    if (thisCopy[i] !== targetCopy[i]) {
	      x = thisCopy[i]
	      y = targetCopy[i]
	      break
	    }
	  }
	
	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}
	
	// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
	// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
	//
	// Arguments:
	// - buffer - a Buffer to search
	// - val - a string, Buffer, or number
	// - byteOffset - an index into `buffer`; will be clamped to an int32
	// - encoding - an optional encoding, relevant is val is a string
	// - dir - true for indexOf, false for lastIndexOf
	function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
	  // Empty buffer means no match
	  if (buffer.length === 0) return -1
	
	  // Normalize byteOffset
	  if (typeof byteOffset === 'string') {
	    encoding = byteOffset
	    byteOffset = 0
	  } else if (byteOffset > 0x7fffffff) {
	    byteOffset = 0x7fffffff
	  } else if (byteOffset < -0x80000000) {
	    byteOffset = -0x80000000
	  }
	  byteOffset = +byteOffset  // Coerce to Number.
	  if (isNaN(byteOffset)) {
	    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
	    byteOffset = dir ? 0 : (buffer.length - 1)
	  }
	
	  // Normalize byteOffset: negative offsets start from the end of the buffer
	  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
	  if (byteOffset >= buffer.length) {
	    if (dir) return -1
	    else byteOffset = buffer.length - 1
	  } else if (byteOffset < 0) {
	    if (dir) byteOffset = 0
	    else return -1
	  }
	
	  // Normalize val
	  if (typeof val === 'string') {
	    val = Buffer.from(val, encoding)
	  }
	
	  // Finally, search either indexOf (if dir is true) or lastIndexOf
	  if (Buffer.isBuffer(val)) {
	    // Special case: looking for empty string/buffer always fails
	    if (val.length === 0) {
	      return -1
	    }
	    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
	  } else if (typeof val === 'number') {
	    val = val & 0xFF // Search for a byte value [0-255]
	    if (Buffer.TYPED_ARRAY_SUPPORT &&
	        typeof Uint8Array.prototype.indexOf === 'function') {
	      if (dir) {
	        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
	      } else {
	        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
	      }
	    }
	    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
	  }
	
	  throw new TypeError('val must be string, number or Buffer')
	}
	
	function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
	  var indexSize = 1
	  var arrLength = arr.length
	  var valLength = val.length
	
	  if (encoding !== undefined) {
	    encoding = String(encoding).toLowerCase()
	    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
	        encoding === 'utf16le' || encoding === 'utf-16le') {
	      if (arr.length < 2 || val.length < 2) {
	        return -1
	      }
	      indexSize = 2
	      arrLength /= 2
	      valLength /= 2
	      byteOffset /= 2
	    }
	  }
	
	  function read (buf, i) {
	    if (indexSize === 1) {
	      return buf[i]
	    } else {
	      return buf.readUInt16BE(i * indexSize)
	    }
	  }
	
	  var i
	  if (dir) {
	    var foundIndex = -1
	    for (i = byteOffset; i < arrLength; i++) {
	      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
	        if (foundIndex === -1) foundIndex = i
	        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
	      } else {
	        if (foundIndex !== -1) i -= i - foundIndex
	        foundIndex = -1
	      }
	    }
	  } else {
	    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
	    for (i = byteOffset; i >= 0; i--) {
	      var found = true
	      for (var j = 0; j < valLength; j++) {
	        if (read(arr, i + j) !== read(val, j)) {
	          found = false
	          break
	        }
	      }
	      if (found) return i
	    }
	  }
	
	  return -1
	}
	
	Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
	  return this.indexOf(val, byteOffset, encoding) !== -1
	}
	
	Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
	}
	
	Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
	}
	
	function hexWrite (buf, string, offset, length) {
	  offset = Number(offset) || 0
	  var remaining = buf.length - offset
	  if (!length) {
	    length = remaining
	  } else {
	    length = Number(length)
	    if (length > remaining) {
	      length = remaining
	    }
	  }
	
	  // must be an even number of digits
	  var strLen = string.length
	  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')
	
	  if (length > strLen / 2) {
	    length = strLen / 2
	  }
	  for (var i = 0; i < length; ++i) {
	    var parsed = parseInt(string.substr(i * 2, 2), 16)
	    if (isNaN(parsed)) return i
	    buf[offset + i] = parsed
	  }
	  return i
	}
	
	function utf8Write (buf, string, offset, length) {
	  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
	}
	
	function asciiWrite (buf, string, offset, length) {
	  return blitBuffer(asciiToBytes(string), buf, offset, length)
	}
	
	function latin1Write (buf, string, offset, length) {
	  return asciiWrite(buf, string, offset, length)
	}
	
	function base64Write (buf, string, offset, length) {
	  return blitBuffer(base64ToBytes(string), buf, offset, length)
	}
	
	function ucs2Write (buf, string, offset, length) {
	  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
	}
	
	Buffer.prototype.write = function write (string, offset, length, encoding) {
	  // Buffer#write(string)
	  if (offset === undefined) {
	    encoding = 'utf8'
	    length = this.length
	    offset = 0
	  // Buffer#write(string, encoding)
	  } else if (length === undefined && typeof offset === 'string') {
	    encoding = offset
	    length = this.length
	    offset = 0
	  // Buffer#write(string, offset[, length][, encoding])
	  } else if (isFinite(offset)) {
	    offset = offset | 0
	    if (isFinite(length)) {
	      length = length | 0
	      if (encoding === undefined) encoding = 'utf8'
	    } else {
	      encoding = length
	      length = undefined
	    }
	  // legacy write(string, encoding, offset, length) - remove in v0.13
	  } else {
	    throw new Error(
	      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
	    )
	  }
	
	  var remaining = this.length - offset
	  if (length === undefined || length > remaining) length = remaining
	
	  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
	    throw new RangeError('Attempt to write outside buffer bounds')
	  }
	
	  if (!encoding) encoding = 'utf8'
	
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'hex':
	        return hexWrite(this, string, offset, length)
	
	      case 'utf8':
	      case 'utf-8':
	        return utf8Write(this, string, offset, length)
	
	      case 'ascii':
	        return asciiWrite(this, string, offset, length)
	
	      case 'latin1':
	      case 'binary':
	        return latin1Write(this, string, offset, length)
	
	      case 'base64':
	        // Warning: maxLength not taken into account in base64Write
	        return base64Write(this, string, offset, length)
	
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return ucs2Write(this, string, offset, length)
	
	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	
	Buffer.prototype.toJSON = function toJSON () {
	  return {
	    type: 'Buffer',
	    data: Array.prototype.slice.call(this._arr || this, 0)
	  }
	}
	
	function base64Slice (buf, start, end) {
	  if (start === 0 && end === buf.length) {
	    return base64.fromByteArray(buf)
	  } else {
	    return base64.fromByteArray(buf.slice(start, end))
	  }
	}
	
	function utf8Slice (buf, start, end) {
	  end = Math.min(buf.length, end)
	  var res = []
	
	  var i = start
	  while (i < end) {
	    var firstByte = buf[i]
	    var codePoint = null
	    var bytesPerSequence = (firstByte > 0xEF) ? 4
	      : (firstByte > 0xDF) ? 3
	      : (firstByte > 0xBF) ? 2
	      : 1
	
	    if (i + bytesPerSequence <= end) {
	      var secondByte, thirdByte, fourthByte, tempCodePoint
	
	      switch (bytesPerSequence) {
	        case 1:
	          if (firstByte < 0x80) {
	            codePoint = firstByte
	          }
	          break
	        case 2:
	          secondByte = buf[i + 1]
	          if ((secondByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
	            if (tempCodePoint > 0x7F) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 3:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
	            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 4:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          fourthByte = buf[i + 3]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
	            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
	              codePoint = tempCodePoint
	            }
	          }
	      }
	    }
	
	    if (codePoint === null) {
	      // we did not generate a valid codePoint so insert a
	      // replacement char (U+FFFD) and advance only 1 byte
	      codePoint = 0xFFFD
	      bytesPerSequence = 1
	    } else if (codePoint > 0xFFFF) {
	      // encode to utf16 (surrogate pair dance)
	      codePoint -= 0x10000
	      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
	      codePoint = 0xDC00 | codePoint & 0x3FF
	    }
	
	    res.push(codePoint)
	    i += bytesPerSequence
	  }
	
	  return decodeCodePointsArray(res)
	}
	
	// Based on http://stackoverflow.com/a/22747272/680742, the browser with
	// the lowest limit is Chrome, with 0x10000 args.
	// We go 1 magnitude less, for safety
	var MAX_ARGUMENTS_LENGTH = 0x1000
	
	function decodeCodePointsArray (codePoints) {
	  var len = codePoints.length
	  if (len <= MAX_ARGUMENTS_LENGTH) {
	    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
	  }
	
	  // Decode in chunks to avoid "call stack size exceeded".
	  var res = ''
	  var i = 0
	  while (i < len) {
	    res += String.fromCharCode.apply(
	      String,
	      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
	    )
	  }
	  return res
	}
	
	function asciiSlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)
	
	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i] & 0x7F)
	  }
	  return ret
	}
	
	function latin1Slice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)
	
	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i])
	  }
	  return ret
	}
	
	function hexSlice (buf, start, end) {
	  var len = buf.length
	
	  if (!start || start < 0) start = 0
	  if (!end || end < 0 || end > len) end = len
	
	  var out = ''
	  for (var i = start; i < end; ++i) {
	    out += toHex(buf[i])
	  }
	  return out
	}
	
	function utf16leSlice (buf, start, end) {
	  var bytes = buf.slice(start, end)
	  var res = ''
	  for (var i = 0; i < bytes.length; i += 2) {
	    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
	  }
	  return res
	}
	
	Buffer.prototype.slice = function slice (start, end) {
	  var len = this.length
	  start = ~~start
	  end = end === undefined ? len : ~~end
	
	  if (start < 0) {
	    start += len
	    if (start < 0) start = 0
	  } else if (start > len) {
	    start = len
	  }
	
	  if (end < 0) {
	    end += len
	    if (end < 0) end = 0
	  } else if (end > len) {
	    end = len
	  }
	
	  if (end < start) end = start
	
	  var newBuf
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    newBuf = this.subarray(start, end)
	    newBuf.__proto__ = Buffer.prototype
	  } else {
	    var sliceLen = end - start
	    newBuf = new Buffer(sliceLen, undefined)
	    for (var i = 0; i < sliceLen; ++i) {
	      newBuf[i] = this[i + start]
	    }
	  }
	
	  return newBuf
	}
	
	/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */
	function checkOffset (offset, ext, length) {
	  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
	  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
	}
	
	Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	
	  return val
	}
	
	Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    checkOffset(offset, byteLength, this.length)
	  }
	
	  var val = this[offset + --byteLength]
	  var mul = 1
	  while (byteLength > 0 && (mul *= 0x100)) {
	    val += this[offset + --byteLength] * mul
	  }
	
	  return val
	}
	
	Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  return this[offset]
	}
	
	Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return this[offset] | (this[offset + 1] << 8)
	}
	
	Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return (this[offset] << 8) | this[offset + 1]
	}
	
	Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return ((this[offset]) |
	      (this[offset + 1] << 8) |
	      (this[offset + 2] << 16)) +
	      (this[offset + 3] * 0x1000000)
	}
	
	Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset] * 0x1000000) +
	    ((this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    this[offset + 3])
	}
	
	Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	  mul *= 0x80
	
	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)
	
	  return val
	}
	
	Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var i = byteLength
	  var mul = 1
	  var val = this[offset + --i]
	  while (i > 0 && (mul *= 0x100)) {
	    val += this[offset + --i] * mul
	  }
	  mul *= 0x80
	
	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)
	
	  return val
	}
	
	Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  if (!(this[offset] & 0x80)) return (this[offset])
	  return ((0xff - this[offset] + 1) * -1)
	}
	
	Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset] | (this[offset + 1] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}
	
	Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset + 1] | (this[offset] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}
	
	Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset]) |
	    (this[offset + 1] << 8) |
	    (this[offset + 2] << 16) |
	    (this[offset + 3] << 24)
	}
	
	Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset] << 24) |
	    (this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    (this[offset + 3])
	}
	
	Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, true, 23, 4)
	}
	
	Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, false, 23, 4)
	}
	
	Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, true, 52, 8)
	}
	
	Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, false, 52, 8)
	}
	
	function checkInt (buf, value, offset, ext, max, min) {
	  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
	  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	}
	
	Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }
	
	  var mul = 1
	  var i = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }
	
	  var i = byteLength - 1
	  var mul = 1
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  this[offset] = (value & 0xff)
	  return offset + 1
	}
	
	function objectWriteUInt16 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
	    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
	      (littleEndian ? i : 1 - i) * 8
	  }
	}
	
	Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}
	
	Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}
	
	function objectWriteUInt32 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffffffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
	    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
	  }
	}
	
	Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset + 3] = (value >>> 24)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 1] = (value >>> 8)
	    this[offset] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}
	
	Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}
	
	Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)
	
	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }
	
	  var i = 0
	  var mul = 1
	  var sub = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)
	
	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }
	
	  var i = byteLength - 1
	  var mul = 1
	  var sub = 0
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  if (value < 0) value = 0xff + value + 1
	  this[offset] = (value & 0xff)
	  return offset + 1
	}
	
	Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}
	
	Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}
	
	Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 3] = (value >>> 24)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}
	
	Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (value < 0) value = 0xffffffff + value + 1
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}
	
	function checkIEEE754 (buf, value, offset, ext, max, min) {
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	  if (offset < 0) throw new RangeError('Index out of range')
	}
	
	function writeFloat (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 23, 4)
	  return offset + 4
	}
	
	Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, true, noAssert)
	}
	
	Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, false, noAssert)
	}
	
	function writeDouble (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 52, 8)
	  return offset + 8
	}
	
	Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, true, noAssert)
	}
	
	Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, false, noAssert)
	}
	
	// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
	Buffer.prototype.copy = function copy (target, targetStart, start, end) {
	  if (!start) start = 0
	  if (!end && end !== 0) end = this.length
	  if (targetStart >= target.length) targetStart = target.length
	  if (!targetStart) targetStart = 0
	  if (end > 0 && end < start) end = start
	
	  // Copy 0 bytes; we're done
	  if (end === start) return 0
	  if (target.length === 0 || this.length === 0) return 0
	
	  // Fatal error conditions
	  if (targetStart < 0) {
	    throw new RangeError('targetStart out of bounds')
	  }
	  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
	  if (end < 0) throw new RangeError('sourceEnd out of bounds')
	
	  // Are we oob?
	  if (end > this.length) end = this.length
	  if (target.length - targetStart < end - start) {
	    end = target.length - targetStart + start
	  }
	
	  var len = end - start
	  var i
	
	  if (this === target && start < targetStart && targetStart < end) {
	    // descending copy from end
	    for (i = len - 1; i >= 0; --i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
	    // ascending copy from start
	    for (i = 0; i < len; ++i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else {
	    Uint8Array.prototype.set.call(
	      target,
	      this.subarray(start, start + len),
	      targetStart
	    )
	  }
	
	  return len
	}
	
	// Usage:
	//    buffer.fill(number[, offset[, end]])
	//    buffer.fill(buffer[, offset[, end]])
	//    buffer.fill(string[, offset[, end]][, encoding])
	Buffer.prototype.fill = function fill (val, start, end, encoding) {
	  // Handle string cases:
	  if (typeof val === 'string') {
	    if (typeof start === 'string') {
	      encoding = start
	      start = 0
	      end = this.length
	    } else if (typeof end === 'string') {
	      encoding = end
	      end = this.length
	    }
	    if (val.length === 1) {
	      var code = val.charCodeAt(0)
	      if (code < 256) {
	        val = code
	      }
	    }
	    if (encoding !== undefined && typeof encoding !== 'string') {
	      throw new TypeError('encoding must be a string')
	    }
	    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
	      throw new TypeError('Unknown encoding: ' + encoding)
	    }
	  } else if (typeof val === 'number') {
	    val = val & 255
	  }
	
	  // Invalid ranges are not set to a default, so can range check early.
	  if (start < 0 || this.length < start || this.length < end) {
	    throw new RangeError('Out of range index')
	  }
	
	  if (end <= start) {
	    return this
	  }
	
	  start = start >>> 0
	  end = end === undefined ? this.length : end >>> 0
	
	  if (!val) val = 0
	
	  var i
	  if (typeof val === 'number') {
	    for (i = start; i < end; ++i) {
	      this[i] = val
	    }
	  } else {
	    var bytes = Buffer.isBuffer(val)
	      ? val
	      : utf8ToBytes(new Buffer(val, encoding).toString())
	    var len = bytes.length
	    for (i = 0; i < end - start; ++i) {
	      this[i + start] = bytes[i % len]
	    }
	  }
	
	  return this
	}
	
	// HELPER FUNCTIONS
	// ================
	
	var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g
	
	function base64clean (str) {
	  // Node strips out invalid characters like \n and \t from the string, base64-js does not
	  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
	  // Node converts strings with length < 2 to ''
	  if (str.length < 2) return ''
	  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
	  while (str.length % 4 !== 0) {
	    str = str + '='
	  }
	  return str
	}
	
	function stringtrim (str) {
	  if (str.trim) return str.trim()
	  return str.replace(/^\s+|\s+$/g, '')
	}
	
	function toHex (n) {
	  if (n < 16) return '0' + n.toString(16)
	  return n.toString(16)
	}
	
	function utf8ToBytes (string, units) {
	  units = units || Infinity
	  var codePoint
	  var length = string.length
	  var leadSurrogate = null
	  var bytes = []
	
	  for (var i = 0; i < length; ++i) {
	    codePoint = string.charCodeAt(i)
	
	    // is surrogate component
	    if (codePoint > 0xD7FF && codePoint < 0xE000) {
	      // last char was a lead
	      if (!leadSurrogate) {
	        // no lead yet
	        if (codePoint > 0xDBFF) {
	          // unexpected trail
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        } else if (i + 1 === length) {
	          // unpaired lead
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        }
	
	        // valid lead
	        leadSurrogate = codePoint
	
	        continue
	      }
	
	      // 2 leads in a row
	      if (codePoint < 0xDC00) {
	        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	        leadSurrogate = codePoint
	        continue
	      }
	
	      // valid surrogate pair
	      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
	    } else if (leadSurrogate) {
	      // valid bmp char, but last char was a lead
	      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	    }
	
	    leadSurrogate = null
	
	    // encode utf8
	    if (codePoint < 0x80) {
	      if ((units -= 1) < 0) break
	      bytes.push(codePoint)
	    } else if (codePoint < 0x800) {
	      if ((units -= 2) < 0) break
	      bytes.push(
	        codePoint >> 0x6 | 0xC0,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x10000) {
	      if ((units -= 3) < 0) break
	      bytes.push(
	        codePoint >> 0xC | 0xE0,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x110000) {
	      if ((units -= 4) < 0) break
	      bytes.push(
	        codePoint >> 0x12 | 0xF0,
	        codePoint >> 0xC & 0x3F | 0x80,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else {
	      throw new Error('Invalid code point')
	    }
	  }
	
	  return bytes
	}
	
	function asciiToBytes (str) {
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    // Node's code seems to be doing this and not & 0x7F..
	    byteArray.push(str.charCodeAt(i) & 0xFF)
	  }
	  return byteArray
	}
	
	function utf16leToBytes (str, units) {
	  var c, hi, lo
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    if ((units -= 2) < 0) break
	
	    c = str.charCodeAt(i)
	    hi = c >> 8
	    lo = c % 256
	    byteArray.push(lo)
	    byteArray.push(hi)
	  }
	
	  return byteArray
	}
	
	function base64ToBytes (str) {
	  return base64.toByteArray(base64clean(str))
	}
	
	function blitBuffer (src, dst, offset, length) {
	  for (var i = 0; i < length; ++i) {
	    if ((i + offset >= dst.length) || (i >= src.length)) break
	    dst[i + offset] = src[i]
	  }
	  return i
	}
	
	function isnan (val) {
	  return val !== val // eslint-disable-line no-self-compare
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 182 */
/*!******************************!*\
  !*** ./~/base64-js/index.js ***!
  \******************************/
/***/ (function(module, exports) {

	'use strict'
	
	exports.byteLength = byteLength
	exports.toByteArray = toByteArray
	exports.fromByteArray = fromByteArray
	
	var lookup = []
	var revLookup = []
	var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array
	
	var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
	for (var i = 0, len = code.length; i < len; ++i) {
	  lookup[i] = code[i]
	  revLookup[code.charCodeAt(i)] = i
	}
	
	revLookup['-'.charCodeAt(0)] = 62
	revLookup['_'.charCodeAt(0)] = 63
	
	function placeHoldersCount (b64) {
	  var len = b64.length
	  if (len % 4 > 0) {
	    throw new Error('Invalid string. Length must be a multiple of 4')
	  }
	
	  // the number of equal signs (place holders)
	  // if there are two placeholders, than the two characters before it
	  // represent one byte
	  // if there is only one, then the three characters before it represent 2 bytes
	  // this is just a cheap hack to not do indexOf twice
	  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
	}
	
	function byteLength (b64) {
	  // base64 is 4/3 + up to two characters of the original data
	  return (b64.length * 3 / 4) - placeHoldersCount(b64)
	}
	
	function toByteArray (b64) {
	  var i, l, tmp, placeHolders, arr
	  var len = b64.length
	  placeHolders = placeHoldersCount(b64)
	
	  arr = new Arr((len * 3 / 4) - placeHolders)
	
	  // if there are placeholders, only get up to the last complete 4 chars
	  l = placeHolders > 0 ? len - 4 : len
	
	  var L = 0
	
	  for (i = 0; i < l; i += 4) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
	    arr[L++] = (tmp >> 16) & 0xFF
	    arr[L++] = (tmp >> 8) & 0xFF
	    arr[L++] = tmp & 0xFF
	  }
	
	  if (placeHolders === 2) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
	    arr[L++] = tmp & 0xFF
	  } else if (placeHolders === 1) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
	    arr[L++] = (tmp >> 8) & 0xFF
	    arr[L++] = tmp & 0xFF
	  }
	
	  return arr
	}
	
	function tripletToBase64 (num) {
	  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
	}
	
	function encodeChunk (uint8, start, end) {
	  var tmp
	  var output = []
	  for (var i = start; i < end; i += 3) {
	    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
	    output.push(tripletToBase64(tmp))
	  }
	  return output.join('')
	}
	
	function fromByteArray (uint8) {
	  var tmp
	  var len = uint8.length
	  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
	  var output = ''
	  var parts = []
	  var maxChunkLength = 16383 // must be multiple of 3
	
	  // go through the array every three bytes, we'll deal with trailing stuff later
	  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
	    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
	  }
	
	  // pad the end with zeros, but make sure to not forget the extra bytes
	  if (extraBytes === 1) {
	    tmp = uint8[len - 1]
	    output += lookup[tmp >> 2]
	    output += lookup[(tmp << 4) & 0x3F]
	    output += '=='
	  } else if (extraBytes === 2) {
	    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
	    output += lookup[tmp >> 10]
	    output += lookup[(tmp >> 4) & 0x3F]
	    output += lookup[(tmp << 2) & 0x3F]
	    output += '='
	  }
	
	  parts.push(output)
	
	  return parts.join('')
	}


/***/ }),
/* 183 */
/*!****************************!*\
  !*** ./~/ieee754/index.js ***!
  \****************************/
/***/ (function(module, exports) {

	exports.read = function (buffer, offset, isLE, mLen, nBytes) {
	  var e, m
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var nBits = -7
	  var i = isLE ? (nBytes - 1) : 0
	  var d = isLE ? -1 : 1
	  var s = buffer[offset + i]
	
	  i += d
	
	  e = s & ((1 << (-nBits)) - 1)
	  s >>= (-nBits)
	  nBits += eLen
	  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}
	
	  m = e & ((1 << (-nBits)) - 1)
	  e >>= (-nBits)
	  nBits += mLen
	  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}
	
	  if (e === 0) {
	    e = 1 - eBias
	  } else if (e === eMax) {
	    return m ? NaN : ((s ? -1 : 1) * Infinity)
	  } else {
	    m = m + Math.pow(2, mLen)
	    e = e - eBias
	  }
	  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
	}
	
	exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
	  var e, m, c
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
	  var i = isLE ? 0 : (nBytes - 1)
	  var d = isLE ? 1 : -1
	  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0
	
	  value = Math.abs(value)
	
	  if (isNaN(value) || value === Infinity) {
	    m = isNaN(value) ? 1 : 0
	    e = eMax
	  } else {
	    e = Math.floor(Math.log(value) / Math.LN2)
	    if (value * (c = Math.pow(2, -e)) < 1) {
	      e--
	      c *= 2
	    }
	    if (e + eBias >= 1) {
	      value += rt / c
	    } else {
	      value += rt * Math.pow(2, 1 - eBias)
	    }
	    if (value * c >= 2) {
	      e++
	      c /= 2
	    }
	
	    if (e + eBias >= eMax) {
	      m = 0
	      e = eMax
	    } else if (e + eBias >= 1) {
	      m = (value * c - 1) * Math.pow(2, mLen)
	      e = e + eBias
	    } else {
	      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
	      e = 0
	    }
	  }
	
	  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}
	
	  e = (e << mLen) | m
	  eLen += mLen
	  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}
	
	  buffer[offset + i - d] |= s * 128
	}


/***/ }),
/* 184 */
/*!*************************************!*\
  !*** ./~/buffer/~/isarray/index.js ***!
  \*************************************/
/***/ (function(module, exports) {

	var toString = {}.toString;
	
	module.exports = Array.isArray || function (arr) {
	  return toString.call(arr) == '[object Array]';
	};


/***/ }),
/* 185 */
/*!************************************!*\
  !*** ./public_ufe/js/utils/Sku.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var priceRegExp = /\d*\.\d{0,2}/;
	// move this to entities
	// do not use "sku.", since this object should be mixed into sku: Object.assign({}, sku, Sku);
	// use "this."" instead.
	var skuUtil = {
	
	    PARENT_CATEGORY: {
	        FOUNDATION: 'Foundation',
	        CONCEALER: 'Concealer'
	    },
	
	    CUSTOM_SETS_TYPE: {
	        SINGLE_SKU: {
	            YOUR_CHOICES: 'SINGLE_SKU_YOUR_CHOICES',
	            SKU_LIST: 'SINGLE_SKU_SKU_LIST'
	        },
	        GROUPED_SKU: {
	            YOUR_CHOICES: 'GROUPED_SKU_YOUR_CHOICES',
	            SKU_LIST: 'GROUPED_SKU_SKU_LIST'
	        },
	        UNKNOWN_SKU: {
	            YOUR_CHOICES: 'UNKNOWN_SKU_YOUR_CHOICES',
	            SKU_LIST: 'UNKNOWN_SKU_SKU_LIST'
	        }
	    },
	
	    skuSwatchType: {
	        TEXT: 'Text',
	        IMAGE: 'Image',
	        SIZE: 'Size',
	        NONE: 'None'
	    },
	
	    skuVariationType: {
	        COLOR: 'Color',
	        SIZE: 'Size',
	        CONCENTRATION: 'Concentration',
	        FORMULATION: 'Formulation',
	        SIZE_CONCENTRATION_FORMULATION: 'Size + Concentration + Formulation',
	        SIZE_CONCENTRATION: 'Size + Concentration',
	        SCENT: 'Scent',
	        TYPE: 'Type',
	        NONE: 'None'
	    },
	
	    //Reward is not a standard sku.type supported by API,
	    //but we need it within this list of Constants
	    skuTypes: {
	        STANDARD: 'standard',
	        SAMPLE: 'sample',
	        GWP: 'gwp',
	        EGC: 'e-certificate',
	        GC: 'gift card',
	        BIRTHDAY_GIFT: 'birthday gift',
	        ROUGE_BIRTHDAY_GIFT: 'Rouge Welcome Kit',
	        WELCOME_KIT: 'welcome kit',
	        FLASH: 'flash sku',
	        PLAYBOX: 'playbox',
	        SUBSCRIPTION: 'subscription',
	        REWARD: 'reward' // doesn't exist in API
	    },
	
	    biExclusiveLevels: {
	        NONE: 'none',
	        BI: 'BI',
	        VIB: 'VIB',
	        ROUGE: 'Rouge'
	    },
	
	    IDs: {
	        FLASH: '1530070',
	        GC: '00050'
	    },
	
	    skuDefaults: { quantity: 10 },
	
	    flashProdId: 'P379518',
	    SAMPLE_PRODUCT_ID: 'P370205',
	
	    // CHANEL_BRAND_ID = 1065
	    BRANDS_WIHOUT_UGC_CONTENT: [1065],
	
	    MINIMUM_PRICE_FOR_FREE_SHIPPING: 50,
	
	    productUrl: function productUrl(product) {
	        var sku = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : product;
	
	        var url = null;
	
	        if (sku.targetUrl.indexOf('skuId') === -1) {
	            url = product.targetUrl + '?skuId=' + sku.skuId;
	        } else if (product && sku) {
	            url = sku.targetUrl;
	        }
	
	        return url;
	    },
	
	    isFlash: function isFlash(sku) {
	        return !!sku.type && sku.type.toLowerCase() === this.skuTypes.FLASH;
	    },
	
	    isSubscription: function isSubscription(sku) {
	        return this.skuTypes.SUBSCRIPTION === sku.type.toLowerCase();
	    },
	
	    isShowEmailMeWhenBackInStore: function isShowEmailMeWhenBackInStore(sku) {
	        return sku.isWithBackInStockTreatment && (sku.actionFlags.backInStockReminderStatus === 'inactive' || sku.actionFlags.backInStockReminderStatus === 'active');
	    },
	
	    getEmailMeText: function getEmailMeText(sku) {
	        var CTAText = void 0;
	        if (sku.actionFlags && sku.actionFlags.backInStockReminderStatus === 'inactive') {
	            var skuType = this.getProductType(sku);
	            var isPlay = skuType === this.skuTypes.SUBSCRIPTION;
	            CTAText = 'Email When ' + (isPlay ? 'Available' : 'In Stock');
	        } else if (sku.actionFlags && sku.actionFlags.backInStockReminderStatus === 'active') {
	            CTAText = 'Remove Reminder';
	        }
	
	        return CTAText;
	    },
	
	    isGiftCard: function isGiftCard(sku) {
	        return sku.type.toLowerCase() === this.skuTypes.GC;
	    },
	
	    isSale: function isSale(sku) {
	        return sku.salePrice && !!sku.salePrice && sku.salePrice !== sku.listPrice;
	    },
	
	    isGwp: function isGwp(sku) {
	        return this.skuTypes.GWP === sku.type.toLowerCase();
	    },
	
	    isBirthdayGift: function isBirthdayGift(sku) {
	        return sku.biType && (sku.biType.toLowerCase() === this.skuTypes.BIRTHDAY_GIFT || sku.biType.toLowerCase() === this.skuTypes.ROUGE_BIRTHDAY_GIFT);
	    },
	
	    isSample: function isSample(sku) {
	        return this.skuTypes.SAMPLE === sku.type.toLowerCase();
	    },
	
	    isBiReward: function isBiReward(sku) {
	        // TODO: double check existance of 'none' case biType new fetchProduct API response
	        return !!sku.biType && sku.biType.toLowerCase() !== 'none';
	    },
	
	    isBiRewardGwpSample: function isBiRewardGwpSample(sku) {
	        return this.isBiReward(sku) || this.isGwp(sku) || this.isSample(sku);
	    },
	
	    isRewardDisabled: function isRewardDisabled(sku) {
	        var userUtils = __webpack_require__(/*! ./User */ 186);
	        var basketUtils = __webpack_require__(/*! ./Basket */ 190);
	
	        //if sku.isEligible value is anything different than false it'll be true. i.e. undefined
	        var isEligible = !!sku.isEligible;
	        return userUtils.isAnonymous() || !userUtils.isRewardEligible(sku) || !isEligible || this.isWelcomeKit(sku) && basketUtils.hasWelcomeKit() || this.isBirthdayGift(sku) && basketUtils.hasBirthdayGift();
	    },
	
	    isHardGood: function isHardGood(sku) {
	        // TODO: dadd Play subscription/Flash here if they are not hard good
	        return !this.isWelcomeKit(sku) && !this.isBiReward(sku) && !this.isBirthdayGift(sku) && !this.isGwp(sku) && !this.isSample(sku) && !this.isGiftCard(sku);
	    },
	
	    isProductDisabled: function isProductDisabled(sku) {
	        var userUtils = __webpack_require__(/*! ./User */ 186);
	
	        if (sku.isOutOfStock) {
	            return true;
	        }
	
	        return this.isBiExclusive(sku) && !this.isBiQualify(sku);
	    },
	
	    isBiQualify: function isBiQualify(sku) {
	        var userUtils = __webpack_require__(/*! ./User */ 186);
	
	        if (this.isBiExclusive(sku)) {
	            if (!userUtils.isAnonymous() && userUtils.isBI()) {
	                return userUtils.isBiLevelQualifiedFor(sku);
	            } else {
	                return false;
	            }
	        }
	
	        return false;
	    },
	
	    isWelcomeKit: function isWelcomeKit(sku) {
	        return sku.biType && new RegExp(this.skuTypes.WELCOME_KIT).test(sku.biType.toLowerCase());
	    },
	
	    isBiExclusive: function isBiExclusive(sku) {
	        return !!sku.biExclusiveLevel && sku.biExclusiveLevel !== 'none';
	    },
	
	    isPlayBox: function isPlayBox(sku) {
	        return this.skuTypes.PLAYBOX === sku.type.toLowerCase();
	    },
	
	    isEGiftCard: function isEGiftCard(sku) {
	        return sku.type.toLowerCase() === this.skuTypes.EGC;
	    },
	
	    isStandardProduct: function isStandardProduct(sku) {
	        return sku.type.toLowerCase() === this.skuTypes.STANDARD;
	    },
	
	    isFree: function isFree(sku) {
	        var userUtils = __webpack_require__(/*! utils/User */ 186);
	        return sku.isFree || this.isSample(sku) || this.isWelcomeKit(sku) || this.isFlash(sku) && userUtils.isRouge();
	    },
	
	    isLoveEligible: function isLoveEligible(sku) {
	        if (this.isGwp(sku) || this.isSample(sku) || this.isBiReward(sku) || this.isFlash(sku) || this.isPlayBox(sku) || this.isGiftCard(sku) || this.isEGiftCard(sku)) {
	            return false;
	        }
	
	        return true;
	    },
	
	    isCountryRestricted: function isCountryRestricted(sku) {
	        return sku.actionFlags && sku.actionFlags.isRestrictedCountry;
	    },
	
	    isInBasket: function isInBasket(skuId) {
	        var store = __webpack_require__(/*! Store */ 146);
	        var basket = store.getState().basket;
	        if (basket && basket.items) {
	            return basket.items.filter(function (item) {
	                return item.sku.skuId === skuId ? true : false;
	            }).length > 0;
	        } else {
	            return false;
	        }
	    },
	
	    isInMsgPromoSkuList: function isInMsgPromoSkuList(skuId) {
	        var store = __webpack_require__(/*! Store */ 146);
	        var msgPromoSkuList = store.getState().promo.msgPromosSkuList;
	        return msgPromoSkuList && msgPromoSkuList.filter(function (elem) {
	            return elem === skuId;
	        }).length > 0;
	    },
	
	    isChangeableQuantity: function isChangeableQuantity(sku) {
	        var skuItem = Object.assign({}, sku);
	
	        if (!skuItem.maxPurchaseQuantity) {
	            skuItem.maxPurchaseQuantity = this.skuDefaults.quantity;
	        }
	
	        return !this.isWelcomeKit(skuItem) && !this.isBirthdayGift(skuItem) && !this.isGwp(skuItem) && !this.isSample(skuItem) && !this.isGiftCard(skuItem) && !(skuItem.maxPurchaseQuantity === 1 && this.isBiReward(skuItem));
	    },
	
	    getBiPoints: function getBiPoints(sku) {
	        if (this.isBiReward(sku)) {
	            if (this.isWelcomeKit(sku) || this.isBirthdayGift(sku)) {
	                return 0;
	            } else {
	                return parseInt(/^\d*/.exec(sku.biType)[0]);
	            }
	        } else {
	            return null;
	        }
	    },
	
	    purchasableQuantities: function purchasableQuantities(sku) {
	        var lineItem = __webpack_require__(/*! ./LineItem */ 191);
	        var skuItem = Object.assign({}, sku);
	
	        if (!skuItem.maxPurchaseQuantity) {
	            skuItem.maxPurchaseQuantity = this.skuDefaults.quantity;
	        }
	
	        if (skuItem.isOutOfStock) {
	            return [lineItem.OOS_QTY];
	        }
	
	        if (!this.isChangeableQuantity(skuItem)) {
	            return [1];
	        }
	
	        if (skuItem.maxPurchaseQuantity) {
	            var quantity = [];
	            var counter = 1;
	
	            while (counter <= skuItem.maxPurchaseQuantity) {
	                quantity.push(counter++);
	            }
	
	            return quantity;
	        }
	
	        return null;
	    },
	
	    /**
	     * Please note: always returns string,
	     * it's wrong to expect the number since it can returns value like '10K'
	     * So result shouldn't be comparable with other numbers
	     * @param loveCount
	     * @returns {string}
	     */
	    formatLoveCount: function formatLoveCount(loveCount) {
	        return loveCount > 9999 ? Math.floor(loveCount / 10000) + '0K' : loveCount + '';
	    },
	
	    isSkuLoved: function isSkuLoved(skuId) {
	        var store = __webpack_require__(/*! Store */ 146);
	        var lovesArray = store.getState().loves.shoppingListIds;
	        return lovesArray && lovesArray.filter(function (elem) {
	            return elem === skuId;
	        }).length;
	    },
	
	    isColorIQMatch: function isColorIQMatch(sku) {
	        var userUtils = __webpack_require__(/*! utils/User */ 186);
	        var skinTones = userUtils.getUserSkinTones();
	        return skinTones.length && sku.primarySkinTone === skinTones[0];
	    },
	
	    getProductLovesCount: function getProductLovesCount(product) {
	        var userLoves = 0;
	        if (product.currentSku && this.isSkuLoved(product.currentSku.skuId)) {
	            userLoves++;
	        }
	
	        if (product.regularChildSkus && product.regularChildSkus.length) {
	            for (var x = 0, max = product.regularChildSkus.length; x < max; x++) {
	                if (this.isSkuLoved(product.regularChildSkus[x].skuId) && (!product.currentSku || product.currentSku.skuId !== product.regularChildSkus[x].skuId)) {
	
	                    userLoves++;
	                }
	            }
	        }
	
	        return this.formatLoveCount(product.lovesCount + userLoves);
	    },
	
	    // return correct image according to size
	    getImgSrc: function getImgSrc(imageSize, images) {
	        //check that images object exists so no error occurs
	        if (!images) {
	            images = {};
	        }
	        return images['image' + imageSize] || images.image;
	    },
	
	    getProductType: function getProductType(currentSku) {
	        if (this.isFlash(currentSku)) {
	            return this.skuTypes.FLASH;
	        }
	
	        if (this.isPlayBox(currentSku)) {
	            return this.skuTypes.PLAYBOX;
	        }
	
	        if (this.isBiReward(currentSku)) {
	            return this.skuTypes.REWARD;
	        }
	
	        if (this.isSubscription(currentSku)) {
	            return this.skuTypes.SUBSCRIPTION;
	        }
	
	        return this.skuTypes.STANDARD;
	    },
	
	    getSkuFromProduct: function getSkuFromProduct(product, skuId) {
	        var foundSku = null;
	
	        var _product$regularChild = product.regularChildSkus,
	            regularChildSkus = _product$regularChild === undefined ? [] : _product$regularChild,
	            _product$onSaleChildS = product.onSaleChildSkus,
	            onSaleChildSkus = _product$onSaleChildS === undefined ? [] : _product$onSaleChildS;
	
	
	        var allSkus = regularChildSkus.concat(onSaleChildSkus);
	
	        var foundSkus = allSkus.filter(function (sku) {
	            return sku.skuId === skuId;
	        });
	
	        if (foundSkus.length > 0) {
	            foundSku = foundSkus[0];
	        }
	
	        return foundSku;
	    },
	    getSkuListFromProduct: function getSkuListFromProduct(product) {
	        var _product$regularChild2 = product.regularChildSkus,
	            regularChildSkus = _product$regularChild2 === undefined ? [] : _product$regularChild2,
	            _product$onSaleChildS2 = product.onSaleChildSkus,
	            onSaleChildSkus = _product$onSaleChildS2 === undefined ? [] : _product$onSaleChildS2;
	
	
	        var allSkus = regularChildSkus.concat(onSaleChildSkus);
	        if (!allSkus.length && product.currentSku) {
	            allSkus = [product.currentSku];
	        }
	        return allSkus.map(function (sku) {
	            return sku.skuId;
	        });
	    },
	
	
	    parsePrice: function parsePrice(price) {
	        var parsedPrice = (price || '').match(priceRegExp);
	        return parsedPrice ? parseFloat(parsedPrice[0]) : NaN;
	    },
	
	    isCustomSetsSingleSkuProduct: function isCustomSetsSingleSkuProduct(product) {
	        return product.currentSku && product.currentSku.configurableOptions && product.currentSku.configurableOptions.skuOptions;
	    },
	
	    isCustomSetsGroupedSkuProduct: function isCustomSetsGroupedSkuProduct(product) {
	        return product.currentSku && product.currentSku.configurableOptions && product.currentSku.configurableOptions.groupedSkuOptions;
	    },
	
	    isFragrance: function isFragrance(product, sku) {
	        return (product || sku).variationType === this.skuVariationType.SIZE_CONCENTRATION_FORMULATION;
	    },
	
	    getProductPageData: function getProductPageData() {
	        var productData = null;
	
	        var pidResult = /P\d+$/.exec(Sephora.renderQueryParams.urlPath);
	        if (pidResult) {
	            productData = {
	                productId: pidResult[0]
	            };
	
	            var skuIdResult = /skuId=(\d+)/.exec(location.search);
	            if (skuIdResult) {
	                productData.skuId = skuIdResult[1];
	            }
	        }
	
	        return productData;
	    },
	
	    brandShowUserGeneratedContent: function brandShowUserGeneratedContent(brandId) {
	        return this.BRANDS_WIHOUT_UGC_CONTENT.indexOf(+brandId) === -1;
	    },
	
	    showColorIQOnPPage: function showColorIQOnPPage(product) {
	        var userUtils = __webpack_require__(/*! ./User */ 186);
	        var userSkinTones = userUtils.getUserSkinTones();
	        var hasColorMatch = false;
	        var _product$parentCatego = product.parentCategory,
	            parentCategory = _product$parentCatego === undefined ? {} : _product$parentCatego,
	            _product$regularChild3 = product.regularChildSkus,
	            regularChildSkus = _product$regularChild3 === undefined ? [] : _product$regularChild3;
	
	        var displayName = parentCategory.displayName;
	        if (userSkinTones.length) {
	            hasColorMatch = regularChildSkus.some(function (sku) {
	                return sku.primarySkinTone === userSkinTones[0];
	            });
	        }
	        return (displayName === skuUtil.PARENT_CATEGORY.FOUNDATION || displayName === skuUtil.PARENT_CATEGORY.CONCEALER) && hasColorMatch;
	    },
	
	    getColorIQMatchSku: function getColorIQMatchSku() {
	        var regularChildSkus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	
	        var userUtils = __webpack_require__(/*! ./User */ 186);
	        var skinTones = userUtils.getUserSkinTones();
	
	        var matchSku = false;
	
	        if (regularChildSkus && skinTones.length) {
	            regularChildSkus.some(function (sku) {
	                return sku.primarySkinTone === skinTones[0] ? (matchSku = sku, true) : false;
	            });
	        }
	        return matchSku;
	    },
	
	    showFlashPDP: function showFlashPDP(sku) {
	        var actionFlags = sku.actionFlags,
	            isOutOfStock = sku.isOutOfStock,
	            isHazmat = sku.isHazmat;
	
	
	        if (!isOutOfStock && !isHazmat) {
	            if (actionFlags && actionFlags.showFlashOnPDP) {
	                return !this.isGiftCard(sku) && !this.isSample(sku) && !this.isFlash(sku) && !this.isProductDisabled(sku);
	            }
	        }
	        return false;
	    }
	};
	
	module.exports = skuUtil;

/***/ }),
/* 186 */
/*!*************************************!*\
  !*** ./public_ufe/js/utils/User.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var watch = __webpack_require__(/*! redux-watch */ 187);
	var skuUtils = __webpack_require__(/*! utils/Sku */ 185);
	var cookieUtils = __webpack_require__(/*! utils/Cookies */ 5);
	var Locale = __webpack_require__(/*! utils/LanguageLocale.js */ 4);
	var SHIP_COUNTRY_COOKIE = 'ship_country';
	var SHIP_COUNTRY_FULLNAME_COOKIE = 'ship_country_fullname';
	var helperUtils = __webpack_require__(/*! utils/Helpers */ 189);
	var PROFILE_STATUS = {
	    LOGGED_IN: 4,
	    RECOGNIZED: 2,
	    ANONYMOUS: 0
	};
	
	var userUtils = {
	    PROFILE_STATUS: PROFILE_STATUS,
	    types: {
	        NON_BI: 'NON_BI',
	        BI: 'BI',
	        VIB: 'VIB',
	        ROUGE: 'ROUGE',
	        BI_DOWN: 'BI_DOWN',
	        LOGGED_IN: 'loggedin',
	        RECOGNIZED: 'recognized',
	        UNRECOGNIZED: 'unrecognized',
	        FLASH_AUTO_RENEW: 'Flash-AR'
	    },
	
	    getBiStatus: function getBiStatus() {
	        var store = __webpack_require__(/*! Store */ 146);
	        var user = store.getState().user;
	        return user.beautyInsiderAccount ? user.beautyInsiderAccount.vibSegment : this.types.NON_BI;
	    },
	
	    getBiStatusText: function getBiStatusText(status) {
	        var biStatus = status || this.getBiStatus();
	        switch (biStatus) {
	            case this.types.VIB:
	                return 'VIB';
	            case this.types.ROUGE:
	                return 'VIB Rouge';
	            case this.types.BI:
	                return 'Beauty Insider';
	            default:
	                return this.types.NON_BI;
	        }
	    },
	
	    getProfileId: function getProfileId() {
	        var store = __webpack_require__(/*! Store */ 146);
	        var user = store.getState().user;
	        return user.profileId;
	    },
	
	    getPublicId: function getPublicId() {
	        var store = __webpack_require__(/*! Store */ 146);
	        var user = store.getState().user;
	        return user.publicId;
	    },
	
	    getProfileStatus: function getProfileStatus() {
	        var store = __webpack_require__(/*! Store */ 146);
	        var user = store.getState().user;
	        return user.profileStatus;
	    },
	
	    isFlash: function isFlash() {
	        var store = __webpack_require__(/*! Store */ 146);
	        var user = store.getState().user;
	        return user.isFlash;
	    },
	
	    isFlashAutoRenewed: function isFlashAutoRenewed() {
	        var store = __webpack_require__(/*! Store */ 146);
	        var user = store.getState().user;
	        var userSubscriptions = user.subscriptionPrograms;
	        if (userSubscriptions && userSubscriptions.flash) {
	            if (userSubscriptions.flash.subscriptions && userSubscriptions.flash.subscriptions.length) {
	                var subscription = userSubscriptions.flash.subscriptions[0];
	                return subscription === this.types.FLASH_AUTO_RENEW;
	            }
	        }
	        return false;
	    },
	
	    isBI: function isBI() {
	        return this.getBiStatus() !== this.types.NON_BI;
	    },
	
	    isRouge: function isRouge() {
	        return this.getBiStatus() === this.types.ROUGE;
	    },
	
	    isAnonymous: function isAnonymous() {
	        var store = __webpack_require__(/*! Store */ 146);
	        var user = store.getState().user;
	        return typeof user.profileStatus === 'undefined' || user.profileStatus === PROFILE_STATUS.ANONYMOUS;
	    },
	
	    isSignedIn: function isSignedIn() {
	        var store = __webpack_require__(/*! Store */ 146);
	        return store.getState().user.profileStatus === PROFILE_STATUS.LOGGED_IN;
	    },
	
	    isRecognized: function isRecognized() {
	        var store = __webpack_require__(/*! Store */ 146);
	        return store.getState().user.profileStatus === PROFILE_STATUS.RECOGNIZED;
	    },
	
	    isBiLevelQualifiedFor: function isBiLevelQualifiedFor(sku) {
	        var store = __webpack_require__(/*! Store */ 146);
	        var user = store.getState().user;
	
	        var biTierMatrix = {
	            none: 0,
	            bi: 1,
	            vib: 2,
	            rouge: 3,
	            /*eslint-disable camelcase*/
	            non_bi: 0
	        };
	
	        var skuTier = (sku.biExclusiveLevel || 'none').toLowerCase();
	        var userTier = this.getBiStatus(user).toLowerCase();
	        var isTierMet = biTierMatrix[userTier] >= biTierMatrix[skuTier];
	
	        return isTierMet;
	    },
	
	    isBiPointsBiQualifiedFor: function isBiPointsBiQualifiedFor(sku) {
	        var store = __webpack_require__(/*! Store */ 146);
	        var basket = store.getState().basket;
	        var skuPoints = skuUtils.getBiPoints(sku);
	
	        // bday gift, welcome kit, etc dont require points to be added to cart
	        if (!skuPoints) {
	            return true;
	        } else {
	            return skuPoints <= basket.availableBiPoints - basket.redeemedBiPoints;
	        }
	    },
	
	    isRewardEligible: function isRewardEligible(sku) {
	        //checks sku BI level against users
	        if (!this.isBiLevelQualifiedFor(sku)) {
	            return false;
	        }
	
	        //checks the points of BI user against reward item
	        return this.isBiPointsBiQualifiedFor(sku);
	    },
	
	    //Gets the current logged in user
	    getUser: function getUser() {
	        var store = __webpack_require__(/*! Store */ 146);
	        return new Promise(function (resolve, reject) {
	            var userData = store.getState('user');
	            var userWatch = watch(store.getState, 'user');
	
	            if (userData.user && userData.user.profileId) {
	                resolve(userData.user);
	            } else {
	                // Here, we're acting on a premise that the user can change only
	                // once, i.e. on sign in. The page is supposed to get reloaded
	                // always when user signs out.
	                var unsubscribe = store.subscribe(userWatch(function (user) {
	                    resolve(user);
	                    unsubscribe();
	                }));
	            }
	        });
	    },
	
	    /**
	     * Validates that user state has been set
	     * @returns {Promise}
	     */
	    validateUserStatus: function validateUserStatus() {
	        var store = __webpack_require__(/*! Store */ 146);
	        return new Promise(function (resolve, reject) {
	            var user = store.getState('user').user;
	            var userWatch = watch(store.getState, 'user');
	
	            if (user.profileLocale) {
	                resolve(user);
	            } else {
	                // Here, we're acting on a premise that the user can change only
	                // once, i.e. on sign in. The page is supposed to get reloaded
	                // always when user signs out.
	                var unsubscribe = store.subscribe(userWatch(function (newUser) {
	                    resolve(newUser);
	                    unsubscribe();
	                }));
	            }
	        });
	    },
	
	    /** cleans up the various nested BI personalization information for display purposes.
	      * params: personalizedInformation object from the beautyInsiderAccount object inside of user
	      * returns either cleaned up information or an empty object
	    **/
	    biPersonalInfoDisplayCleanUp: function biPersonalInfoDisplayCleanUp(personalizedInfo) {
	        var personalInfo = Object.assign({}, personalizedInfo);
	        var cherryPickInfo = function cherryPickInfo(objArray) {
	            var newArray = [];
	            objArray.forEach(function (obj) {
	                if (obj.hasOwnProperty('isSelected')) {
	                    newArray.push(obj.displayName);
	                }
	            });
	            if (newArray.length === 1) {
	                return newArray[0];
	            } else if (newArray.length === 0) {
	                return null;
	            } else {
	                return newArray.join(', ');
	            }
	        };
	
	        for (var key in personalInfo) {
	            if (personalInfo.hasOwnProperty(key)) {
	                var newDisplayValue = cherryPickInfo(personalInfo[key]);
	                if (newDisplayValue) {
	                    personalInfo[key] = newDisplayValue;
	                } else {
	                    personalInfo[key] = null;
	                }
	            }
	        }
	
	        return personalInfo;
	    },
	
	    /** if all the keys in the cleaned up bi personal info are empty except for gender
	      * (because gender is always provided upon BI registration as true for female),
	      * indicating that the user has not chosen any personalized information, return true
	    **/
	    isBiPersonalInfoEmpty: function isBiPersonalInfoEmpty(personalInfo) {
	        var isEmpty = true;
	        for (var key in personalInfo) {
	            if (key !== 'gender' && personalInfo[key]) {
	                isEmpty = false;
	            }
	        }
	
	        return isEmpty;
	    },
	
	    //converts number for display with k for thousands and m for millions
	    //param: number
	    formatSocialCount: function formatSocialCount(num) {
	        switch (true) {
	            case num >= 1000000:
	                return helperUtils.decimalFloor(num / 1000000, -1).toString().replace(/\.0$/, '') + 'm';
	            case num >= 1000:
	                return helperUtils.decimalFloor(num / 1000, -1).toString().replace(/\.0$/, '') + 'k';
	            default:
	                return num;
	        }
	    },
	
	    getShippingCountry: function getShippingCountry() {
	        var countryCode = cookieUtils.read(SHIP_COUNTRY_COOKIE) || Locale.getCurrentCountry() || '';
	        return {
	            countryCode: countryCode.toUpperCase(),
	            countryLongName: cookieUtils.read(SHIP_COUNTRY_FULLNAME_COOKIE) || (Locale.getCurrentCountry() === Locale.COUNTRIES.US ? 'United States' : 'Canada')
	        };
	    },
	
	    setShippingCountry: function setShippingCountry(country) {
	        if (country && country.countryCode && country.countryLongName) {
	            cookieUtils.write(SHIP_COUNTRY_COOKIE, country.countryCode);
	            cookieUtils.write(SHIP_COUNTRY_FULLNAME_COOKIE, country.countryLongName);
	        }
	    },
	
	    isSocial: function isSocial() {
	        var store = __webpack_require__(/*! Store */ 146);
	        return !!store.getState().user.nickName;
	    },
	
	    needsSocialReOpt: function needsSocialReOpt() {
	        var store = __webpack_require__(/*! Store */ 146);
	        return !store.getState().user.isSocialEnabled;
	    },
	
	    displayBiStatus: function displayBiStatus(vibSegment) {
	        switch (vibSegment) {
	            case this.types.VIB:
	                return 'VIB';
	            case this.types.ROUGE:
	                return 'ROUGE';
	            default:
	                return 'INSIDER';
	        }
	    },
	
	    getSocialInfo: function getSocialInfo() {
	        var store = __webpack_require__(/*! Store */ 146);
	        var socialInfoWatch = watch(store.getState, 'socialInfo');
	
	        return new Promise(function (resolve, reject) {
	            var lithiumSuccessCheck = function lithiumSuccessCheck(socialInfo) {
	                if (socialInfo.isLithiumSuccessful) {
	                    resolve(socialInfo);
	                } else {
	                    reject();
	                }
	            };
	
	            // Per Hanah Yendler:
	            // 1. Get initial social info from store.
	            // 2. If isLithiumSuccessful flag has not been updated to have
	            // either true or false, subscribe to watch the social info.
	            // 3. Once the value has been added, handle the outcome in
	            // lithiumSuccessCheck.
	            var initialSocialInfo = store.getState().socialInfo;
	            if (initialSocialInfo.isLithiumSuccessful !== null) {
	                lithiumSuccessCheck(initialSocialInfo);
	            } else {
	                var unsubscribe = store.subscribe(socialInfoWatch(function (newSocialInfo) {
	                    unsubscribe();
	                    lithiumSuccessCheck(newSocialInfo);
	                }));
	            }
	        });
	    },
	
	    getUserSkinTones: function getUserSkinTones() {
	        var store = __webpack_require__(/*! Store */ 146);
	        var userSkinTones = [];
	
	        var beautyInsiderAccount = store.getState().user.beautyInsiderAccount;
	
	
	        var skinTones = beautyInsiderAccount ? beautyInsiderAccount.skinTones : [];
	
	        if (skinTones && skinTones.length > 0) {
	            skinTones.forEach(function (tone) {
	                userSkinTones.push(tone.shadeCode);
	            });
	        }
	
	        return userSkinTones;
	    },
	
	    showFlashPDP: function showFlashPDP() {
	        var localUtils = __webpack_require__(/*! utils/LanguageLocale */ 4);
	        var isFlash = this.isFlash() || this.isFlashAutoRenewed();
	        var isCanada = localUtils.isCanada();
	
	        return !this.isAnonymous() ? !isFlash && !isCanada : !isCanada;
	    }
	};
	
	module.exports = userUtils;

/***/ }),
/* 187 */
/*!********************************!*\
  !*** ./~/redux-watch/index.js ***!
  \********************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict'
	var getValue = __webpack_require__(/*! object-path */ 188).get
	
	function defaultCompare (a, b) {
	  return a === b
	}
	
	function watch (getState, objectPath, compare) {
	  compare = compare || defaultCompare
	  var currentValue = getValue(getState(), objectPath)
	  return function w (fn) {
	    return function () {
	      var newValue = getValue(getState(), objectPath)
	      if (!compare(currentValue, newValue)) {
	        var oldValue = currentValue
	        currentValue = newValue
	        fn(newValue, oldValue, objectPath)
	      }
	    }
	  }
	}
	
	module.exports = watch


/***/ }),
/* 188 */
/*!********************************!*\
  !*** ./~/object-path/index.js ***!
  \********************************/
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory){
	  'use strict';
	
	  /*istanbul ignore next:cant test*/
	  if (typeof module === 'object' && typeof module.exports === 'object') {
	    module.exports = factory();
	  } else if (true) {
	    // AMD. Register as an anonymous module.
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else {
	    // Browser globals
	    root.objectPath = factory();
	  }
	})(this, function(){
	  'use strict';
	
	  var
	    toStr = Object.prototype.toString,
	    _hasOwnProperty = Object.prototype.hasOwnProperty;
	
	  function isEmpty(value){
	    if (!value) {
	      return true;
	    }
	    if (isArray(value) && value.length === 0) {
	        return true;
	    } else if (!isString(value)) {
	        for (var i in value) {
	            if (_hasOwnProperty.call(value, i)) {
	                return false;
	            }
	        }
	        return true;
	    }
	    return false;
	  }
	
	  function toString(type){
	    return toStr.call(type);
	  }
	
	  function isNumber(value){
	    return typeof value === 'number' || toString(value) === "[object Number]";
	  }
	
	  function isString(obj){
	    return typeof obj === 'string' || toString(obj) === "[object String]";
	  }
	
	  function isObject(obj){
	    return typeof obj === 'object' && toString(obj) === "[object Object]";
	  }
	
	  function isArray(obj){
	    return typeof obj === 'object' && typeof obj.length === 'number' && toString(obj) === '[object Array]';
	  }
	
	  function isBoolean(obj){
	    return typeof obj === 'boolean' || toString(obj) === '[object Boolean]';
	  }
	
	  function getKey(key){
	    var intKey = parseInt(key);
	    if (intKey.toString() === key) {
	      return intKey;
	    }
	    return key;
	  }
	
	  function set(obj, path, value, doNotReplace){
	    if (isNumber(path)) {
	      path = [path];
	    }
	    if (isEmpty(path)) {
	      return obj;
	    }
	    if (isString(path)) {
	      return set(obj, path.split('.').map(getKey), value, doNotReplace);
	    }
	    var currentPath = path[0];
	
	    if (path.length === 1) {
	      var oldVal = obj[currentPath];
	      if (oldVal === void 0 || !doNotReplace) {
	        obj[currentPath] = value;
	      }
	      return oldVal;
	    }
	
	    if (obj[currentPath] === void 0) {
	      //check if we assume an array
	      if(isNumber(path[1])) {
	        obj[currentPath] = [];
	      } else {
	        obj[currentPath] = {};
	      }
	    }
	
	    return set(obj[currentPath], path.slice(1), value, doNotReplace);
	  }
	
	  function del(obj, path) {
	    if (isNumber(path)) {
	      path = [path];
	    }
	
	    if (isEmpty(obj)) {
	      return void 0;
	    }
	
	    if (isEmpty(path)) {
	      return obj;
	    }
	    if(isString(path)) {
	      return del(obj, path.split('.'));
	    }
	
	    var currentPath = getKey(path[0]);
	    var oldVal = obj[currentPath];
	
	    if(path.length === 1) {
	      if (oldVal !== void 0) {
	        if (isArray(obj)) {
	          obj.splice(currentPath, 1);
	        } else {
	          delete obj[currentPath];
	        }
	      }
	    } else {
	      if (obj[currentPath] !== void 0) {
	        return del(obj[currentPath], path.slice(1));
	      }
	    }
	
	    return obj;
	  }
	
	  var objectPath = function(obj) {
	    return Object.keys(objectPath).reduce(function(proxy, prop) {
	      if (typeof objectPath[prop] === 'function') {
	        proxy[prop] = objectPath[prop].bind(objectPath, obj);
	      }
	
	      return proxy;
	    }, {});
	  };
	
	  objectPath.has = function (obj, path) {
	    if (isEmpty(obj)) {
	      return false;
	    }
	
	    if (isNumber(path)) {
	      path = [path];
	    } else if (isString(path)) {
	      path = path.split('.');
	    }
	
	    if (isEmpty(path) || path.length === 0) {
	      return false;
	    }
	
	    for (var i = 0; i < path.length; i++) {
	      var j = path[i];
	      if ((isObject(obj) || isArray(obj)) && _hasOwnProperty.call(obj, j)) {
	        obj = obj[j];
	      } else {
	        return false;
	      }
	    }
	
	    return true;
	  };
	
	  objectPath.ensureExists = function (obj, path, value){
	    return set(obj, path, value, true);
	  };
	
	  objectPath.set = function (obj, path, value, doNotReplace){
	    return set(obj, path, value, doNotReplace);
	  };
	
	  objectPath.insert = function (obj, path, value, at){
	    var arr = objectPath.get(obj, path);
	    at = ~~at;
	    if (!isArray(arr)) {
	      arr = [];
	      objectPath.set(obj, path, arr);
	    }
	    arr.splice(at, 0, value);
	  };
	
	  objectPath.empty = function(obj, path) {
	    if (isEmpty(path)) {
	      return obj;
	    }
	    if (isEmpty(obj)) {
	      return void 0;
	    }
	
	    var value, i;
	    if (!(value = objectPath.get(obj, path))) {
	      return obj;
	    }
	
	    if (isString(value)) {
	      return objectPath.set(obj, path, '');
	    } else if (isBoolean(value)) {
	      return objectPath.set(obj, path, false);
	    } else if (isNumber(value)) {
	      return objectPath.set(obj, path, 0);
	    } else if (isArray(value)) {
	      value.length = 0;
	    } else if (isObject(value)) {
	      for (i in value) {
	        if (_hasOwnProperty.call(value, i)) {
	          delete value[i];
	        }
	      }
	    } else {
	      return objectPath.set(obj, path, null);
	    }
	  };
	
	  objectPath.push = function (obj, path /*, values */){
	    var arr = objectPath.get(obj, path);
	    if (!isArray(arr)) {
	      arr = [];
	      objectPath.set(obj, path, arr);
	    }
	
	    arr.push.apply(arr, Array.prototype.slice.call(arguments, 2));
	  };
	
	  objectPath.coalesce = function (obj, paths, defaultValue) {
	    var value;
	
	    for (var i = 0, len = paths.length; i < len; i++) {
	      if ((value = objectPath.get(obj, paths[i])) !== void 0) {
	        return value;
	      }
	    }
	
	    return defaultValue;
	  };
	
	  objectPath.get = function (obj, path, defaultValue){
	    if (isNumber(path)) {
	      path = [path];
	    }
	    if (isEmpty(path)) {
	      return obj;
	    }
	    if (isEmpty(obj)) {
	      return defaultValue;
	    }
	    if (isString(path)) {
	      return objectPath.get(obj, path.split('.'), defaultValue);
	    }
	
	    var currentPath = getKey(path[0]);
	
	    if (path.length === 1) {
	      if (obj[currentPath] === void 0) {
	        return defaultValue;
	      }
	      return obj[currentPath];
	    }
	
	    return objectPath.get(obj[currentPath], path.slice(1), defaultValue);
	  };
	
	  objectPath.del = function(obj, path) {
	    return del(obj, path);
	  };
	
	  return objectPath;
	});


/***/ }),
/* 189 */
/*!****************************************!*\
  !*** ./public_ufe/js/utils/Helpers.js ***!
  \****************************************/
/***/ (function(module, exports) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	function isObject(input) {
	    if (!input) {
	        return false;
	    }
	
	    return !Array.isArray(input) && (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object';
	}
	
	/**
	* Decimal adjustment of a number.  Code source:
	* https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/floor
	* @param {String}  type  The type of adjustment.
	* @param {Number}  value The number.
	* @param {Integer} exp   The exponent (the 10 logarithm of the adjustment base).
	* @returns {Number} The adjusted value.
	*/
	function decimalAdjust(type, value, exp) {
	    // If the exp is undefined or zero...
	    if (typeof exp === 'undefined' || +exp === 0) {
	        return Math[type](value);
	    }
	    value = +value;
	    exp = +exp;
	    // If the value is not a number or the exp is not an integer...
	    if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {
	        return NaN;
	    }
	    // Shift
	    value = value.toString().split('e');
	    value = Math[type](+(value[0] + 'e' + (value[1] ? +value[1] - exp : -exp)));
	    // Shift back
	    value = value.toString().split('e');
	    return +(value[0] + 'e' + (value[1] ? +value[1] + exp : exp));
	}
	
	function decimalFloor(value, exp) {
	    return decimalAdjust('floor', value, exp);
	}
	
	module.exports = {
	    isObject: isObject,
	    decimalFloor: decimalFloor
	};

/***/ }),
/* 190 */
/*!***************************************!*\
  !*** ./public_ufe/js/utils/Basket.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var skuUtils = __webpack_require__(/*! utils/Sku */ 185);
	var userUtils = __webpack_require__(/*! utils/User */ 186);
	var Locale = __webpack_require__(/*! utils/LanguageLocale */ 4);
	
	// TODO: Fix this so that we only check for
	// merge basket key after ILLUPH-100297 is resolved on BE
	var MERGE_BASKET_WARNING = {
	    EN: 'Items in your last shopping session have been merged with your existing basket.',
	    FR: 'Les articles sélectionnés pendant votre dernière séance de magasinage ' + 'ont été fusionnés avec votre panier actuel.'
	};
	
	// The minimum points at which a reward is valuable enough to be shipping without a product
	// also being in the order
	var STANDALONE_REWARD_MIN_VALUE = 750;
	
	function getItemByType(type) {
	    var store = __webpack_require__(/*! Store */ 146);
	    var basket = store.getState().basket;
	    var items = (basket.items || []).filter(function (item) {
	        return (item.sku.type || '').toLowerCase() === type;
	    });
	
	    return items.length && items[0];
	}
	
	var Basket = {
	    ADD_TO_BASKET_TYPES: {
	        RED: 'RED',
	        OUTLINE: 'OUTLINE',
	        PRIMARY: 'PRIMARY',
	        MUTED: 'MUTED'
	    },
	
	    PAGE_URL: Sephora.isThirdPartySite ? 'https://www.sephora.com/basket' : '/basket',
	
	    separateItems: function separateItems(newBasket) {
	        var separatedItems = {
	            rewards: [],
	            promos: [],
	            samples: [],
	            products: []
	        };
	
	        newBasket.items && newBasket.items.forEach(function (element) {
	            if (element.sku && skuUtils.isGwp(element.sku)) {
	                separatedItems.promos.push(element);
	            } else if (element.sku && skuUtils.isSample(element.sku)) {
	                separatedItems.samples.push(element);
	            } else if (element.sku && skuUtils.isBiReward(element.sku)) {
	                separatedItems.rewards.push(element);
	            } else {
	                separatedItems.products.push(element);
	            }
	        });
	
	        return Object.assign({}, newBasket, separatedItems);
	    },
	
	    calculateUpdatedBasket: function calculateUpdatedBasket(newBasket) {
	        var store = __webpack_require__(/*! Store */ 146);
	        var basket = store.getState().basket;
	
	        if (basket && Array.isArray(basket.items)) {
	            newBasket.items.forEach(function (item) {
	                var i = void 0;
	                for (i = 0; i < basket.items.length; i++) {
	                    if (basket.items[i].sku.skuId === item.sku.skuId) {
	                        basket.items.splice(i, 1);
	                        break;
	                    }
	                }
	
	                /**
	                 * Always insert new item on the top of the basket items list
	                 */
	                basket.items.unshift(item);
	            });
	            newBasket.items = basket.items;
	        }
	
	        return newBasket;
	    },
	
	    catchItemLevelErrors: function catchItemLevelErrors(result, newBasket) {
	        var store = __webpack_require__(/*! Store */ 146);
	        var basket = newBasket ? newBasket : store.getState().basket;
	        var items = [];
	        if (Array.isArray(basket.items)) {
	            basket.items.forEach(function (item) {
	                if (basket.errors && basket.errors[item.sku.skuId]) {
	                    item.itemLevelMessages = [{
	                        messages: [basket.errors[item.sku.skuId]]
	                    }];
	                    items.push(item);
	                }
	            });
	        }
	        return items.length ? items : undefined;
	    },
	
	    catchItemLevelMessages: function catchItemLevelMessages(basket) {
	        if (!Array.isArray(basket.items)) {
	            return null;
	        }
	        var messages = [];
	        basket.items.forEach(function (item) {
	            if (Array.isArray(item.itemLevelMessages)) {
	                messages.push(item.itemLevelMessages.map(function (itemLevelMessage) {
	                    return itemLevelMessage.messages.join('');
	                }).join(''));
	            }
	        });
	        return messages.length ? messages : undefined;
	    },
	
	    getOrderId: function getOrderId() {
	        var store = __webpack_require__(/*! Store */ 146);
	        var basket = store.getState().basket;
	        return basket.orderId;
	    },
	
	    /**
	     * Note that basket.subtotal factors in promos.  The merchandise total before promos is
	     * in basket.rawSubtotal
	     * @param withCurrency
	     * @returns {*}
	     */
	    getSubtotal: function getSubtotal(withCurrency) {
	        var store = __webpack_require__(/*! Store */ 146);
	        var basket = store.getState().basket;
	        if (withCurrency) {
	            return basket.subtotal;
	        } else {
	            return Number(this.removeCurrency(basket.subtotal));
	        }
	    },
	
	    getSamplesInBasket: function getSamplesInBasket() {
	        var store = __webpack_require__(/*! Store */ 146);
	        var basket = store.getState().basket;
	        var samplesList = [];
	
	        if (basket.items) {
	            samplesList = basket.items.filter(function (item) {
	                return skuUtils.isSample(item.sku);
	            });
	        }
	
	        return samplesList;
	    },
	
	    getGwpPromoInBasket: function getGwpPromoInBasket(newBasket) {
	
	        var store = __webpack_require__(/*! Store */ 146);
	        var basket = typeof newBasket !== 'undefined' ? newBasket : store.getState().basket;
	        var promoList = [];
	
	        if (basket.items) {
	            promoList = basket.items.filter(function (item) {
	                return skuUtils.isGwp(item.sku);
	            });
	        }
	
	        return promoList;
	    },
	
	    getPromoMessage: function getPromoMessage(newBasket) {
	
	        var store = __webpack_require__(/*! Store */ 146);
	        var basket = typeof newBasket !== 'undefined' ? newBasket : store.getState().basket;
	        var promoMessage = null;
	        var discountNoCurrency = basket.discountAmount && Number(this.removeCurrency(basket.discountAmount));
	        var regularPromoApplied = basket.promoMessage && discountNoCurrency > 0 || basket.promoMessage;
	        var skuPromoApplied = basket.promos.length > 0;
	
	        if (skuPromoApplied || regularPromoApplied) {
	            promoMessage = basket.promoMessage;
	        }
	
	        return promoMessage;
	    },
	
	    removeCurrency: function removeCurrency(amount) {
	        var formattedAmount = Number(amount.replace(/[^\d.,-]/g, '')).toFixed(2);
	        return '' + (isNaN(formattedAmount) ? 0 : formattedAmount);
	    },
	
	    getCurrency: function getCurrency(money) {
	        return money.replace(/[\d.,-]/g, '');
	    },
	
	    isEmpty: function isEmpty(newBasket) {
	
	        var store = __webpack_require__(/*! Store */ 146);
	        var basket = newBasket ? newBasket : store.getState().basket;
	
	        return !basket.items || basket.items.length === 0;
	    },
	
	    isMergeBasketWarning: function isMergeBasketWarning(message) {
	        return MERGE_BASKET_WARNING.EN === message || MERGE_BASKET_WARNING.FR === message;
	    },
	
	    getMergeBasketWarning: function getMergeBasketWarning(json) {
	        var mergeBasketWarning = null;
	
	        if (json && Array.isArray(json.warnings)) {
	            for (var i = 0; i < json.warnings.length; i++) {
	                var warning = json.warnings[i];
	
	                if (this.isMergeBasketWarning(warning)) {
	                    mergeBasketWarning = warning;
	                    break;
	                }
	            }
	        }
	
	        return mergeBasketWarning;
	    },
	
	    getEstimatedShipping: function getEstimatedShipping() {
	        var store = __webpack_require__(/*! Store */ 146);
	        var basket = store.getState().basket;
	        if (basket && basket.items) {
	            return this.getSubtotal() >= 50 ? 'FREE' : 'TBD';
	        } else {
	            return 'TBD';
	        }
	    },
	
	    noStandardGoods: function noStandardGoods() {
	        var store = __webpack_require__(/*! Store */ 146);
	        var basket = store.getState().basket;
	        if (basket && basket.items) {
	            var hasStandardGood = basket.items.some(function (item) {
	                return !skuUtils.isBiRewardGwpSample(item.sku);
	            });
	
	            return !hasStandardGood;
	        } else {
	            return true;
	        }
	    },
	
	    hasWelcomeKit: function hasWelcomeKit() {
	        var store = __webpack_require__(/*! Store */ 146);
	        var basket = store.getState().basket;
	        if (basket && basket.items) {
	            return basket.items.filter(function (item) {
	                return skuUtils.isWelcomeKit(item.sku);
	            }).length > 0;
	        } else {
	            return false;
	        }
	    },
	
	    hasBirthdayGift: function hasBirthdayGift() {
	        var store = __webpack_require__(/*! Store */ 146);
	        var basket = store.getState().basket;
	        if (basket && basket.items) {
	            return basket.items.filter(function (item) {
	                return skuUtils.isBirthdayGift(item.sku);
	            }).length > 0;
	        } else {
	            return false;
	        }
	    },
	
	    isHazardous: function isHazardous() {
	        var store = __webpack_require__(/*! Store */ 146);
	        var basket = store.getState().basket;
	        return basket && Array.isArray(basket.items) && !!basket.items.filter(function (item) {
	            return item.sku.isHazmat || item.sku.isProp65;
	        }).length;
	    },
	
	    containsRestrictedItem: function containsRestrictedItem() {
	        var store = __webpack_require__(/*! Store */ 146);
	        var basket = store.getState().basket || { items: [] };
	        return !!basket.items.filter(function (item) {
	            return item.sku.isPaypalRestricted;
	        }).length;
	    },
	
	    isPaypalRestricted: function isPaypalRestricted() {
	        var store = __webpack_require__(/*! Store */ 146);
	        var basket = store.getState().basket || { items: [] };
	        return !basket.items.length || this.containsRestrictedItem() && basket.showPaypalRestrictedMessage;
	    },
	
	    getAvailableBiPoints: function getAvailableBiPoints() {
	        var store = __webpack_require__(/*! Store */ 146);
	        var basket = store.getState().basket;
	        var totalPoints = basket.availableBiPoints - basket.redeemedBiPoints;
	        return basket.availableBiPoints && totalPoints > 0 ? totalPoints : 0;
	    },
	
	    getFlashFromBasket: function getFlashFromBasket() {
	        return getItemByType(skuUtils.skuTypes.FLASH);
	    },
	
	    getGiftCardFromBasket: function getGiftCardFromBasket() {
	        return getItemByType(skuUtils.skuTypes.GC);
	    },
	
	    /**
	     *
	     * @param isCountStandaloneRewardAsProduct - if set to true then if the basket contains a reward
	     * >= 750 points, then the method will return false
	     * @returns {boolean}
	     */
	    isOnlySamplesRewardsInBasket: function isOnlySamplesRewardsInBasket() {
	        var isCountStandaloneRewardAsProduct = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
	
	        var store = __webpack_require__(/*! Store */ 146);
	        var basket = store.getState().basket;
	
	        if (basket && basket.items) {
	            var samplesRewardsInBasket = basket.items.filter(function (item) {
	                return skuUtils.isBiReward(item.sku) && (!isCountStandaloneRewardAsProduct || skuUtils.getBiPoints(item.sku)) < STANDALONE_REWARD_MIN_VALUE || skuUtils.isSample(item.sku);
	            });
	
	            return samplesRewardsInBasket.length === basket.items.length;
	        } else {
	            return false;
	        }
	    },
	
	    filterForEligibleRewards: function filterForEligibleRewards(json) {
	        var filteredBiRewardGroups = {};
	        if (json.biRewardGroups) {
	            for (var group in json.biRewardGroups) {
	                if (Object.prototype.hasOwnProperty.call(json.biRewardGroups, group)) {
	                    var newRewardSkus = json.biRewardGroups[group].filter(function (sku) {
	                        return sku.isEligible;
	                    });
	                    filteredBiRewardGroups[group] = newRewardSkus;
	                }
	            }
	
	            json.biRewardGroups = filteredBiRewardGroups;
	        }
	
	        return json;
	    },
	
	    isOnlyFlashInBasket: function isOnlyFlashInBasket() {
	        var store = __webpack_require__(/*! Store */ 146);
	        var basket = store.getState().basket;
	
	        if (basket && basket.items) {
	            var flashInBasket = basket.items.filter(function (item) {
	                return skuUtils.isFlash(item.sku);
	            });
	
	            return flashInBasket.length === basket.items.length;
	        } else {
	            return false;
	        }
	    },
	
	    /**
	     * return user locale-specific default (0.00) subtotal
	     * @returns {*}
	     */
	    getDefaultSubtotal: function getDefaultSubtotal() {
	        var countryCode = userUtils.getShippingCountry().countryCode;
	
	        return Locale.ISO_CURRENCY[countryCode] + ' 0.00';
	    }
	};
	
	module.exports = Basket;

/***/ }),
/* 191 */
/*!*****************************************!*\
  !*** ./public_ufe/js/utils/LineItem.js ***!
  \*****************************************/
/***/ (function(module, exports) {

	'use strict';
	
	var lineItem = {
	    OOS_QTY: "--"
	};
	
	module.exports = lineItem;

/***/ }),
/* 192 */
/*!****************************************************************************!*\
  !*** ./public_ufe/js/analytics/bindings/pages/all/quickLookInteraction.js ***!
  \****************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(/*! analytics/utils */ 179);
	var analyticsConsts = __webpack_require__(/*! analytics/constants */ 178);
	var deepExtend = __webpack_require__(/*! deep-extend */ 180);
	
	module.exports = function (data) {
	
	    var currentEvent = utils.getMostRecentEvent(analyticsConsts.LINK_TRACKING_EVENT);
	
	    var lastQuickLookEvent = utils.getMostRecentEvent(analyticsConsts.ASYNC_PAGE_LOAD);
	
	    var attributesToAdd = {
	        actionInfo: data.actionInfo,
	        linkName: data.linkName,
	        pageName: lastQuickLookEvent.eventInfo.attributes.pageName,
	        productStrings: lastQuickLookEvent.eventInfo.attributes.productStrings,
	        internalCampaign: null
	    };
	
	    deepExtend(currentEvent, {
	        eventInfo: {
	            attributes: utils.removeUndefinedItems(attributesToAdd)
	        }
	    });
	};

/***/ }),
/* 193 */
/*!****************************************************************************!*\
  !*** ./public_ufe/js/analytics/bindings/pages/basket/addSampleToBasket.js ***!
  \****************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(/*! analytics/utils */ 179);
	var analyticsConsts = __webpack_require__(/*! analytics/constants */ 178);
	var deepExtend = __webpack_require__(/*! deep-extend */ 180);
	
	module.exports = function (data) {
	
	    var currentEvent = utils.getMostRecentEvent(analyticsConsts.LINK_TRACKING_EVENT);
	
	    var existingEventStrings = currentEvent.eventInfo.attributes.eventStrings || [];
	
	    var newEventStrings = [analyticsConsts.Event.EVENT_17, analyticsConsts.Event.EVENT_61];
	
	    if (existingEventStrings.length) {
	        newEventStrings = existingEventStrings.concat(newEventStrings);
	    }
	
	    deepExtend(currentEvent, {
	        eventInfo: {
	            attributes: {
	                previousPage: 'view samples checkout interstitial larger',
	                actionInfo: 'Add Sample To Basket',
	                linkName: 'Add Sample To Basket',
	                eventStrings: newEventStrings
	            }
	        }
	    });
	};

/***/ }),
/* 194 */
/*!****************************************************************************!*\
  !*** ./public_ufe/js/analytics/bindings/pages/basket/addRewardToBasket.js ***!
  \****************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(/*! analytics/utils */ 179);
	var analyticsConsts = __webpack_require__(/*! analytics/constants */ 178);
	var deepExtend = __webpack_require__(/*! deep-extend */ 180);
	var basketUtils = __webpack_require__(/*! utils/Basket */ 190);
	
	module.exports = function (data) {
	
	    var currentEvent = utils.getMostRecentEvent(analyticsConsts.LINK_TRACKING_EVENT);
	
	    deepExtend(currentEvent, {
	        eventInfo: {
	            attributes: {
	                BI_RealTimePointStatus: basketUtils.getAvailableBiPoints(),
	                BI_RewardType: data.sku.biType
	            }
	        }
	    });
	};

/***/ }),
/* 195 */
/*!**************************************************************************************!*\
  !*** ./public_ufe/js/analytics/bindings/pages/product/addFlashAndProductToBasket.js ***!
  \**************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(/*! analytics/utils */ 179);
	var analyticsConsts = __webpack_require__(/*! analytics/constants */ 178);
	var deepExtend = __webpack_require__(/*! deep-extend */ 180);
	var skuUtils = __webpack_require__(/*! utils/Sku */ 185);
	var userUtils = __webpack_require__(/*! utils/User */ 186);
	
	module.exports = function (data) {
	
	    var currentEvent = utils.getMostRecentEvent(analyticsConsts.LINK_TRACKING_EVENT);
	
	    var existingProductString = currentEvent.eventInfo.attributes.productStrings;
	
	    var flashSkuId = skuUtils.IDs.FLASH;
	
	    var newProductString = void 0;
	
	    var internalCampaign = void 0;
	
	    var eventStrings = currentEvent.eventInfo.attributes.eventStrings;
	
	    if (userUtils.getBiStatus() === userUtils.types.ROUGE) {
	        internalCampaign = 'flash product+flash:enroll in flash';
	
	        newProductString = existingProductString.concat('|eVar72=product');
	
	        eventStrings.push(analyticsConsts.Event.FLASH_ROUGE_ENROLL);
	    } else {
	        internalCampaign = 'flash product+flash:add to basket';
	
	        newProductString = existingProductString.concat('|eVar72=product:flash,;' + flashSkuId + ';;;;eVar26=' + flashSkuId + '|eVar72=product:flash');
	    }
	
	    deepExtend(currentEvent, {
	        eventInfo: {
	            attributes: {
	                actionInfo: '',
	                productStrings: newProductString,
	                internalCampaign: internalCampaign,
	                eventStrings: eventStrings
	            }
	        }
	    });
	};

/***/ }),
/* 196 */
/*!******************************************************!*\
  !*** ./public_ufe/js/analytics/getBindingMethods.js ***!
  \******************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = function () {
	    /**
	    * Determine which binding methods we need.
	    * @param  {string} pageType  The current page type
	    * @param  {string} eventName The name of this event
	    * @return {array}  data Additional data to help determine which bindings to use
	    */
	    var getBindingMethods = function getBindingMethods(pageType, eventName) {
	        var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	
	        var methodsToCallOnEvent = [];
	        var anaConsts = __webpack_require__(/*! analytics/constants */ 178);
	
	        pageType = (pageType || '').toLowerCase();
	
	        /* Add binding methods that happen on any page load. Any undesired result
	        ** from this can be overwritten by more specific bindings. */
	        switch (eventName) {
	            case anaConsts.PAGE_LOAD:
	                methodsToCallOnEvent.push(__webpack_require__(/*! analytics/bindings/pages/all/pageLoadEvent */ 197));
	                break;
	            case anaConsts.ASYNC_PAGE_LOAD:
	                methodsToCallOnEvent.push(__webpack_require__(/*! analytics/bindings/pages/all/asyncPageLoadEvent */ 201));
	                break;
	
	            case anaConsts.LINK_TRACKING_EVENT:
	                methodsToCallOnEvent.push(__webpack_require__(/*! analytics/bindings/pages/all/linkTrackingEvent */ 202));
	                break;
	            default:
	                break;
	        }
	
	        //Add any binding methods that were passed in
	        if (data.bindingMethods) {
	            methodsToCallOnEvent = methodsToCallOnEvent.concat(data.bindingMethods);
	        }
	
	        //Add page specific PAGE LOAD bindings and promises
	        if (eventName === anaConsts.PAGE_LOAD) {
	            if (pageType === 'basket/basketpage' || pageType === 'basket') {
	                methodsToCallOnEvent.push(__webpack_require__(/*! analytics/bindings/pages/basket/basketPageLoad */ 203));
	            } else if (pageType === 'product/productpage' || pageType === 'product') {
	                methodsToCallOnEvent.push(__webpack_require__(/*! analytics/bindings/pages/product/productPageLoad */ 205));
	            } else if (pageType === 'reviews' || pageType === 'product/productreviewspage') {
	                methodsToCallOnEvent.push(Sephora.analytics.promises.productDataReady);
	            }
	        }
	
	        return methodsToCallOnEvent;
	    };
	
	    return getBindingMethods;
	}();

/***/ }),
/* 197 */
/*!*********************************************************************!*\
  !*** ./public_ufe/js/analytics/bindings/pages/all/pageLoadEvent.js ***!
  \*********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	* This module is a property of the Sephora.analytics object.
	* Its purpose is to hold methods which process data related
	* to analytics.
	*
	* Dependencies: DataLayer.js
	*/
	var utils = __webpack_require__(/*! analytics/utils */ 179);
	var dateUtils = __webpack_require__(/*! utils/Date */ 198);
	var urlUtils = __webpack_require__(/*! utils/Url */ 2);
	var anaConsts = __webpack_require__(/*! analytics/constants */ 178);
	var deepExtend = __webpack_require__(/*! deep-extend */ 180);
	var langLocaleUtils = __webpack_require__(/*! utils/LanguageLocale */ 4);
	var store = __webpack_require__(/*! Store */ 146);
	var watch = __webpack_require__(/*! redux-watch */ 187);
	
	module.exports = function () {
	    var bindingMethods = __webpack_require__(/*! analytics/bindingMethods/pages/all/generalBindings */ 199);
	    var digitalData = window.digitalData;
	    var now = new Date();
	    var currentUser = store.getState().user;
	
	    /**
	     * These are the bindings that will take place on all pages when the
	     * page load event occurs.
	     */
	    var pageLoadBindings = function pageLoadBindings(data) {
	
	        var basketContents = store.getState().basket;
	
	        var previousPageData = utils.getPreviousPageData(true);
	        /* Used for:
	        ** prop55 - Previous link data
	        ** events - Event strings **/
	        if (previousPageData) {
	            //Merge into exisiting defaults if there was saved data
	            deepExtend(digitalData.page.attributes.previousPageData, previousPageData);
	        }
	
	        //Account - SiteCatalyst :: Account ID
	        digitalData.page.attributes.reportSuiteId = bindingMethods.getReportSuiteId();
	
	        //Channel
	        digitalData.page.pageInfo.sysEnv = bindingMethods.getChannel();
	
	        //s.campaign - Campaign :: Marketing Channel
	        digitalData.page.attributes.campaigns.marketingChannel = bindingMethods.getMarketingChannel(window.location.search, document.referrer) || '';
	
	        //eVar44 - Campaign :: URS :: Channel
	        digitalData.page.attributes.campaigns.ursTrackingCode = bindingMethods.getUrsTrackingCode(window.location.search, document.referrer) || '';
	
	        //Page :: Experience
	        digitalData.page.attributes.experience = Sephora.isDesktop() ? 'web' : 'mobile';
	
	        //Page :: Platform
	        digitalData.page.attributes.platform = bindingMethods.getPlatform(window.navigator && window.navigator.userAgent, Sephora.isMobile());
	
	        //eVar2 - Internal Campaign
	        digitalData.page.attributes.internalCampaign = bindingMethods.getInternalCampaign();
	
	        //prop13 - Country of the page's content
	        digitalData.page.attributes.sephoraPageInfo.contentCountry = 'content:' + Sephora.renderQueryParams.country.toLowerCase();
	
	        //eVar39 - Page :: Day Name
	        digitalData.page.attributes.date.dayName = dateUtils.getDayOfWeek(now);
	
	        //eVar62 - Page :: Language/Locale
	        digitalData.page.attributes.languageLocale = langLocaleUtils.getCurrentCountry() + '-' + langLocaleUtils.getCurrentLanguage();
	
	        //c70 - Page :: Country
	        digitalData.page.pageInfo.country = langLocaleUtils.getCurrentCountry();
	
	        // Get Previous and Current pages events
	        var previousPageEvents = digitalData.page.attributes.previousPageData.events;
	        var currentPageEvents = bindingMethods.getPageEvents(digitalData.page.pageInfo.pageName);
	
	        //Page :: Event Strings
	        digitalData.page.attributes.eventStrings = previousPageEvents.concat(currentPageEvents);
	
	        //Product String :: On-load
	        bindingMethods.setProductStrings(digitalData.page.pageInfo.pageName);
	
	        //prop25 - Page :: Date
	        digitalData.page.attributes.date.localDate = dateUtils.getLocalDate(now);
	
	        /* prop8 - BI Status
	        ** prop9 - ATG ID
	        ** prop27 - Sign In Status */
	        bindingMethods.setUserPropsWithCurrentData();
	
	        var userWatch = watch(store.getState, 'user');
	
	        store.subscribe(userWatch(function () {
	            bindingMethods.setUserPropsWithCurrentData();
	        }));
	
	        // prop36 - Community Profile Id
	        // The nickname of the user whose community page you are viewing
	        Sephora.analytics.utils.setIfPresent(digitalData.page.attributes, 'othersCommunityProfileId', bindingMethods.getPageProfileId(location.href, currentUser) || null);
	
	        //eVar45 - Epsilon Deployment ID
	        digitalData.page.attributes.campaigns.emailHarmonyDeploymentId = urlUtils.getParamValueAsSingleString('emtc2');
	
	        //eVar46 - Harmony Link ID
	        digitalData.page.attributes.campaigns.emailHarmonyLinkId = urlUtils.getParamValueAsSingleString('emlid');
	
	        //eVar47 - Harmony Customer Key
	        digitalData.page.attributes.campaigns.emailHarmonyCustomerKey = urlUtils.getParamValueAsSingleString('emcid');
	
	        //eVar48 - Campaign :: Email Tracking Code
	        digitalData.page.attributes.campaigns.emailTrackingCode = urlUtils.getParamValueAsSingleString('emtc') || 'non-email source';
	
	        //eVar49 - Sephora ATG Id
	        digitalData.page.attributes.campaigns.emailATGID = urlUtils.getParamValueAsSingleString('ematg');
	
	        //eVar80 - Beauty Talk Navigation Info
	        digitalData.page.attributes.previousPageData.beautyTalkNavigationInfo = urlUtils.getParamValueAsSingleString('cmnty-sc');
	
	        digitalData.cart.item = basketContents.items;
	
	        digitalData.cart.attributes.productIds = bindingMethods.getArrayOfPropValuesFromItems(basketContents.items, 'productId');
	
	        digitalData.cart.attributes.skuIds = bindingMethods.getArrayOfPropValuesFromItems(basketContents.items, 'skuId');
	
	        /*
	        ** These bindings need to take place after the above bindings because they
	        ** rely on the data set above.
	        */
	        utils.setNextPageData({
	            pageName: digitalData.page.attributes.sephoraPageInfo.pageName,
	            pageType: digitalData.page.category.pageType
	        });
	
	        /*
	        ** Google Double Click Pixel Bindings
	        */
	
	        // DoubleClick :: Category
	        digitalData.page.category.doubleClickCategory = utils.getDoubleClickCategory('footer');
	    };
	
	    return pageLoadBindings;
	}();

/***/ }),
/* 198 */
/*!*************************************!*\
  !*** ./public_ufe/js/utils/Date.js ***!
  \*************************************/
/***/ (function(module, exports) {

	'use strict';
	
	var SHORTENED_MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
	var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
	
	module.exports = {
	    /**
	     * Get the name of the day of the week.
	     * @param  {object} date JS Date object.
	     * @return {string}      The name of the day in the date object such as 'Monday'
	     */
	    getDayOfWeek: function getDayOfWeek(date) {
	        var days = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];
	        return days[date.getDay()];
	    },
	
	    /**
	     * Gets client date and adjusts to PST
	     * @param  {object} now A JS date object.
	     * @return {string}     The current date converted to YYYY|MM|DD
	     */
	    getLocalDate: function getLocalDate(clientDate) {
	        try {
	            var pstOffset = '-8';
	            var utcDate = clientDate.getTime() + clientDate.getTimezoneOffset() * 60000;
	            var serverDate = new Date(utcDate + 3600000 * pstOffset);
	            var _m = serverDate.getMonth() + 1;
	            var _d = serverDate.getDate();
	
	            return serverDate.getFullYear() + '|' + (_m < 10 ? '0' + _m : _m) + '|' + (_d < 10 ? '0' + _d : _d);
	        } catch (e) {
	            return null;
	        }
	    },
	
	    /**
	     * Gets the month array for drop downs on forms
	     */
	    getMonthArray: function getMonthArray() {
	        return MONTHS;
	    },
	
	    /**
	    * Get numeric month array for drop down on forms
	    */
	    getNumericMonthArray: function getNumericMonthArray() {
	        return ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];
	    },
	
	    /**
	     * Gets the date array for drop downs on forms
	     */
	    getDayArray: function getDayArray() {
	        var daysArray = [];
	
	        for (var i = 1; i <= 31; i++) {
	            daysArray.push(i);
	        }
	
	        return daysArray;
	    },
	
	    /**
	     * Gets the year array for drop downs on forms
	     */
	    getYearArray: function getYearArray() {
	        var yearCeling = new Date().getFullYear() - 13;
	        var yearArray = [];
	
	        for (var i = yearCeling; i >= 1900; i--) {
	            yearArray.push(i);
	        }
	
	        return yearArray;
	    },
	
	    getBiMaxDateString: function getBiMaxDateString() {
	        var validDate = new Date().setFullYear(new Date().getFullYear() - 13);
	        var date = new Date(validDate);
	
	        return date.toISOString().substring(0, 10);
	    },
	
	    getCreditCardExpYears: function getCreditCardExpYears() {
	        var currentYear = new Date().getFullYear();
	        var creditCardExpYears = [];
	
	        for (var i = currentYear; i < currentYear + 12; i++) {
	            creditCardExpYears.push(i);
	        }
	
	        return creditCardExpYears;
	    },
	
	    /**
	    * @param {object} date JS Date object
	    * @return {string} Long data format DD MM YYYY
	    */
	    getLongDate: function getLongDate(date) {
	        return date.getDate() + ' ' + SHORTENED_MONTHS[date.getMonth()] + ' ' + date.getFullYear();
	    },
	
	    /**
	     * Takes a ISO8601 date string and returns a Mon DD YYYY formatted string
	     * @param  {string} iso8601DateString - ISO8601 date string (YYYY-MM-DDTHH:mm:ss.sssZ)
	     * @param  {boolean} addComma=false - should it have a comma before YYYY?
	     * @return {string} Mon DD YYYY or Mon DD, YYYY formatted string
	     */
	    formatDateMDY: function formatDateMDY(iso8601DateString) {
	        var addComma = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	
	        // Safari does not support the ISO8601 date format, so we are getting
	        // the first 10 characters of the string and replacing the dashes for 
	        // slashes to create a data string supported by all browsers (YYYY/MM/DD)
	        // https://stackoverflow.com/questions/4310953/invalid-date-in-safari
	        var dateString = iso8601DateString.slice(0, 10).replace(/-/g, '/');
	        var date = new Date(dateString);
	        var day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();
	        var yearSpace = addComma ? ', ' : ' ';
	        return SHORTENED_MONTHS[date.getMonth()] + ' ' + day + yearSpace + date.getFullYear();
	    },
	
	    /**
	    * @param {string} timestamp string from reservations object
	    * @return {string} HH:MM (am or pm)
	    */
	    getReservationTime: function getReservationTime(timeString) {
	        var time = new Date(timeString);
	
	        //get accurate hours for time zone where reservation is located
	        var splitTime = timeString.split('T');
	        splitTime = splitTime[splitTime.length - 1].split(':');
	        time.setHours(splitTime[0]);
	
	        var timeOfDay = 'am';
	        var hours = time.getHours();
	        var minutes = time.getMinutes();
	
	        // convert from military time
	        if (hours > 12) {
	            hours = hours - 12;
	            timeOfDay = 'pm';
	        }
	
	        //add zero if minutes is less than 10
	        if (minutes < 10) {
	            minutes = '0' + minutes;
	        }
	
	        return hours + ':' + minutes + ' ' + timeOfDay;
	    },
	
	    getPlayBillingDateString: function getPlayBillingDateString(first, last) {
	        var firstDate = new Date(first);
	        var lastDate = new Date(last);
	        var months = this.getNumericMonthArray();
	        var firstDay = firstDate.getDate() < 10 ? '0' + firstDate.getDate() : firstDate.getDate();
	        var lastDay = lastDate.getDate() < 10 ? '0' + lastDate.getDate() : lastDate.getDate();
	        return months[firstDate.getMonth()] + '/' + firstDay + '/' + firstDate.getFullYear() + ' -\n        ' + months[lastDate.getMonth()] + '/' + lastDay + '/' + lastDate.getFullYear();
	    },
	
	    /**
	    * @param {number that correlates to month}
	    * @return {string}
	    * note: can be built out to take longer version of month string and give back shorter version
	    */
	    getShortenedMonth: function getShortenedMonth(month) {
	        var monthNum = parseInt(month);
	        return SHORTENED_MONTHS[monthNum - 1];
	    },
	
	    /**
	    * @param {number that correlates to month}
	    * @return {string}
	    * note: can be built out to take longer version of month string and give back shorter version
	    */
	    getLongMonth: function getLongMonth(month) {
	        var monthNum = parseInt(month);
	        return MONTHS[monthNum - 1];
	    },
	
	    /**
	    * formats time for My Profile according to rules:
	    * if posted <59 minutes, displays '#m ago'
	    * if posted <23.59 hr ago, displays '#h ago'
	    * if posted <30 days ago, displays '#d ago'
	    * if posted >30 days ago, displays 'MM DD, YYYY'
	    * @param date String
	    * @return {string}
	    */
	    formatSocialDate: function formatSocialDate(dateString, defaultToLongDate) {
	        var date = new Date(dateString);
	        var today = new Date();
	        var millisecondsDiff = Math.abs(today - date);
	        var minsDiff = Math.floor(millisecondsDiff / 1000 / 60);
	
	        switch (true) {
	            case minsDiff < 60:
	                return minsDiff + ' m ago';
	            case minsDiff < 60 * 23.59:
	                return Math.floor(minsDiff / 60) + ' h ago';
	            case minsDiff <= 60 * 24 * 30:
	                {
	                    var day = Math.floor(minsDiff / 60 / 24);
	                    return day + ' d ago';
	                }
	
	            case minsDiff > 60 * 24 * 30:
	                return defaultToLongDate ? this.getLongDate(date) : dateString.split(' ').slice(0, 3).join(' ');
	            default:
	                return null;
	        }
	    },
	
	    addRemoveDays: function addRemoveDays(add, date, days) {
	        var result = new Date(date);
	        if (add) {
	            result.setDate(result.getDate() + days);
	        } else {
	            result.setDate(result.getDate() - days);
	        }
	        result.setHours(0, 0, 0, 0);
	        return result;
	    }
	};

/***/ }),
/* 199 */
/*!*****************************************************************************!*\
  !*** ./public_ufe/js/analytics/bindingMethods/pages/all/generalBindings.js ***!
  \*****************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(/*! analytics/utils */ 179);
	var anaConsts = __webpack_require__(/*! analytics/constants */ 178);
	var urlUtils = __webpack_require__(/*! utils/Url */ 2);
	var store = __webpack_require__(/*! store/Store */ 146);
	
	module.exports = function () {
	    //All Pages Binding Methods
	    return {
	
	        getATGID: function getATGID(user) {
	            return user.profileId || '';
	        },
	
	        getProfileStatus: function getProfileStatus(user) {
	            return user.profileStatus || 0;
	        },
	
	        getWebAnalyticsCipher: function getWebAnalyticsCipher(user) {
	            return user.webAnalyticsCipher || '';
	        },
	
	        getWebAnalyticsHash: function getWebAnalyticsHash(user) {
	            return user.webAnalyticsHash || '';
	        },
	
	        getTimeTradeBIStatus: function getTimeTradeBIStatus(user) {
	            return user.timeTradeBiStatus || '';
	        },
	
	        getBiStatus: function getBiStatus(user) {
	            var beautyInsiderAccount = user.beautyInsiderAccount || {};
	            return (beautyInsiderAccount.vibSegment || 'non-bi').toLowerCase();
	        },
	
	        getBiPoints: function getBiPoints(user) {
	            var beautyInsiderAccount = user.beautyInsiderAccount || {};
	            return beautyInsiderAccount.promotionPoints || 0;
	        },
	
	        getFlashStatus: function getFlashStatus(user) {
	            if (this.getSignInStatus(user) === 'unrecognized') {
	                return 'non-flash';
	            } else {
	                var biStatus = this.getBiStatus(user) === 'rouge' ? 'rouge' : 'non-rouge';
	                return (biStatus + (user.isFlash ? '+flash' : '')).toLowerCase();
	            }
	        },
	
	        getPlayStatus: function getPlayStatus(user) {
	            if (this.getSignInStatus(user) !== 'unrecognized') {
	                var isPlay = utils.safelyReadProperty('subscriptionPrograms.play.isActive', user);
	
	                return isPlay ? 'play' : 'non play';
	            } else {
	                return null; // Only populate data element if user is not unrecognized
	            }
	        },
	
	        getChannel: function getChannel() {
	            return Sephora.isDesktop() ? 'full site' : 'mobile';
	        },
	
	        /**
	         * Get the nickname of the user whose page you are viewing if it is not your page.
	         * @param  {string} href The href of the current page.
	         * @return {string}      The nickname.
	         */
	        getPageProfileId: function getPageProfileId(href, user) {
	            if (digitalData.page.category.pageType === anaConsts.PAGE_TYPES.COMMUNITY_PROFILE) {
	                var hrefArray = href.split('/');
	                var len = hrefArray.length;
	                var nickName = hrefArray[len - 1].split('?')[0];
	
	                if (hrefArray.indexOf('users') !== -1) {
	                    if (user.nickName !== nickName) {
	                        return nickName;
	                    }
	                }
	            }
	
	            return '';
	        },
	
	        getInternalCampaign: function getInternalCampaign() {
	            var paramNames = ['icid', 'icid2', 'int_cid'];
	
	            var _iteratorNormalCompletion = true;
	            var _didIteratorError = false;
	            var _iteratorError = undefined;
	
	            try {
	                for (var _iterator = paramNames[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	                    var name = _step.value;
	
	
	                    var campaign = utils.getQueryParam(name);
	
	                    if (campaign) {
	                        return __webpack_require__(/*! utils/replaceSpecialCharacters */ 200)(campaign);
	                    }
	                }
	            } catch (err) {
	                _didIteratorError = true;
	                _iteratorError = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion && _iterator.return) {
	                        _iterator.return();
	                    }
	                } finally {
	                    if (_didIteratorError) {
	                        throw _iteratorError;
	                    }
	                }
	            }
	
	            return '';
	        },
	
	        /**
	         * Determine page name. The result will be stored in digitalData.page.pageInfo.pageName
	         * and will be used as one piece of SephoraPageName, which is what actually gets reported.
	         * @param  {string} pageType This page's path.
	         * @return {string}          The name of this page.
	         */
	        getPageName: function getPageName() {
	            var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	            var name = '';
	
	            switch (digitalData.page.category.pageType) {
	                case anaConsts.PAGE_TYPES.USER_PROFILE:
	                    name = path[path.length - 1];
	                    if (path.indexOf('myaccount') !== -1) {
	                        name = anaConsts.PAGE_NAMES.MY_ACCOUNT;
	                    }
	
	                    if ((options.rawPagePath || '').indexOf('RichProfile/BeautyInsider') !== -1) {
	                        name = 'my beauty insider-';
	                        if (utils.safelyReadProperty('user.profileStatus', options) === 4) {
	                            name += 'signed in';
	                        } else {
	                            name += 'anonymous';
	                        }
	                    }
	
	                    break;
	                case anaConsts.PAGE_TYPES.COMMUNITY_PROFILE:
	                    name = path[path.length - 1];
	                    break;
	                default:
	                    name = path[0];
	            }
	
	            return utils.convertName(name);
	        },
	
	        getPageType: function getPageType() {
	            var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	
	            var type = path[1] || '';
	
	            //Some page types need additional info to determine the page type
	            if (type === 'richprofile') {
	                if (path[2] && path[2] === 'profile') {
	                    type = 'cmnty profile';
	                }
	            }
	
	            return utils.convertType(type);
	        },
	
	        getAdditionalPageInfo: function getAdditionalPageInfo() {
	            var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	
	            var info = '';
	            if (path.indexOf('myaccount') !== -1) {
	                info = path[path.length - 1];
	
	                // Clear 'info' if there was no additional info besides 'myaccount'
	                if (info === 'myaccount') {
	                    info = '';
	                }
	            }
	
	            return utils.convertAdditionalInfo(info);
	        },
	
	        getPagePath: function getPagePath() {
	            var pageType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
	            return pageType.toLowerCase().split('/');
	        },
	
	        getPlatform: function getPlatform(userAgent, isMobile) {
	            userAgent = (userAgent || '').toLowerCase();
	            if (isMobile) {
	                return 'mobile';
	            } else if (userAgent.match(/ipad|android/i) && !userAgent.match(/android.*mobile/i)) {
	                return 'tablet web';
	            } else {
	                return 'desktop web';
	            }
	        },
	
	        /**
	         * Report on how the client got to this page.
	         * ToDo: The point of this string and how it is determined needs further
	         * clarification from analytics PdMs.
	         * @return {string} A description of how the client found got to this page.
	         productFindingMethod: function(){
	            var type = digitalData.page.category.pageType,
	                pagesTypes = ['basket', 'checkout', 'order confirmation', 'product'];
	             for(let currentType of pagesTypes){
	                if(currentType === type){
	                    if(digitalData.page.pageInfo.referringURL && document.referrer){
	                        return "";
	                    }
	                    else {
	                        return "Direct Entry" + (digitalData.page.attributes.ursChannelId ? " by " +
	                        digitalData.page.attributes.ursChannelId : "");
	                    }
	                }
	            }
	            return "D=pageName";
	        },
	        */
	
	        //Determine which adobe report suite to send analytics data to
	        getReportSuiteId: function getReportSuiteId() {
	            var env = utils.safelyReadProperty('global.process.env.UFE_ENV');
	            if (env === 'PROD') {
	                return 'sephoracom';
	            } else {
	                return Sephora.isDesktop() ? 'sephorarenew' : 'sephoratomdev';
	            }
	        },
	
	        /**
	         * Build the page name.
	         * Format is:
	         * [PageType]:[PageDetail]:[ProductWorld]:*[ExtraString (if needed)]
	         * @return {string} The assembled parts
	         */
	        getSephoraPageName: function getSephoraPageName() {
	            var pageName = [digitalData.page.category.pageType, digitalData.page.pageInfo.pageName, digitalData.page.attributes.world || 'n/a', '*' + digitalData.page.attributes.additionalPageInfo];
	
	            return pageName.join(':').toLowerCase();
	        },
	
	        /**
	         * Determine sign in status
	         * @param  {object} user The current user object
	         * @return {string}      The string reporting wants for each scenario
	         */
	        getSignInStatus: function getSignInStatus(user) {
	            switch (user.profileStatus) {
	                case 4:
	                    return 'signed in';
	                case 2:
	                    return 'recognized';
	                default:
	                    return 'unrecognized';
	            }
	        },
	
	        /**
	         * Check if the domain passed in is on our list of refererrs
	         * @param  {string} referrerDomain Example: google.com
	         * @return {bool}                  Whether or not the param was found on our list
	         */
	        referrerIsOnOurList: function referrerIsOnOurList(referrerDomain) {
	            return anaConsts.REFERRER_DOMAINS.some(function (domains) {
	                domains = domains.split(',');
	
	                if (domains.length > 1) {
	                    var allStringsWereFound = false;
	
	                    //Only return true if every check is true
	                    var _iteratorNormalCompletion2 = true;
	                    var _didIteratorError2 = false;
	                    var _iteratorError2 = undefined;
	
	                    try {
	                        for (var _iterator2 = domains[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	                            var domain = _step2.value;
	
	                            if (referrerDomain.indexOf(domain) !== -1) {
	                                allStringsWereFound = true;
	                            } else {
	                                return false;
	                            }
	                        }
	                    } catch (err) {
	                        _didIteratorError2 = true;
	                        _iteratorError2 = err;
	                    } finally {
	                        try {
	                            if (!_iteratorNormalCompletion2 && _iterator2.return) {
	                                _iterator2.return();
	                            }
	                        } finally {
	                            if (_didIteratorError2) {
	                                throw _iteratorError2;
	                            }
	                        }
	                    }
	
	                    return allStringsWereFound;
	                } else {
	                    return referrerDomain.indexOf(domains[0]) !== -1;
	                }
	            });
	        },
	
	        /**
	         * Gets just the domain of a referrer
	         * @param  {string} referrer Example: google.com/?search=blah
	         * @return {string}          Example: google.com
	         */
	        getReferrerDomain: function getReferrerDomain(referrer) {
	            var referrerDomain = referrer.split('?')[0];
	            return referrerDomain.split('/')[0];
	        },
	
	        /**
	         * Determine the URS Tracking code
	         * @param  {string} url The url or search portion of a url
	         * @return {string}     URS Tracking code
	         */
	        getUrsTrackingCode: function getUrsTrackingCode(url, referrer) {
	            var sephoraRegExp = /.*\.sephora\..*/;
	            var referrerDomain;
	
	            var param = (urlUtils.getParamsByName('om_mmc', url) || [])[0];
	
	            if (param) {
	                return param;
	            } else {
	                referrerDomain = this.getReferrerDomain(referrer);
	                if (referrerDomain && this.referrerIsOnOurList(referrerDomain)) {
	                    return referrerDomain + '[seo]';
	                } else if (referrer.search(sephoraRegExp) === -1) {
	                    return referrerDomain ? referrerDomain + '[ref]' : '';
	                }
	            }
	
	            return '';
	        },
	
	        /**
	         * Determine the marketing channel
	         * @param  {string} url The url or search portion of a url
	         * @return {string}
	         */
	        getMarketingChannel: function getMarketingChannel(url, referrer) {
	            var sephoraRegExp = /.*\.sephora\..*/;
	            var referrerDomain;
	
	            var param = (urlUtils.getParamsByName('om_mmc', url) || [])[0];
	
	            if (param) {
	                return param.split('-')[0];
	            } else {
	                referrerDomain = this.getReferrerDomain(referrer);
	                if (referrerDomain && this.referrerIsOnOurList(referrerDomain)) {
	                    return 'Natural Search or SEO';
	                } else if (referrer.search(sephoraRegExp) === -1) {
	                    return referrerDomain ? 'Referrals' : '';
	                }
	            }
	
	            return '';
	        },
	
	        //This is a convenience method for updating multiple user props using current user data.
	        setUserPropsWithCurrentData: function setUserPropsWithCurrentData() {
	            //Always get this here, so it's fresh
	            var currentUser = store.getState().user;
	
	            var segment = digitalData.user[0].segment;
	            var profileInfo = digitalData.user[0].profile[0].profileInfo;
	
	            segment.biStatus = this.getBiStatus(currentUser);
	            segment.biPlusFlash = this.getFlashStatus(currentUser);
	            segment.signInStatus = this.getSignInStatus(currentUser);
	            segment.playStatus = this.getPlayStatus(currentUser);
	            segment.timeTradeBiStatus = this.getTimeTradeBIStatus(currentUser);
	            segment.biPoints = this.getBiPoints(currentUser);
	
	            profileInfo.profileID = this.getATGID(currentUser);
	            profileInfo.profileStatus = this.getProfileStatus(currentUser);
	            profileInfo.webAnalyticsCipher = this.getWebAnalyticsCipher(currentUser);
	            profileInfo.webAnalyticsHash = this.getWebAnalyticsHash(currentUser);
	        },
	
	        /**
	         * Determines the current load page events
	         * @param  {String} pageName - The current page name
	         * @returns {Array} The current load page events
	         */
	        getPageEvents: function getPageEvents(pageName) {
	            var events = [];
	
	            switch (pageName) {
	                case anaConsts.PAGE_NAMES.BASKET:
	                    events.push(anaConsts.Event.SC_VIEW);
	                    break;
	                default:
	
	                //Do nothing
	            }
	
	            if (digitalData.page.attributes.previousPageData.prevSearchType) {
	                events.push(anaConsts.Event.INTERNAL_SEARCH);
	            }
	
	            return events;
	        },
	
	        /**
	         * Sets the productStrings property in digitalData
	         * @param  {String} pageName - The current page name
	         */
	        setProductStrings: function setProductStrings(pageName) {
	            if (pageName === anaConsts.PAGE_NAMES.BASKET) {
	                var productString = utils.buildProductStrings(store.getState().basket.items);
	                digitalData.page.attributes.productStrings = productString;
	            }
	        },
	
	        getArrayOfPropValuesFromItems: function getArrayOfPropValuesFromItems() {
	            var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	            var property = arguments[1];
	
	            return items.map(function (item) {
	                return item.sku[property];
	            });
	        }
	    };
	}();

/***/ }),
/* 200 */
/*!*********************************************************!*\
  !*** ./public_ufe/js/utils/replaceSpecialCharacters.js ***!
  \*********************************************************/
/***/ (function(module, exports) {

	'use strict';
	
	/**
	 * Replaces unwanted special characters
	 * @param  {string} string - The string containing characters that need to be removed.
	 * @return {string} - The string with each found special character replaced with its
	 * normal equivalent.
	 */
	module.exports = function (string) {
	    var charMatrix = { ô: 'o', '&#244;': 'o', è: 'e', é: 'e', '&#200;': 'e', 'È': 'e',
	        '&#233': 'e', '&#201;': 'e', à: 'a', '®': '', '&#174;': '', '™': '', '&#153;': '',
	        '&#8482': '', '&#192;': 'a', '&#236;': 'i', '&#238;': 'i', '&#212;': 'o',
	        '&#232;': 'e', "'": '', ampersand: ' & ' };
	
	    string = string || '';
	
	    var re = new RegExp(Object.keys(charMatrix).join('|'), 'gi');
	    string = string.replace(re, function (matched) {
	        return charMatrix[matched];
	    });
	
	    return string.toLowerCase();
	};

/***/ }),
/* 201 */
/*!**************************************************************************!*\
  !*** ./public_ufe/js/analytics/bindings/pages/all/asyncPageLoadEvent.js ***!
  \**************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = function () {
	    var asyncPageLoadBindings = function asyncPageLoadBindings(data) {
	
	        /* All of this data is specific to this event and should therefor be
	        ** passed in an event item rather than stored in digitalData. */
	        Sephora.analytics.utils.addNewItemFromSpec('event', {
	            eventInfo: {
	                eventName: __webpack_require__(/*! analytics/constants */ 178).ASYNC_PAGE_LOAD,
	                attributes: {
	                    eventStrings: data.eventStrings,
	                    pageDetail: data.pageDetail,
	                    pageName: data.pageName,
	                    pageType: data.pageType,
	                    productStrings: data.productStrings,
	                    navigationInfo: data.navigationInfo,
	                    linkData: data.linkData,
	                    world: data.world
	                }
	            }
	        });
	    };
	
	    return asyncPageLoadBindings;
	}();

/***/ }),
/* 202 */
/*!*************************************************************************!*\
  !*** ./public_ufe/js/analytics/bindings/pages/all/linkTrackingEvent.js ***!
  \*************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(/*! analytics/utils */ 179);
	
	module.exports = function (data) {
	
	    if (!data.usePreviousPageName) {
	        /* Restore pagename to its original value so that any async page
	        ** name is removed, and we are back to the main page's page name.*/
	        s.pageName = window.digitalData.page.attributes.sephoraPageInfo.pageName;
	    }
	
	    var attributes = {
	        // Whenever we need to remove an attribute for a specific
	        // event in derived events, we'll have to set it to an empty string.
	
	        errorMessages: data.errorMessages,
	        eventStrings: data.eventStrings,
	        fieldErrors: data.fieldErrors,
	
	        // list1
	        filterSelections: data.filterSelections,
	
	        // eVar75
	        internalCampaign: Array.isArray(data.internalCampaign) ? data.internalCampaign.join(':') : data.internalCampaign,
	
	        // eVar19, all platform: "desktop web", "tablet web", "mobile"
	        platform: window.digitalData.page.attributes.platform,
	
	        // eVar20
	        photoId: data.photoId,
	
	        // eVar21, platform: "web", "mobile"
	        experience: window.digitalData.page.attributes.experience,
	
	        // eVar23
	        colorIQ: data.colorIQ,
	
	        // eVar62, language locale
	        languageLocale: window.digitalData.page.attributes.languageLocale,
	
	        // D=g is a so called Adobe Dynamic Variable
	        eVar63: 'D=g',
	
	        // eVar65, user Input field
	        userInput: data.userInput,
	
	        // eVar66, server response
	        serverResponse: data.serverResponse,
	
	        // eVar93, page type
	        pageType: window.digitalData.page.category.pageType,
	
	        // eVar94, page detail
	        pageDetail: window.digitalData.page.pageInfo.pageName,
	
	        // eVar95, page world
	        pageWorld: window.digitalData.page.attributes.world || 'n/a',
	
	        // eVar96, page url wo/ query string
	        urlWithoutQuery: window.location.href.split('?')[0],
	
	        // eVar97, page name
	        pageName: window.digitalData.page.attributes.sephoraPageInfo.pageName,
	
	        // pev2, link name
	        linkName: data.linkName,
	
	        // eVar64, previous navigation information
	        navigationInfo: data.navigationInfo,
	
	        //prop55
	        actionInfo: data.actionInfo || null,
	
	        //Used to differentiate two calls of the same type that happen at the same time
	        specificEventName: data.specificEventName
	    };
	
	    if (data.sku && data.sku.skuId) {
	        attributes.productStrings = utils.buildSingleProductString(data.sku);
	    }
	
	    // prop6
	    var prevPage = window.digitalData.page.attributes.previousPageData;
	    if (prevPage) {
	        attributes.previousPage = prevPage.pageName;
	    }
	
	    /* All of this data is specific to this event and should therefor be
	    ** passed in an event item rather than stored in digitalData. */
	    var thisEvent = utils.addNewItemFromSpec('event', {
	        eventInfo: {
	            eventName: Sephora.analytics.constants.LINK_TRACKING_EVENT,
	            type: Sephora.analytics.constants.LINK_TRACKING_EVENT,
	            attributes: attributes
	        }
	    });
	
	    //Turn this into a function later if we need it more often.
	    if (!thisEvent.eventInfo.attributes.internalCampaign) {
	        s && delete s.eVar75;
	    }
	};

/***/ }),
/* 203 */
/*!*************************************************************************!*\
  !*** ./public_ufe/js/analytics/bindings/pages/basket/basketPageLoad.js ***!
  \*************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	* These are the bindings that will take place on the basket page when the
	* page load event occurs.
	* Dependencies: DataLayer.js
	*/
	
	var store = __webpack_require__(/*! store/Store */ 146);
	var utils = __webpack_require__(/*! analytics/utils */ 179);
	var basketUtils = __webpack_require__(/*! utils/Basket */ 190);
	
	module.exports = function () {
	    var doubleClickBindings = __webpack_require__(/*! analytics/bindingMethods/pages/all/doubleClickBindings */ 204);
	
	    var pageLoadBindings = function pageLoadBindings(data) {
	
	        var basketContents = store.getState().basket;
	
	        /* Prerequisites *
	        ** These need to be set first because some bindings depend on them. */
	        digitalData.cart.attributes.doubleClick.allowedItems = doubleClickBindings.getAllowedItems(basketContents.items);
	
	        /**** End Prerequisites *****/
	
	        //Just get a shorter reference
	        var allowedItems = digitalData.cart.attributes.doubleClick.allowedItems;
	
	        digitalData.cart.attributes.doubleClick.skuIds = allowedItems.map(function (item) {
	            return item.sku.skuId;
	        });
	
	        digitalData.cart.attributes.doubleClick.brandNames = allowedItems.map(function (item) {
	            return item.sku.brandName;
	        });
	
	        digitalData.cart.attributes.doubleClick.skuPrices = allowedItems.map(function (item) {
	            return utils.convertToUSD(basketUtils.removeCurrency(item.sku.salePrice || item.sku.listPrice));
	        });
	
	        digitalData.cart.attributes.doubleClick.ratings = allowedItems.map(function (item) {
	            return item.sku.primaryProduct.rating;
	        });
	    };
	
	    return pageLoadBindings;
	}();

/***/ }),
/* 204 */
/*!*********************************************************************************!*\
  !*** ./public_ufe/js/analytics/bindingMethods/pages/all/doubleClickBindings.js ***!
  \*********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var skuUtils = __webpack_require__(/*! utils/Sku */ 185);
	
	module.exports = function () {
	    //Methods used for binding data to digitalData properties related double click pixels.
	    return {
	
	        getAllowedItems: function getAllowedItems() {
	            var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	
	            return items.filter(function (item) {
	                var isAllowedType = false;
	                var skuType = void 0;
	
	                skuType = item.sku.type.toLowerCase();
	
	                isAllowedType = skuType === skuUtils.skuTypes.STANDARD || skuType === skuUtils.skuTypes.FLASH || skuType === skuUtils.skuTypes.SUBSCRIPTION && item.sku.skuId === '1001';
	
	                return isAllowedType && !skuUtils.isGwp(item.sku) && !skuUtils.isBiReward(item.sku) && !skuUtils.isSample(item.sku) && !skuUtils.isGiftCard(item.sku);
	            });
	        }
	    };
	}();

/***/ }),
/* 205 */
/*!***************************************************************************!*\
  !*** ./public_ufe/js/analytics/bindings/pages/product/productPageLoad.js ***!
  \***************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	* These are the bindings that will take place on the product page when the
	* page load event occurs.
	*/
	
	var utils = __webpack_require__(/*! analytics/utils */ 179);
	
	module.exports = function () {
	    var bindingMethods = __webpack_require__(/*! analytics/bindingMethods/pages/productPage/productPageBindings */ 206);
	
	    var generalBindingMethods = __webpack_require__(/*! analytics/bindingMethods/pages/all/generalBindings */ 199);
	
	    var pageLoadBindings = function pageLoadBindings(data) {
	        var primaryProduct = digitalData.product[0];
	
	        /* Prerequisites *
	        ** These need to be set first because some bindings depend on them. */
	
	        if (primaryProduct) {
	            //product:[PID]:[WORLD]:*
	            digitalData.page.pageInfo.pageName = primaryProduct.productInfo.productID;
	            digitalData.page.attributes.world = primaryProduct.attributes.world;
	
	            digitalData.page.attributes.sephoraPageInfo.pageName = generalBindingMethods.getSephoraPageName();
	
	            //Page :: Event Strings
	            digitalData.page.attributes.eventStrings = bindingMethods.getPageEvents();
	
	            //Product String :: On-load
	            digitalData.page.attributes.productStrings = bindingMethods.getProductStrings(primaryProduct);
	        }
	
	        /*
	        ** These bindings need to take place after the above bindings because they
	        ** rely on the data set above.
	        */
	        utils.setNextPageData({
	            pageName: digitalData.page.attributes.sephoraPageInfo.pageName,
	            pageType: digitalData.page.category.pageType
	        });
	    };
	
	    return pageLoadBindings;
	}();

/***/ }),
/* 206 */
/*!*****************************************************************************************!*\
  !*** ./public_ufe/js/analytics/bindingMethods/pages/productPage/productPageBindings.js ***!
  \*****************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var anaConsts = __webpack_require__(/*! analytics/constants */ 178);
	var analyticsUtils = __webpack_require__(/*! analytics/utils */ 179);
	var store = __webpack_require__(/*! Store */ 146);
	var skuUtils = __webpack_require__(/*! utils/Sku */ 185);
	
	module.exports = function () {
	    //Product Page Binding Methods
	    return {
	        /**
	         * Add an item to the product array;
	         */
	        populatePrimaryProductObject: function populatePrimaryProductObject(product) {
	            digitalData.product.push({
	                attributes: {
	                    customizableSetType: this.getCustomizableSetsKey(product),
	                    price: product.currentSku.listPrice,
	                    rating: product.rating,
	                    skuId: product.currentSku.skuId,
	                    type: product.type,
	                    variationType: product.currentSku.variationType,
	                    variationValue: product.currentSku.variationValue,
	                    world: this.getProductWorld(product),
	                    isOutOfStock: product.currentSku.isOutOfStock,
	                    nthLevelCategory: product.parentCategory && product.parentCategory.displayName,
	                    image: product.currentSku.skuImages.image250,
	                    productUrl: product.fullSiteProductUrl
	                },
	                productInfo: {
	                    description: product.shortDescription.replace(/<\/?\w+[^>]*\/?>/g, ''),
	                    manufacturer: product.brand ? product.brand.displayName : '',
	                    productID: product.productId,
	                    productName: product.displayName
	                }
	            });
	        },
	
	        getProductWorld: function getProductWorld(child) {
	            if (child.parentCategory) {
	                return this.getProductWorld(child.parentCategory);
	            } else {
	                return child.displayName;
	            }
	        },
	
	        /**
	         * @returns {Array} The current load page events
	         */
	        getPageEvents: function getPageEvents() {
	            var events = digitalData.page.attributes.eventStrings;
	
	            events.push('prodView');
	            events.push(anaConsts.Event.PRODUCT_VIEW);
	            events.push(anaConsts.Event.PRODUCT_PAGE_VIEW);
	            var product = store.getState().product.currentProduct;
	            var isColorIQEnabled = skuUtils.showColorIQOnPPage(product);
	            if (isColorIQEnabled) {
	                events.push(anaConsts.Event.PRODUCT_PAGE_COLORIQ_ENABLED);
	            }
	            return events;
	        },
	
	        /**
	         * Builds and returns the data that we want to know about this product
	         * @param  {Object} currentProduct The product object to get data from
	         * @return  {String} The analytics data for the product
	         * Format: ;SKUID;;;;eVar26=SKUID|eVar37=[USE CASE#]|
	         *         eVar52=Rec_PrevPgType_CarouselName_AudienceID_ExperienceID
	         */
	        getProductStrings: function getProductStrings(currentProduct) {
	            var previousPageData = digitalData.page.attributes.previousPageData;
	
	            var productString = [';' + currentProduct.attributes.skuId + ';;;;eVar26=' + currentProduct.attributes.skuId, 'eVar37=' + currentProduct.attributes.customizableSetType];
	
	            var buildeVar52 = function buildeVar52() {
	                var parts = [];
	
	                parts.push(previousPageData.recInfo.isExternalRec ? previousPageData.recInfo.isExternalRec : 'sephora');
	
	                if (previousPageData.pageType) {
	                    parts.push(previousPageData.pageType);
	                }
	
	                if (previousPageData.recInfo.componentTitle) {
	                    parts.push(previousPageData.recInfo.componentTitle);
	                }
	
	                parts.push(previousPageData.recInfo.certonaAudienceId || 'n/a');
	
	                parts.push(previousPageData.recInfo.certonaExperienceId || 'n/a');
	
	                return parts.join('_');
	            };
	
	            if (digitalData.page.attributes.previousPageData.recInfo.certonaExperienceId) {
	                productString.push('eVar52=' + buildeVar52());
	            }
	
	            return productString.join('|').toLowerCase();
	        },
	
	        /**
	         * Determine the key used later to tell which type of custom set this product is
	         * @return {String} One of the following strings indicating the type of custom set
	         */
	        getCustomizableSetsKey: function getCustomizableSetsKey(product) {
	            if (product.currentSku.configurableOptions) {
	                if (product.currentSku.configurableOptions.isFree) {
	                    /* Offer the client a set where one item (single and multiple ppage options) is
	                    ** customizable and included for FREE.*/
	                    return anaConsts.CUSTOMIZABLE_SETS_VARIANTS.IS_CUSTOMIZABLE;
	                } else {
	                    /* Allow the client to build a set of one SKU (e.g. eyeshadow) of one product
	                    ** and receive a free item (e.g. palette) of their choice for FREE.*/
	                    return anaConsts.CUSTOMIZABLE_SETS_VARIANTS.IS_CUSTOMIZABLE_CHOOSE_FREE_ITEM;
	                }
	            } else {
	                return anaConsts.CUSTOMIZABLE_SETS_VARIANTS.NOT_CUSTOMIZABLE;
	            }
	        },
	
	        /**
	         * Kick off all the methods that use product data to populate analytics objects
	         */
	        initializeAnalyticsObjectWithProductData: function initializeAnalyticsObjectWithProductData() {
	            var product = store.getState().product.currentProduct;
	            this.populatePrimaryProductObject(product);
	
	            //ToDo: Figure out where this should live
	            digitalData.page.attributes.featureVariantKeys = digitalData.page.attributes.featureVariantKeys.concat(this.getPageVariants(product));
	        },
	
	        getPageVariants: function getPageVariants(currentProduct) {
	            var variantKeys = [];
	
	            var _currentProduct$ancil = currentProduct.ancillarySkus,
	                ancillarySkus = _currentProduct$ancil === undefined ? [] : _currentProduct$ancil,
	                currentSku = currentProduct.currentSku,
	                hoveredSku = currentProduct.hoveredSku,
	                _currentProduct$produ = currentProduct.productVideos,
	                productVideos = _currentProduct$produ === undefined ? [] : _currentProduct$produ,
	                _currentProduct$produ2 = currentProduct.productArticles,
	                productArticles = _currentProduct$produ2 === undefined ? [] : _currentProduct$produ2,
	                _currentProduct$recen = currentProduct.recentlyViewed,
	                recentlyViewed = _currentProduct$recen === undefined ? [] : _currentProduct$recen,
	                suggestedUsage = currentProduct.suggestedUsage,
	                _currentProduct$ymalS = currentProduct.ymalSkus,
	                ymalSkus = _currentProduct$ymalS === undefined ? [] : _currentProduct$ymalS;
	
	            var _ref = hoveredSku || currentSku,
	                _ref$alternateImages = _ref.alternateImages,
	                alternateImages = _ref$alternateImages === undefined ? [] : _ref$alternateImages,
	                ingredientDesc = _ref.ingredientDesc,
	                isOnlyFewLeft = _ref.isOnlyFewLeft,
	                skuImages = _ref.skuImages;
	
	            if (currentProduct.skuSelectorType !== skuUtils.skuSwatchType.NONE) {
	                variantKeys.push(anaConsts.PAGE_VARIANTS.SWATCHES);
	            }
	
	            if (isOnlyFewLeft) {
	                variantKeys.push(anaConsts.PAGE_VARIANTS.ONLY_FEW_LEFT);
	            }
	
	            if (alternateImages.length) {
	                variantKeys.push(anaConsts.PAGE_VARIANTS.ALTERNATE_IMAGES);
	            }
	
	            if (productVideos.length) {
	                variantKeys.push(anaConsts.PAGE_VARIANTS.HERO_VIDEOS);
	            }
	
	            if (suggestedUsage) {
	                variantKeys.push(anaConsts.PAGE_VARIANTS.HOW_TO_USE_TAB);
	            }
	
	            if (ingredientDesc) {
	                variantKeys.push(anaConsts.PAGE_VARIANTS.INGREDIENTS_TAB);
	            }
	
	            if (ancillarySkus.length) {
	                variantKeys.push(anaConsts.PAGE_VARIANTS.USE_IT_WITH);
	            }
	
	            if (productVideos.length) {
	                variantKeys.push(anaConsts.PAGE_VARIANTS.EXPLORE_VIDEOS);
	            }
	
	            if (productArticles.length) {
	                variantKeys.push(anaConsts.PAGE_VARIANTS.EXPLORE_ARTICLES);
	            }
	
	            //Photos section under Learn More(Key: 10) is reported in ExploreThisProduct.jsx
	
	            if (ymalSkus.length) {
	                variantKeys.push(anaConsts.PAGE_VARIANTS.YOU_MIGHT_ALSO_LIKE);
	            }
	
	            //ToDo: '12' - Similar Products Module
	
	            if (recentlyViewed.length) {
	                variantKeys.push(anaConsts.PAGE_VARIANTS.RECENTLY_VIEWED);
	            }
	
	            if (Sephora.isDesktop() && !skuUtils.isGiftCard(currentSku)) {
	                variantKeys.push(anaConsts.PAGE_VARIANTS.FIND_IN_A_STORE);
	            }
	
	            return variantKeys;
	        }
	    };
	}();

/***/ }),
/* 207 */
/*!*****************************************************!*\
  !*** ./public_ufe/js/analytics/postProcessEvent.js ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Purpose: Handles things that need to happen after a particular event has occured.
	 */
	
	var anaConsts = __webpack_require__(/*! analytics/constants */ 178);
	
	module.exports = function (eventName) {
	
	    switch (eventName) {
	        case anaConsts.PAGE_LOAD:
	
	            //ILLUPH-82807 - Fire "[PIXEL] DoubleClick Global Footer" 3 seconds after pageLoadEvent
	            window.setTimeout(function () {
	                Sephora.analytics.utils.fireEventForTagManager(anaConsts.DOUBLE_CLICK_FOOTER);
	            }, 3000);
	
	            if (digitalData.page.category.pageType === 'product') {
	                Sephora.analytics.utils.fireEventForTagManager(anaConsts.PRODUCT_PAGE_LOAD);
	                Sephora.analytics.utils.fireEventForTagManager(anaConsts.DOUBLE_CLICK_PRODUCT_PAGE);
	            }
	
	            break;
	
	        default:
	
	        //Do nothing
	    }
	};

/***/ }),
/* 208 */
/*!*****************************************!*\
  !*** ./public_ufe/js/actions/Legacy.js ***!
  \*****************************************/
/***/ (function(module, exports) {

	'use strict';
	
	var TYPES = {
	    LEGACY_HANDLED: 'LEGACY_HANDLED'
	};
	
	var handleLegacy = function handleLegacy(legacyFunction) {
	    var legacyResult = null;
	
	    try {
	        if (legacyFunction) {
	            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	                args[_key - 1] = arguments[_key];
	            }
	
	            legacyResult = legacyFunction.apply(undefined, args);
	        } else {
	            throw 'ERROR: Required Legacy Shim Missing';
	        }
	    } catch (e) {
	        console.error(e);
	    }
	
	    return legacyResult || {
	        type: TYPES.LEGACY_HANDLED
	    };
	};
	
	var wrapForLegacyAction = function wrapForLegacyAction(legacyFunction, ufeFunction) {
	    if (Sephora.isLegacyMode) {
	        return handleLegacy.bind(null, legacyFunction);
	    } else {
	        return ufeFunction;
	    }
	};
	
	module.exports = {
	    TYPES: TYPES,
	    wrapForLegacyAction: wrapForLegacyAction
	};

/***/ }),
/* 209 */
/*!***********************************************!*\
  !*** ./public_ufe/js/actions/OrderActions.js ***!
  \***********************************************/
/***/ (function(module, exports) {

	'use strict';
	
	// TODO Find a proper place for the below constants.
	
	var SHIPPING_GROUPS = {
	    HARDGOOD: 'HardGoodShippingGroup',
	    GIFT: 'GiftCardShippingGroup',
	    FLASH: 'FlashElectronicShippingGroup',
	    ELECTRONIC: 'ElectronicShippingGroup'
	};
	
	module.exports = {
	    SHIPPING_GROUPS: SHIPPING_GROUPS
	};

/***/ }),
/* 210 */
/*!**********************************************!*\
  !*** ./public_ufe/js/actions/UserActions.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var userUtils = __webpack_require__(/*! utils/User */ 186);
	var basketUtils = __webpack_require__(/*! utils/Basket */ 190);
	var skuUtils = __webpack_require__(/*! utils/Sku */ 185);
	var urlUtils = __webpack_require__(/*! utils/Url */ 2);
	var confirmModal = __webpack_require__(/*! Actions */ 175).showInfoModal;
	
	var getLovesList = __webpack_require__(/*! actions/LoveActions */ 211).getLovesList;
	var setLovesList = __webpack_require__(/*! actions/LoveActions */ 211).setLovesList;
	var showInterstice = __webpack_require__(/*! Actions */ 175).showInterstice;
	var showCountrySwitcherModal = __webpack_require__(/*! Actions */ 175).showCountrySwitcherModal;
	var showInfoModal = __webpack_require__(/*! Actions */ 175).showInfoModal;
	var updateCurrentUserSpecificProduct = __webpack_require__(/*! actions/ProductActions */ 246).updateCurrentUserSpecificProduct;
	var basketActions = __webpack_require__(/*! actions/BasketActions */ 169);
	var updateBasket = basketActions.updateBasket;
	var updateWelcome = __webpack_require__(/*! actions/WelcomePopupActions */ 254).updateWelcome;
	var setTargeterResults = __webpack_require__(/*! actions/TargeterActions */ 255).setResults;
	var socialInfoActions = __webpack_require__(/*! actions/SocialInfoActions */ 256);
	var lithiumApi = __webpack_require__(/*! services/api/thirdparty/Lithium */ 257);
	var profileApi = __webpack_require__(/*! services/api/profile */ 212);
	
	var anaUtils = __webpack_require__(/*! analytics/utils */ 179);
	var processEvent = __webpack_require__(/*! analytics/processEvent */ 176);
	var anaConsts = __webpack_require__(/*! analytics/constants */ 178);
	var linkTrackingError = __webpack_require__(/*! analytics/bindings/pages/all/linkTrackingError */ 259);
	var scEvent = __webpack_require__(/*! analytics/constants */ 178).Event;
	var Locale = __webpack_require__(/*! utils/LanguageLocale */ 4);
	var Location = __webpack_require__(/*! utils/Location */ 3);
	var cookieUtils = __webpack_require__(/*! utils/Cookies */ 5);
	var basketApi = __webpack_require__(/*! services/api/basket */ 170);
	var biApi = __webpack_require__(/*! services/api/beautyInsider */ 260);
	var authenticationApi = __webpack_require__(/*! services/api/authentication */ 270);
	
	// (!) Until that issue is solved, AVOID USING DECORATORS in this module bc/ of
	// the circular dependency on the Store that make a number of tests red.
	// TODO Figure out what's wrong and how to address it properly.
	// TODO After the above problem is solved, leverage withInterstice to eliminate
	// showInterstice repetitions.
	// const { withInterstice } = require('utils/decorators');
	
	var LOCAL_STORAGE = __webpack_require__(/*! utils/localStorage/Constants */ 274);
	var LITHIUM_SESSION_KEY_COOKIE_NAME = 'LiSESSIONID';
	
	//TODO: 17.6 LITHIUM_API_TOKEN_COOKIE_NAME cookie name will need to be updated
	var LITHIUM_API_TOKEN_COOKIE_NAME = 'lithiumSSO:sephora.qa';
	var TOKY_AUTH_COOKIE_NAME = 'toky_auth_sso';
	
	var Storage = __webpack_require__(/*! utils/localStorage/Storage */ 275);
	var USER_DATA_EXPIRY = Storage.HOURS * 1;
	
	var TYPES = {
	    SIGN_IN: 'USER.SIGN_IN',
	    UPDATE: 'USER.UPDATE',
	    NOT_FOUND: 'USER.NOT_FOUND'
	};
	
	var ERROR_CODES = { STORE_REGISTERED_ERROR_CODE: 202 };
	
	var MESSAGE_TYPES = { MERGED_BASKET: 'orderMergedMsg' };
	
	var MILLISECONDS_IN_DAY = 24 * 60 * 60 * 1000;
	
	var FRAGMENT_FOR_UPDATE = {
	    NAME: 'NAME',
	    EMAIL: 'EMAIL',
	    PASSWORD: 'PASSWORD',
	    EMAIL_SUBSCRIPTION: 'EMAIL_SUBSCRIPTION'
	};
	
	/**
	 * Sets user data to legacy MW jStorage cookie.  All information set via
	* UserAction.update will be set directly in jStorage.userinfo.
	 *
	 * TODO: Remove once all legacy MW pages are converted.
	 *
	 * @param data
	 */
	function shimLegacyMW(data) {
	    var jStorage = window.localStorage.getItem(LOCAL_STORAGE.LEGACY_MW_JSTORAGE);
	
	    jStorage !== null ? jStorage = JSON.parse(jStorage) : jStorage = {};
	
	    if (!jStorage.userinfo) {
	        jStorage.userinfo = {};
	    }
	
	    Object.assign(jStorage.userinfo, data);
	
	    try {
	        window.localStorage.setItem(LOCAL_STORAGE.LEGACY_MW_JSTORAGE, JSON.stringify(jStorage));
	    } catch (e) {
	        // Just silencing QuotaExceededError in Safari Incognito mode,
	        // where localStorage is not working.
	    }
	}
	
	function shimLegacyFS(data) {}
	//TODO 17.2: populate necessary data in fullsite (Is there anything we need to do here -
	// set cookies, etc?
	
	
	/**
	 * Updates user profile information in local storage subsequently updates store.
	 * @param  {object} data - user profile object
	 * @param  {boolean} purgeUserCache - Whether to clear user data cache. This is set to true by
	 * default except when the data comes from processUserFull, which is the cache's source of data.
	 */
	function update(data) {
	    var purgeUserCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
	
	
	    if (purgeUserCache) {
	        Storage.local.removeItem(LOCAL_STORAGE.USER_DATA);
	    }
	
	    shimLegacyMW(data);
	    shimLegacyFS(data);
	
	    return {
	        type: TYPES.UPDATE,
	        data: data
	    };
	}
	
	function updateUserFragment(optionParams, successCallback, failureCallback) {
	    return function (dispatch) {
	        dispatch(showInterstice(true));
	
	        profileApi.updateProfile(optionParams).then(function (data) {
	            var fragmentForUpdate = optionParams.fragmentForUpdate;
	
	            if (fragmentForUpdate === FRAGMENT_FOR_UPDATE.EMAIL) {
	                data.login = optionParams.email;
	            } else if (fragmentForUpdate === FRAGMENT_FOR_UPDATE.NAME) {
	                data.firstName = optionParams.firstName;
	                data.lastName = optionParams.lastName;
	            } else if (fragmentForUpdate === FRAGMENT_FOR_UPDATE.EMAIL_SUBSCRIPTION) {
	                data.emailSubscriptionInfo = optionParams.emailSubscriptionInfo;
	            }
	
	            // note: for password, there is nothing in the user store to update
	            dispatch(update(data));
	            successCallback();
	            dispatch(showInterstice(false));
	        }).catch(function (reason) {
	            if (reason.errorMessages || reason.responseStatus === 403) {
	                failureCallback(reason);
	            }
	        });
	    };
	}
	
	/* process user full get api request, set new target information */
	function processUserFull(userInfoData, showWelcome) {
	    var dataIsFromCache = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
	
	    return function (dispatch) {
	        /* Cache response for logged-in and recognized users for 1 hour if data does not originate
	        from cache */
	        if (userInfoData.profile.profileStatus !== userUtils.PROFILE_STATUS.ANONYMOUS && !dataIsFromCache) {
	            Storage.local.setItem(LOCAL_STORAGE.USER_DATA, userInfoData, USER_DATA_EXPIRY);
	        }
	
	        // Load targeter data
	        var targeterResult = userInfoData.targetersResult;
	        if (targeterResult) {
	            dispatch(setTargeterResults(targeterResult));
	        }
	
	        var nickname = userInfoData.profile.nickName;
	        var profileId = userInfoData.profile.profileId;
	        var LITHIUM_API_TOKEN = cookieUtils.read(LITHIUM_API_TOKEN_COOKIE_NAME);
	        var LITHIUM_SESSION_KEY = cookieUtils.read(LITHIUM_SESSION_KEY_COOKIE_NAME);
	
	        dispatch(update(userInfoData.profile, false));
	        dispatch(updateBasket(userInfoData.basket));
	        dispatch(setLovesList(userInfoData.shoppingList));
	
	        userInfoData.product && dispatch(updateCurrentUserSpecificProduct(userInfoData.product));
	
	        //Check that user has nickname before making any lithium calls
	        if (nickname) {
	            // when there is no token cookie, make sso token api call and set cookie
	            var getLithiumSSOToken = new Promise(function (resolve) {
	                if (!LITHIUM_API_TOKEN) {
	                    profileApi.getLithiumSSOToken(profileId).then(function (lithiumSsoToken) {
	                        cookieUtils.write(LITHIUM_API_TOKEN_COOKIE_NAME, lithiumSsoToken);
	                        resolve(lithiumSsoToken);
	                    });
	                } else {
	                    resolve();
	                }
	            });
	
	            getLithiumSSOToken.then(function () {
	                return lithiumApi.getAuthenticatedUserSocialInfo(nickname);
	            }).then(function (data) {
	                data.isLithiumSuccessful = true;
	                dispatch(socialInfoActions.setUserSocialInfo(data));
	            }).catch(function (reason) {
	                console.debug('Lithium failed post user full call: ', reason);
	                dispatch(socialInfoActions.setLithiumSuccessStatus(false));
	            });
	        }
	
	        if (showWelcome) {
	            dispatch(updateWelcome(userInfoData.profile.welcomeMat || {}));
	        }
	    };
	}
	
	/** api call for full user profile. returns a promise so that during sign in, analytics
	 * can sequentially get updated user info.
	 */
	function getUserFull() {
	    var productPageData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
	    var callback = arguments[1];
	
	    return function (dispatch) {
	        var targetersCsv = Sephora.targetersToInclude.substr('?includeTargeters='.length);
	
	        var requestOptions = {};
	
	        if (productPageData) {
	            requestOptions.productId = productPageData.productId;
	            requestOptions.preferedSku = productPageData.skuId;
	        }
	
	        if (targetersCsv.length) {
	            requestOptions.includeTargeters = targetersCsv;
	        }
	
	        dispatch(showInterstice(true));
	
	        return profileApi.getProfileFullInformation('current', requestOptions).then(function (data) {
	            dispatch(processUserFull(data, false));
	            callback && callback();
	            dispatch(showInterstice(false));
	        }).catch(function (reason) {
	            dispatch(showInterstice(false));
	        });
	    };
	}
	
	function updateUserInformation(updatedInfo, successCallback, failureCallback) {
	    return function (dispatch) {
	        dispatch(showInterstice(true));
	
	        profileApi.updateProfile(updatedInfo).then(function (data) {
	            dispatch(showInterstice(false));
	            successCallback(data);
	        }).catch(function (reason) {
	            failureCallback(reason);
	        });
	    };
	}
	
	function register(profileData, successCallback, failureCallback) {
	    return function (dispatch) {
	        dispatch(showInterstice(true));
	
	        profileApi.createUser(profileData).then(function (data) {
	
	            if (data.responseStatus === ERROR_CODES.STORE_REGISTERED_ERROR_CODE) {
	                profileApi.lookupProfileByLogin(profileData.userDetails.login).then(function (data2) {
	                    failureCallback({
	                        errorCode: ERROR_CODES.STORE_REGISTERED_ERROR_CODE,
	                        data: data2
	                    });
	                    dispatch(showInterstice(false));
	                });
	            } else {
	                data.firstName = profileData.userDetails.firstName;
	                data.lastName = profileData.userDetails.lastName;
	                data.login = profileData.userDetails.login;
	
	                dispatch(update(data));
	                dispatch(getLovesList(data.profileId));
	
	                //Analytics
	                var eventStrings = [scEvent.CAPTCHA_ENTERED, scEvent.REGISTRATION_SUCCESSFUL];
	                if (profileData.isJoinBi) {
	                    eventStrings.push(scEvent.REGISTRATION_WITH_BI);
	                } else {
	                    eventStrings.push(scEvent.REGISTRATION_WITHOUT_BI);
	                }
	
	                if (profileData.subscription && profileData.subscription.subScribeToEmails) {
	                    eventStrings.push(scEvent.EMAIL_OPT_IN);
	                }
	
	                // Since popups overwrite page name with their title, we need to
	                // provide the initial page name here.
	                processEvent.process(anaConsts.ASYNC_PAGE_LOAD, {
	                    data: {
	                        pageName: digitalData.page.attributes.sephoraPageInfo.pageName,
	                        pageType: digitalData.page.category.pageType,
	                        pageDetail: digitalData.page.pageInfo.pageName,
	                        eventStrings: eventStrings,
	                        linkData: data.ssiToken ? anaConsts.LinkData.SSI : null,
	                        navigationInfo: null
	                    }
	                });
	
	                successCallback();
	
	                dispatch(showInterstice(false));
	            }
	        }).catch(function (reason) {
	            if (reason.errorMessages) {
	                failureCallback(reason);
	
	                processEvent.process(anaConsts.LINK_TRACKING_EVENT, {
	                    data: {
	                        bindingMethods: linkTrackingError,
	                        errorMessages: reason.errorMessages,
	                        eventStrings: [scEvent.CAPTCHA_ENTERED, scEvent.CAPTCHA_FAILED],
	                        usePreviousPageName: true
	                    }
	                });
	            }
	
	            dispatch(showInterstice(false));
	        });
	    };
	}
	
	function biRegister(biData, successCallback, failureCallback) {
	    return function (dispatch) {
	        dispatch(showInterstice(true));
	
	        biApi.createBiAccount(biData).then(function (data) {
	            dispatch(getUserFull());
	            successCallback();
	
	            processEvent.process(anaConsts.ASYNC_PAGE_LOAD, {
	                data: {
	                    pageName: digitalData.page.attributes.sephoraPageInfo.pageName,
	                    pageDetail: digitalData.page.pageInfo.pageName,
	                    pageType: digitalData.page.category.pageType,
	                    eventStrings: [scEvent.REGISTRATION_WITH_BI, scEvent.REGISTRATION_SUCCESSFUL]
	                }
	            });
	
	            dispatch(showInterstice(false));
	        }).catch(function (reason) {
	            if (data.errorMessages) {
	                failureCallback(reason);
	            }
	
	            dispatch(showInterstice(false));
	        });
	    };
	}
	
	function showWarnings(response, dispatch) {
	    if (response.warnings && response.warnings.length) {
	        if (response.warnings.filter(function (message) {
	            return basketUtils.isMergeBasketWarning(message);
	        }).length) {
	            var _message = response.warnings[0];
	            dispatch(basketActions.showError({ orderMergedMsg: _message }));
	        } else {
	            dispatch(showInfoModal(true, 'Warning', message));
	        }
	    }
	}
	
	function signInSuccess(dispatch, response, getState, successCallback) {
	    // Analytics
	    // Since popups overwrite page name with their title, provide the initial page name here.
	    var analyticsData = {
	        pageName: digitalData.page.attributes.sephoraPageInfo.pageName,
	        pageDetail: digitalData.page.pageInfo.pageName,
	        pageType: digitalData.page.category.pageType,
	        eventStrings: [scEvent.SIGN_IN_ATTEMPT, scEvent.SIGN_IN_SUCCESS],
	        linkData: response.ssiToken ? anaConsts.LinkData.SSI : null
	    };
	
	    // Log user into toky woky if its on the current page and they are socially enabled
	    if (window.toky && response.isSocialEnabled) {
	
	        // Only call from here if user signs in from nav header
	        if (!Sephora.TokyWoky.isSignInThroughChat && !Sephora.TokyWoky.CommunitySignIn) {
	            var tokyWokyApi = __webpack_require__(/*! services/api/thirdparty/tokyWoky */ 276);
	            tokyWokyApi.getTokyWokySSOToken().then(function (data) {
	                var tokyAuthData = data.tokyWokyAuthPublicKey + ':' + data.tokyWokyAuthMessage + ':' + (data.tokyWokyAuthHmac + ':' + data.tokyWokyAuthTimestamp);
	                toky.utils.createCookie(TOKY_AUTH_COOKIE_NAME, tokyAuthData, 0);
	
	                //reload tokywoky chat to update user in chat
	                toky.utils.reloadFrameSrc(toky.html.frameToky.src);
	            });
	        }
	    }
	
	    //We must wait for userFull so that things like basket.items and user specific product details
	    // are up to date
	    var productPageData = skuUtils.getProductPageData();
	    dispatch(getUserFull(productPageData)).then(function () {
	
	        if (typeof successCallback === 'function') {
	            successCallback(response);
	        }
	
	        //Enrich data if basket merge occurred
	        /* eslint-disable array-callback-return */
	        response.profileWarnings && response.profileWarnings.map(function (warning) {
	            if (warning.messageContext === MESSAGE_TYPES.MERGED_BASKET) {
	                if (digitalData.page.pageInfo.pageName === anaConsts.PAGE_NAMES.BASKET) {
	                    analyticsData.eventStrings = analyticsData.eventStrings.concat([anaConsts.Event.SC_VIEW, anaConsts.Event.EVENT_37]);
	                    analyticsData.productStrings = anaUtils.buildProductStrings(getState().basket.items);
	                }
	            }
	        });
	
	        processEvent.process(anaConsts.ASYNC_PAGE_LOAD, { data: analyticsData });
	    });
	
	    //End Analytics
	
	    // If a warning was found (like merge basket), display it as an InfoModal or inline for Basket
	    showWarnings(response, dispatch);
	
	    // TODO: play-specific cases (handle later)
	    //     if (res.errorMessages && res.errorMessages.length > 0) {
	    //         if (SM.env.isPlayQuiz) {
	    //             $(window).trigger('btEvent.event_play_landing_error', res.errorMessages[0]);
	    //         }
	    //     } else {
	    //             if (isPlay) {
	    //                 if (SM.is.checkout()) {
	    //                     SM.util.Location.location('/play');
	    //                 } else {
	    //                     playSpecificSuccess();
	    //                 }
	    //
	    //             }
	    //     }
	}
	
	function signIn(login, password, isKeepSignedIn, loginForCheckout, successCallback, failureCallback) {
	    return function (dispatch, getState) {
	
	        dispatch(showInterstice(true));
	
	        authenticationApi.login(login, password, { loginForCheckout: loginForCheckout, isKeepSignedIn: isKeepSignedIn }).then(function (data) {
	
	            /** Reload if a different locale.  Profile locale does not exist on POS user,
	             * so do not want to trigger page reload
	             */
	            if (!data.isStoreBiMember && data.profileLocale !== getState().user.profileLocale) {
	                //Set successful login analytics events before reloading
	                anaUtils.setNextPageData({
	                    events: [scEvent.SIGN_IN_ATTEMPT, scEvent.SIGN_IN_SUCCESS]
	                });
	                Location.reload();
	            } else {
	                if (!data.isStoreBiMember) {
	                    signInSuccess(dispatch, data, getState, successCallback);
	                }
	            }
	
	            dispatch(showInterstice(false));
	        }).catch(function (reason) {
	
	            failureCallback(reason);
	
	            //Analytics
	            processEvent.process(anaConsts.LINK_TRACKING_EVENT, {
	                data: {
	                    bindingMethods: linkTrackingError,
	                    errorMessages: reason.errorMessages,
	                    eventStrings: [scEvent.SIGN_IN_ATTEMPT, scEvent.SIGN_IN_FAILED],
	                    usePreviousPageName: true
	                }
	            });
	
	            dispatch(showInterstice(false));
	        });
	    };
	}
	
	//
	// function playSpecificSuccess() {
	//
	//
	//     var postData = {
	//         profileId : SM.getUserId(),
	//         "skuList": [
	//             {
	//                 "skuId": mainObj.activeSku,
	//                 "qty": 1
	//             }
	//         ]
	//     };
	//     $.ajax({
	//         url : SM.getRestLocation('/api/shopping-cart/playSubscription'),
	//         processData : false,
	//         contentType : 'application/json',
	//         data : JSON.stringify(postData),
	//         type : 'POST',
	//         error : function(xhr, textStatus, err) {
	//             if(xhr.status == 403) {
	//                 SM.controller.Authenticate.lazyInjectAuth('/checkout');
	//                 $('#modal-signin').modal('show');
	//             } else {
	//                 SM.util.RestInterceptor.handleRestError(xhr, textStatus, err);
	//             }
	//         },
	//         success : SM.util.RestInterceptor.handleSuccess(true, function(o) {
	//             if(o.subScriptionStatus === 'SUCCESS'){
	//                 window.location = '/checkout';
	//             }
	//             if(o.errorCode && o.errorCode === 403){
	//                 SM.controller.Authenticate.lazyInjectAuth('/checkout');
	//                 $('#modal-signin').modal('show');
	//             }
	//         })
	//     });
	// }
	
	function signOut(redirect) {
	    var confirmed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	
	    /* eslint-disable consistent-return */
	    return function (dispatch) {
	        // Throw a warning modal that the basket will be lost if only samples/rewards < 750 point
	        if (!confirmed && !basketUtils.isEmpty() && basketUtils.isOnlySamplesRewardsInBasket(true)) {
	            return dispatch(confirmModal(true, 'Confirmation', 'The following items will be removed: All non-merchandise except gift cards. ' + 'Are you sure you want to continue?', 'Continue', function () {
	                dispatch(signOut(redirect, true));
	                dispatch(confirmModal(false));
	            }, true));
	        }
	
	        if (!redirect || redirect === '') {
	            redirect = '/';
	        }
	
	        authenticationApi.logout().then(function () {
	            //if (res.errorMessages && res.errorMessages.length > 0) {
	            //    // TODO: dispatch error
	            //    //A.warning(res.errorMessages);
	            //} else {
	
	            /*
	            ** Explicitly clearing cached TestTarget && user data so TestTarget service can
	            ** accurately validate when loading if it depends on the
	            ** userInfo service to execute.
	            */
	            Storage.local.removeItem(LOCAL_STORAGE.TARGET_PARAMS);
	            Storage.local.removeItem(LOCAL_STORAGE.USER_DATA);
	            Storage.local.removeItem(LOCAL_STORAGE.SVA_DATA);
	            Storage.local.removeItem(LOCAL_STORAGE.BASKET);
	
	            //set lithium session key to 0, to mimic delete
	            cookieUtils.write(LITHIUM_SESSION_KEY_COOKIE_NAME, 0);
	
	            //write toky cookies with empty string when user logs out from any page
	            cookieUtils.write(TOKY_AUTH_COOKIE_NAME, '', 0, true);
	
	            // Logout user from toky woky on pages with chat enabled then reload page, even if
	            // error in toky woky code.
	            if (window.toky) {
	                window.toky.api.logout().then(function () {
	                    urlUtils.redirectTo(redirect);
	                }).catch(function (e) {
	                    urlUtils.redirectTo(redirect);
	                });
	            } else {
	                urlUtils.redirectTo(redirect);
	            }
	
	            //
	            //    // TODO: discuss if we want http<-->https cleanup
	            //    // only need if we're using locally stored user data to render page.
	            //    // Not needed if only using that data for T&T.
	            //    // Question is performance on mobile
	            //    /*
	            //     // CORS expunge only works on    http:
	            //     if(window.location.protocol == 'http:') {
	            //     let redirectTimeout = setTimeout(function() {
	            //     SM.warn('expunge timeout hit');
	            //     window.location = sRedirect;
	            //     }, 5000);
	            //     $(window).on('expungeComplete', function() {
	            //     SM.info('Expunge complete');
	            //     clearTimeout(redirectTimeout);
	            //     if(typeof playCallback === 'function'){
	            //     playCallback();
	            //     return;
	            //     }
	            //     window.location = sRedirect;
	            //     });
	            //     SM.util.CrossOrigin.expunge();
	            //     } else {
	            //     _expungeUserData();
	            //     if(typeof playCallback === 'function'){
	            //     playCallback();
	            //     return;
	            //     } else {
	            //     window.location = sRedirect + '#signout';
	            //     }
	            //     if (window.location.pathname == sRedirect){
	            //     SM.util.Location.reload();
	            //     }
	            //     }
	            //     */
	            //}
	        }).catch(function (reason) {
	            // TODO: dispatch error
	            //SM.util.RestInterceptor.handleRestError
	        });
	    };
	}
	
	function checkUser(login, successCallback, failureCallback) {
	    return function (dispatch) {
	
	        dispatch(showInterstice(true));
	
	        profileApi.lookupProfileByLogin(login).then(function (data) {
	            successCallback(data);
	            dispatch(showInterstice(false));
	        }).catch(function (reason) {
	            failureCallback(reason);
	            dispatch(showInterstice(false));
	        });
	    };
	}
	
	function sendForgotPassword(dispatch, login, successCallback, failureCallback) {
	    dispatch(showInterstice(true));
	    authenticationApi.resetPasswordByLogin(login).then(function (data) {
	        successCallback(data);
	        dispatch(showInterstice(false));
	    }).catch(function (reason) {
	        failureCallback(reason);
	        dispatch(showInterstice(false));
	    });
	}
	
	function forgotPassword(login, successCallback, failureCallback) {
	    return function (dispatch) {
	
	        dispatch(showInterstice(true));
	
	        profileApi.getProfileForPasswordReset(login).then(function () {
	            sendForgotPassword(dispatch, login, successCallback, failureCallback);
	            dispatch(showInterstice(false));
	        }).catch(function (reason) {
	            failureCallback(reason);
	            dispatch(showInterstice(false));
	        });
	    };
	}
	
	function switchCountry(ctry, lang) {
	    return function (dispatch) {
	        profileApi.switchCountry(ctry || Locale.COUNTRIES.US, lang || Locale.LANGUAGES.EN).then(function (data) {
	            //Analytics
	            anaUtils.setNextPageData({
	                navigationInfo: anaUtils.buildNavPath(['toolbar', 'change country', data.profileLocale.toLowerCase() + '-' + data.profileLanguage.toLowerCase()])
	            });
	
	            /**
	             * Clear basket and category data cache whenever user switches country due to
	             * restrictions that may appear per locale.
	             */
	            Storage.local.removeItem(LOCAL_STORAGE.CATNAV);
	            Storage.local.removeItem(LOCAL_STORAGE.BASKET);
	            Storage.local.removeItem(LOCAL_STORAGE.USER_DATA);
	
	            var redirect = function redirect() {
	                if (data.redirectPath) {
	                    urlUtils.redirectTo(data.redirectPath);
	                } else {
	                    urlUtils.redirectTo(window.location.pathname);
	                }
	            };
	
	            // Show any warnings that occurred
	            if (data.profileWarnings) {
	                var _message2 = '';
	                for (var i = 0, n = data.profileWarnings.length; i < n; i++) {
	                    _message2 += data.profileWarnings[i].messages[0] + ' ';
	                }
	
	                dispatch(showCountrySwitcherModal(false));
	                dispatch(showInfoModal(true, 'Warning', _message2, null, redirect));
	            } else {
	                redirect();
	            }
	        });
	    };
	}
	
	function playSubscription(skuId, productId) {
	    var setPlayProductCookie = function setPlayProductCookie() {
	        var date = new Date();
	        date.setTime(date.getTime() + MILLISECONDS_IN_DAY);
	        date = date.toUTCString();
	        var playSubscriptionCookie = 'playSubscribeNowClicked=' + productId + '; Expires' + date + ';path=/';
	        document.cookie = playSubscriptionCookie;
	    };
	    var setPlayCookieAndCheckout = function setPlayCookieAndCheckout() {
	        var subscribeToPlay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
	        var authData = arguments[1];
	
	        // Set cookie to accessed from checkout page load
	        setPlayProductCookie();
	        if (subscribeToPlay) {
	            basketApi.subscribeToPlay(skuId, authData).then(function () {
	                urlUtils.redirectTo('/checkout');
	            });
	        } else {
	            urlUtils.redirectTo('/checkout');
	        }
	    };
	
	    return function (dispatch) {
	        basketApi.subscribeToPlay(skuId).then(function (response) {
	            var auth = __webpack_require__(/*! utils/Authentication */ 173);
	            if (response.subScriptionStatus === 'SUCCESS') {
	                setPlayCookieAndCheckout();
	            } else if (response.subScriptionStatus === 'NEEDS_LOG_IN') {
	                auth.requireAuthentication(true, true).then(function (data) {
	                    return setPlayCookieAndCheckout(true, data);
	                });
	            }
	
	            if (response.errorCode && response.errorCode === 403) {
	                auth.requireAuthentication(true, true).then(function (data) {
	                    return setPlayCookieAndCheckout(true, data);
	                });
	            } else if (response.errorCode) {
	                urlUtils.redirectTo('/play');
	            }
	        }).catch(function (error) {
	            // @ToDo: Capture error state
	            console.log(error);
	        });
	    };
	}
	
	module.exports = {
	    ERROR_CODES: ERROR_CODES,
	    TYPES: TYPES,
	    FRAGMENT_FOR_UPDATE: FRAGMENT_FOR_UPDATE,
	    register: register,
	    biRegister: biRegister,
	    update: update,
	    signIn: signIn,
	    signOut: signOut,
	    processUserFull: processUserFull,
	    checkUser: checkUser,
	    forgotPassword: forgotPassword,
	    switchCountry: switchCountry,
	    updateUserInformation: updateUserInformation,
	    updateUserFragment: updateUserFragment,
	    getUserFull: getUserFull,
	    playSubscription: playSubscription
	};

/***/ }),
/* 211 */
/*!**********************************************!*\
  !*** ./public_ufe/js/actions/LoveActions.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var profileApi = __webpack_require__(/*! services/api/profile */ 212);
	
	var TYPES = {
	    UPDATE_LOVES_LIST: 'UPDATE_LOVES_LIST',
	    UPDATE_SHOPPING_LIST_IDS: 'UPDATE_SHOPPING_LIST_IDS'
	};
	
	function setShoppingListIds(shoppingListItems) {
	    return shoppingListItems.map(function (love) {
	        return love.sku.skuId;
	    });
	}
	
	function updateLovesList(currentLoves) {
	    return {
	        type: TYPES.UPDATE_LOVES_LIST,
	        currentLoves: currentLoves
	    };
	}
	
	function getLovesList(profileId, callback) {
	    return function (dispatch) {
	        profileApi.getShoppingList(profileId).then(function (json) {
	            var loves = json.shoppingListItems;
	            if (typeof callback === 'function') {
	                callback(loves);
	            }
	            return dispatch(updateLovesList(loves));
	        });
	    };
	}
	
	function updateShoppingListIds(skuIdArray) {
	
	    /* See notes for this in reducers/loves.js */
	    return {
	        type: TYPES.UPDATE_SHOPPING_LIST_IDS,
	        shoppingListIds: skuIdArray
	    };
	}
	
	function setLovesList(shoppingList) {
	    return function (dispatch) {
	        var result = void 0;
	        if (shoppingList && shoppingList.shoppingListItems) {
	            var loves = shoppingList.shoppingListItems;
	            var loveIds = setShoppingListIds(loves);
	            dispatch(updateShoppingListIds(loveIds));
	            result = dispatch(updateLovesList(loves));
	        }
	        return result;
	    };
	}
	
	function lovesListChanged(data, profileId, dispatch, callback) {
	    if (typeof callback === 'function') {
	        callback();
	    }
	    dispatch(getLovesList(profileId, function (lovesRes) {
	        return dispatch(updateShoppingListIds(lovesRes.map(function (loveItem) {
	            return loveItem.sku.skuId;
	        })));
	    }));
	
	    // TODO 17.2: Handle optimistically
	}
	
	function addLove(data, callback) {
	    return function (dispatch, getState) {
	        var profileId = getState().user.profileId;
	        data = data instanceof Array ? data : [data];
	        profileApi.addItemsToShoppingList(data).then(function (res) {
	            lovesListChanged(res[data.length - 1], profileId, dispatch, callback);
	        });
	    };
	}
	
	function removeLove(data) {
	    return function (dispatch, getState) {
	        var profileId = getState().user.profileId;
	        data = data instanceof Array ? data : [data];
	        profileApi.removeItemsFromShoppingList(data, profileId).then(function (res) {
	            lovesListChanged(res[data.length - 1], profileId, dispatch);
	        });
	    };
	}
	
	module.exports = {
	    TYPES: TYPES,
	    getLovesList: getLovesList,
	    setLovesList: setLovesList,
	    updateLovesList: updateLovesList,
	    updateShoppingListIds: updateShoppingListIds,
	    addLove: addLove,
	    removeLove: removeLove
	};

/***/ }),
/* 212 */
/*!*****************************************************!*\
  !*** ./public_ufe/js/services/api/profile/index.js ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// This module provides API call methods for Sephora Commerce Profile APIs:
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Profile+APIs
	
	
	var createUser = __webpack_require__(/*! ./createUser */ 213);
	
	var _require = __webpack_require__(/*! ./getProfile */ 214),
	    getPublicProfileByNickname = _require.getPublicProfileByNickname,
	    getCurrentProfileEmailSubscriptionStatus = _require.getCurrentProfileEmailSubscriptionStatus,
	    lookupProfileByLogin = _require.lookupProfileByLogin,
	    getProfileForPasswordReset = _require.getProfileForPasswordReset;
	
	var getProfileFullInformation = __webpack_require__(/*! ./getProfileFullInformation */ 215);
	
	var _require2 = __webpack_require__(/*! ./getProfileIdentifiers */ 216),
	    getProfileIdentifiersByNickname = _require2.getProfileIdentifiersByNickname,
	    getProfileIdentifiersByPublicId = _require2.getProfileIdentifiersByPublicId,
	    getProfileIdentifiersByProfileId = _require2.getProfileIdentifiersByProfileId;
	
	var _require3 = __webpack_require__(/*! ./shoppingList */ 218),
	    getShoppingList = _require3.getShoppingList,
	    addItemsToShoppingList = _require3.addItemsToShoppingList,
	    removeItemsFromShoppingList = _require3.removeItemsFromShoppingList;
	
	var getOrderHistory = __webpack_require__(/*! ./getOrderHistory */ 219);
	var getReservations = __webpack_require__(/*! ./getReservations */ 220);
	var updateProfile = __webpack_require__(/*! ./updateProfile */ 221);
	var removePayPalFromProfile = __webpack_require__(/*! ./removePayPalFromProfile */ 222);
	var cancelSubscription = __webpack_require__(/*! ./cancelSubscription */ 223);
	var setNickname = __webpack_require__(/*! ./setNickname */ 224);
	var updatePlaySubscription = __webpack_require__(/*! ./playSubscription/updatePlaySubscription */ 225);
	
	var getCreditCardsFromProfile = __webpack_require__(/*! ./creditCards/getCreditCardsFromProfile */ 226);
	var setDefaultCreditCardOnProfile = __webpack_require__(/*! ./creditCards/setDefaultCreditCardOnProfile */ 227);
	var addCreditCardToProfile = __webpack_require__(/*! ./creditCards/addCreditCardToProfile */ 228);
	var updateCreditCardOnProfile = __webpack_require__(/*! ./creditCards/updateCreditCardOnProfile */ 229);
	var removeCreditCardFromProfile = __webpack_require__(/*! ./creditCards/removeCreditCardFromProfile */ 230);
	
	var _require4 = __webpack_require__(/*! ./mailingPreferences/promotionalEmails */ 231),
	    getPromotionalEmailPreferences = _require4.getPromotionalEmailPreferences,
	    setPromotionalEmailPreferences = _require4.setPromotionalEmailPreferences;
	
	var _require5 = __webpack_require__(/*! ./mailingPreferences/notificationsAndReminders */ 233),
	    getNotificationsAndRemindersPreferences = _require5.getNotificationsAndRemindersPreferences,
	    setNotificationsAndRemindersPreferences = _require5.setNotificationsAndRemindersPreferences;
	
	var _require6 = __webpack_require__(/*! ./mailingPreferences/postalMail */ 234),
	    getPostalMailPreferences = _require6.getPostalMailPreferences,
	    setPostalMailPreferences = _require6.setPostalMailPreferences;
	
	var _require7 = __webpack_require__(/*! ./mailingPreferences/play */ 235),
	    getPlayEmailPreferences = _require7.getPlayEmailPreferences;
	
	var getUserSpecificProductDetails = __webpack_require__(/*! ./getUserSpecificProductDetails */ 236);
	
	var enrollToSephoraEmails = __webpack_require__(/*! ./enrollToSephoraEmails */ 237);
	
	var getLithiumSSOToken = __webpack_require__(/*! ./getLithiumSSOToken */ 238);
	
	var addShippingAddress = __webpack_require__(/*! ./addresses/addShippingAddress */ 239);
	var getShippingAddresses = __webpack_require__(/*! ./addresses/getShippingAddresses */ 240);
	var removeShippingAddress = __webpack_require__(/*! ./addresses/removeShippingAddress */ 241);
	var updateShippingAddress = __webpack_require__(/*! ./addresses/updateShippingAddress */ 242);
	var setDefaultShippingAddress = __webpack_require__(/*! ./addresses/setDefaultShippingAddress */ 243);
	
	var _require8 = __webpack_require__(/*! ./getProfileSamples */ 244),
	    getProfileSamplesByDMG = _require8.getProfileSamplesByDMG;
	
	var switchCountry = __webpack_require__(/*! ./switchCountry */ 245);
	
	module.exports = {
	        createUser: createUser,
	
	        getPublicProfileByNickname: getPublicProfileByNickname,
	        getCurrentProfileEmailSubscriptionStatus: getCurrentProfileEmailSubscriptionStatus,
	        getProfileIdentifiersByNickname: getProfileIdentifiersByNickname,
	        getProfileIdentifiersByPublicId: getProfileIdentifiersByPublicId,
	        getShoppingList: getShoppingList,
	        addItemsToShoppingList: addItemsToShoppingList,
	        removeItemsFromShoppingList: removeItemsFromShoppingList,
	        lookupProfileByLogin: lookupProfileByLogin,
	        getProfileForPasswordReset: getProfileForPasswordReset,
	        getProfileFullInformation: getProfileFullInformation,
	        getProfileIdentifiersByProfileId: getProfileIdentifiersByProfileId,
	        getOrderHistory: getOrderHistory,
	        getReservations: getReservations,
	        updateProfile: updateProfile,
	        removePayPalFromProfile: removePayPalFromProfile,
	        cancelSubscription: cancelSubscription,
	        setNickname: setNickname,
	        updatePlaySubscription: updatePlaySubscription,
	
	        getCreditCardsFromProfile: getCreditCardsFromProfile,
	        setDefaultCreditCardOnProfile: setDefaultCreditCardOnProfile,
	        addCreditCardToProfile: addCreditCardToProfile,
	        updateCreditCardOnProfile: updateCreditCardOnProfile,
	        removeCreditCardFromProfile: removeCreditCardFromProfile,
	
	        addShippingAddress: addShippingAddress,
	        getShippingAddresses: getShippingAddresses,
	        removeShippingAddress: removeShippingAddress,
	        updateShippingAddress: updateShippingAddress,
	        setDefaultShippingAddress: setDefaultShippingAddress,
	
	        getPromotionalEmailPreferences: getPromotionalEmailPreferences,
	        setPromotionalEmailPreferences: setPromotionalEmailPreferences,
	        getNotificationsAndRemindersPreferences: getNotificationsAndRemindersPreferences,
	        setNotificationsAndRemindersPreferences: setNotificationsAndRemindersPreferences,
	        getPostalMailPreferences: getPostalMailPreferences,
	        setPostalMailPreferences: setPostalMailPreferences,
	        getPlayEmailPreferences: getPlayEmailPreferences,
	
	        getUserSpecificProductDetails: getUserSpecificProductDetails,
	
	        enrollToSephoraEmails: enrollToSephoraEmails,
	
	        getLithiumSSOToken: getLithiumSSOToken,
	
	        getProfileSamplesByDMG: getProfileSamplesByDMG,
	
	        switchCountry: switchCountry
	};

/***/ }),
/* 213 */
/*!**********************************************************!*\
  !*** ./public_ufe/js/services/api/profile/createUser.js ***!
  \**********************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Create+User+API
	
	
	function createUser(profileData) {
	    return refetch.fetch(restApi.getRestLocation('/api/users/profile'), {
	        method: 'POST',
	        body: JSON.stringify(profileData)
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = createUser;

/***/ }),
/* 214 */
/*!**********************************************************!*\
  !*** ./public_ufe/js/services/api/profile/getProfile.js ***!
  \**********************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Get+Profile+API
	
	
	function getPublicProfileByNickname(nickname) {
	    var url = '/api/users/profiles/' + nickname + '?source=public';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'GET'
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	function getCurrentProfileEmailSubscriptionStatus() {
	    var url = '/api/users/profiles/current?propertiesToInclude=emailSubscriptionInfo';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'GET'
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data.emailSubscriptionInfo && data.emailSubscriptionInfo.subscriptionStatus === 'SUBSCRIBED';
	    });
	}
	
	function lookupProfileByLogin(login) {
	    var url = '/api/users/profiles/' + login + '?source=lookup';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'GET'
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	function getProfileForPasswordReset(profileId) {
	    var url = '/api/users/profiles/' + profileId + '?source=resetPassword';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'GET'
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = {
	    getPublicProfileByNickname: getPublicProfileByNickname,
	    getCurrentProfileEmailSubscriptionStatus: getCurrentProfileEmailSubscriptionStatus,
	    lookupProfileByLogin: lookupProfileByLogin,
	    getProfileForPasswordReset: getProfileForPasswordReset
	};

/***/ }),
/* 215 */
/*!*************************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/getProfileFullInformation.js ***!
  \*************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	var urlUtils = __webpack_require__(/*! utils/Url */ 2);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Get+Profile+Full+Information
	
	
	function getProfileFullInformation(profileId, options) {
	
	    var url = '/api/users/profiles/' + profileId + '/full';
	
	    var skipApis = options.skipApis,
	        includeApis = options.includeApis,
	        includeTargeters = options.includeTargeters,
	        productId = options.productId,
	        preferedSku = options.preferedSku;
	
	
	    var qsParams = {
	        skipApis: skipApis,
	        includeApis: includeApis,
	        includeTargeters: includeTargeters,
	        productId: productId,
	        preferedSku: preferedSku
	    };
	
	    var qs = urlUtils.makeQueryString(qsParams);
	
	    if (qs) {
	        url += '?' + qs;
	    }
	
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'GET'
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = getProfileFullInformation;

/***/ }),
/* 216 */
/*!*********************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/getProfileIdentifiers.js ***!
  \*********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	var cacheConcern = __webpack_require__(/*! services/api/cache */ 217);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Get+Profile+Identifiers+API
	
	
	var InputType = {
	    PROFILE_ID: 'profileId',
	    PUBLIC_ID: 'publicId',
	    NICKNAME: 'nickName'
	};
	
	var getProfileIdentifiers = function getProfileIdentifiers(inputId, type) {
	    var url = '/api/users/profileIdentifiers/' + inputId + '?type=' + type;
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'GET'
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	};
	
	getProfileIdentifiers = cacheConcern.decorate('getProfileIdentifiers', getProfileIdentifiers);
	
	function getProfileIdentifiersByNickname(inputId) {
	    return getProfileIdentifiers(inputId, InputType.NICKNAME);
	}
	
	function getProfileIdentifiersByPublicId(inputId) {
	    return getProfileIdentifiers(inputId, InputType.PUBLIC_ID);
	}
	
	function getProfileIdentifiersByProfileId(inputId) {
	    return getProfileIdentifiers(inputId, InputType.PROFILE_ID);
	}
	
	module.exports = {
	    getProfileIdentifiersByNickname: getProfileIdentifiersByNickname,
	    getProfileIdentifiersByPublicId: getProfileIdentifiersByPublicId,
	    getProfileIdentifiersByProfileId: getProfileIdentifiersByProfileId
	};

/***/ }),
/* 217 */
/*!*********************************************!*\
  !*** ./public_ufe/js/services/api/cache.js ***!
  \*********************************************/
/***/ (function(module, exports) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var cacheConcern = function () {
	    var cache = {};
	
	    function decorate(cacheNamespace, decoratedMethod) {
	        if (!cache[cacheNamespace]) {
	            cache[cacheNamespace] = {};
	        }
	
	        var decorated = function decorated() {
	            for (var _len = arguments.length, callArgs = Array(_len), _key = 0; _key < _len; _key++) {
	                callArgs[_key] = arguments[_key];
	            }
	
	            var cacheKey = callArgs.map(function (arg) {
	                return (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object' ? JSON.stringify(arg) : arg;
	            }).join(',');
	
	            var promise = void 0;
	
	            if (cache[cacheNamespace][cacheKey]) {
	                console.debug('CACHE HIT:', cacheNamespace, cacheKey);
	                promise = Promise.resolve(cache[cacheNamespace][cacheKey]);
	            } else {
	                promise = decoratedMethod.apply(null, callArgs).then(function (data) {
	                    cache[cacheNamespace][cacheKey] = data;
	                    return data;
	                });
	            }
	
	            return promise;
	        };
	
	        return decorated;
	    }
	
	    function clearCache(namespace) {
	        if (!namespace) {
	            cache = {};
	        } else {
	            cache[namespace] = {};
	        }
	    }
	
	    return {
	        clearCache: clearCache,
	        decorate: decorate
	    };
	}();
	
	module.exports = cacheConcern;

/***/ }),
/* 218 */
/*!************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/shoppingList.js ***!
  \************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Get+Shopping+List
	
	
	var _refetchAll = function _refetchAll(requestParamsList) {
	    return Promise.all(requestParamsList.map(function (requestParams) {
	        return refetch.fetch(requestParams.url, requestParams.options);
	    })).then(function (values) {
	        var promise = void 0;
	
	        var errors = values.filter(function (data) {
	            return data.errorCode;
	        });
	        if (errors.length) {
	            promise = Promise.reject(errors);
	        } else {
	            promise = Promise.resolve(values);
	        }
	
	        return promise;
	    });
	};
	
	function addItemsToShoppingList(params) {
	    return _refetchAll(params.map(function (data) {
	        return {
	            url: restApi.getRestLocation('/api/users/profiles/shoppingList'),
	            options: {
	                method: 'POST',
	                body: JSON.stringify({
	                    skuId: data.skuId,
	                    source: data.loveSource
	                })
	            }
	        };
	    }));
	}
	
	function removeItemsFromShoppingList(params, profileId) {
	    return _refetchAll(params.map(function (skuId) {
	        return {
	            url: restApi.getRestLocation('/api/users/profiles/' + profileId + '/shoppingList/' + skuId),
	            options: {
	                method: 'DELETE'
	            }
	        };
	    }));
	}
	
	function getShoppingList(profileId) {
	    var url = '/api/users/profiles/' + profileId + '/shoppingList';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'GET'
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = {
	    addItemsToShoppingList: addItemsToShoppingList,
	    removeItemsFromShoppingList: removeItemsFromShoppingList,
	    getShoppingList: getShoppingList
	};

/***/ }),
/* 219 */
/*!***************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/getOrderHistory.js ***!
  \***************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Get+Order+History+API
	
	
	function getOrderHistory(userProfileId, page, limit) {
	    var url = '/api/users/profiles/' + userProfileId + '/orders?' + ('currentPage=' + page + '&') + ('itemsPerPage=' + limit);
	    return refetch.fetch(restApi.getRestLocation(url), { method: 'GET' }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : {
	            numOrders: data.orderCount,
	            orders: data.orders
	        };
	    });
	}
	
	module.exports = getOrderHistory;

/***/ }),
/* 220 */
/*!***************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/getReservations.js ***!
  \***************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Get+Reservations+API
	
	
	function getReservations(profileId) {
	    var url = '/api/users/profiles/' + profileId + '/reservations';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'GET'
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = getReservations;

/***/ }),
/* 221 */
/*!*************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/updateProfile.js ***!
  \*************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Update+Profile+API
	
	
	function updateProfile(profileData) {
	    return refetch.fetch(restApi.getRestLocation('/api/users/profile'), {
	        method: 'PUT',
	        body: JSON.stringify(profileData)
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = updateProfile;

/***/ }),
/* 222 */
/*!***********************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/removePayPalFromProfile.js ***!
  \***********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Remove+PayPal+from+Profile+API
	
	
	function removePayPalFromProfile(userProfileId) {
	    var url = '/api/users/profiles/' + userProfileId + '/paypal';
	    return refetch.fetch(restApi.getRestLocation(url), { method: 'DELETE' }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = removePayPalFromProfile;

/***/ }),
/* 223 */
/*!******************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/cancelSubscription.js ***!
  \******************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Cancel+Subscription+API
	
	
	function cancelSubscription(profileId, subscriptionType) {
	    var url = '/api/users/profiles/' + profileId + '/subscription/' + subscriptionType;
	    return refetch.fetch(restApi.getRestLocation(url), { method: 'DELETE' }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = cancelSubscription;

/***/ }),
/* 224 */
/*!***********************************************************!*\
  !*** ./public_ufe/js/services/api/profile/setNickname.js ***!
  \***********************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Set+Nickname+API
	
	
	function setNickname(nickname, provider) {
	    var url = '/api/users/profile/nickname';
	    var params = {
	        isAcceptCommunity: true,
	        nickName: nickname,
	        provider: provider
	    };
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'POST',
	        body: JSON.stringify(params)
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = setNickname;

/***/ }),
/* 225 */
/*!***************************************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/playSubscription/updatePlaySubscription.js ***!
  \***************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Update+PLAY+Subscription+API
	
	
	function updatePlaySubscription(orderId) {
	    var url = '/api/users/profiles/playSubscription';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'PUT',
	        body: JSON.stringify({ orderId: orderId })
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = updatePlaySubscription;

/***/ }),
/* 226 */
/*!*************************************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/creditCards/getCreditCardsFromProfile.js ***!
  \*************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Get+Credit+Cards+from+Profile+API
	
	
	function getCreditCardsFromProfile(userProfileId) {
	    // Add cachebuster for browsers that cache this call
	    var cacheBuster = Math.round(new Date().getTime() / 1000);
	    var url = '/api/users/profiles/' + userProfileId + '/creditCards?cb=' + cacheBuster;
	    return refetch.fetch(restApi.getRestLocation(url), { method: 'GET' }).then(function (data) {
	        var promise = void 0;
	
	        if (data.errorCode) {
	            promise = Promise.reject(data);
	        } else {
	            var payments = data;
	
	            //if creditCards array comes back not empty, double check the order
	            if (payments.creditCards.length && !payments.creditCards[0].isDefault) {
	                for (var i = 0; i < payments.creditCards.length; i++) {
	                    if (payments.creditCards[i].isDefault) {
	                        payments.creditCards.unshift(payments.creditCards.splice(i, 1)[0]);
	                        break;
	                    }
	                }
	            }
	
	            promise = Promise.resolve(payments);
	        }
	
	        return promise;
	    });
	}
	
	module.exports = getCreditCardsFromProfile;

/***/ }),
/* 227 */
/*!*****************************************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/creditCards/setDefaultCreditCardOnProfile.js ***!
  \*****************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Set+Default+Credit+Card+on+Profile+API
	
	
	function setDefaultCreditCardOnProfile(creditCardId) {
	    var url = '/api/users/profiles/creditCards/defaultCreditCard';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'PUT',
	        body: JSON.stringify({ creditCardId: creditCardId })
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = setDefaultCreditCardOnProfile;

/***/ }),
/* 228 */
/*!**********************************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/creditCards/addCreditCardToProfile.js ***!
  \**********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Add+Credit+Card+to+Profile+API
	
	
	function addCreditCardToProfile(creditCardInfo) {
	    return refetch.fetch(restApi.getRestLocation('/api/users/profiles/creditCard'), {
	        method: 'POST',
	        body: JSON.stringify(creditCardInfo)
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = addCreditCardToProfile;

/***/ }),
/* 229 */
/*!*************************************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/creditCards/updateCreditCardOnProfile.js ***!
  \*************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Update+Credit+Card+on+Profile+API
	
	
	function updateCreditCardOnProfile(creditCardInfo) {
	    return refetch.fetch(restApi.getRestLocation('/api/users/profiles/creditCard'), {
	        method: 'PUT',
	        body: JSON.stringify(creditCardInfo)
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = updateCreditCardOnProfile;

/***/ }),
/* 230 */
/*!***************************************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/creditCards/removeCreditCardFromProfile.js ***!
  \***************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Remove+Credit+Card+from+Profile+API
	
	
	function removeCreditCardFromProfile(userProfileId, creditCardId) {
	    var url = '/api/users/profiles/' + userProfileId + '/creditCard/' + creditCardId;
	    return refetch.fetch(restApi.getRestLocation(url), { method: 'DELETE' }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = removeCreditCardFromProfile;

/***/ }),
/* 231 */
/*!************************************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/mailingPreferences/promotionalEmails.js ***!
  \************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/* eslint-disable no-shadow */
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	var updateProfile = __webpack_require__(/*! services/api/profile/updateProfile */ 221);
	
	var _require = __webpack_require__(/*! ../constants */ 232),
	    PROMOTIONAL_EMAILS_PREFS_COUNTRIES = _require.PROMOTIONAL_EMAILS_PREFS_COUNTRIES,
	    PromotionalEmailsPrefsFrequency = _require.PromotionalEmailsPrefsFrequency,
	    EmailSubscriptionTypes = _require.EmailSubscriptionTypes,
	    SubscriptionStatus = _require.SubscriptionStatus;
	
	function getPromotionalEmailPreferences(userProfileId) {
	    var url = '/api/users/profiles/' + userProfileId + '?' + 'propertiesToInclude=emailSubscriptionInfo';
	    return refetch.fetch(restApi.getRestLocation(url), { method: 'GET' }).then(function (data) {
	        var promise = void 0;
	
	        if (data.errorCode) {
	            promise = Promise.reject(data);
	        } else {
	            var subscriptions = data.emailSubscriptionInfo || [];
	
	            var consumerSubs = subscriptions.filter(function (data) {
	                return data.subscriptionType === EmailSubscriptionTypes.CONSUMER;
	            })[0];
	
	            var emailPrefs = {
	                subscribed: consumerSubs && consumerSubs.subscriptionStatus === SubscriptionStatus.SUBSCRIBED || false,
	                frequency: consumerSubs && consumerSubs.subscriptionFrequency || PromotionalEmailsPrefsFrequency.DAILY,
	                country: consumerSubs && consumerSubs.countryLocation || PROMOTIONAL_EMAILS_PREFS_COUNTRIES[0][0],
	                zipPostalCode: consumerSubs && consumerSubs.subscriptionZip || null
	            };
	
	            promise = Promise.resolve(emailPrefs);
	        }
	
	        return promise;
	    });
	}
	
	function setPromotionalEmailPreferences(userProfileId, prefs) {
	    return updateProfile({
	        fragmentForUpdate: 'EMAIL_SUBSCRIPTION',
	        emailSubscriptionInfo: {
	            subScribeToEmails: prefs.subscribed,
	            subscriptionType: EmailSubscriptionTypes.CONSUMER,
	            countryLocation: prefs.country,
	            subscriptionFrequency: prefs.frequency,
	            zipCode: prefs.zipPostalCode
	        }
	    });
	}
	
	module.exports = {
	    getPromotionalEmailPreferences: getPromotionalEmailPreferences,
	    setPromotionalEmailPreferences: setPromotionalEmailPreferences
	};

/***/ }),
/* 232 */
/*!*********************************************************!*\
  !*** ./public_ufe/js/services/api/profile/constants.js ***!
  \*********************************************************/
/***/ (function(module, exports) {

	'use strict';
	
	var PROMOTIONAL_EMAILS_PREFS_COUNTRIES = [['US', 'United States'], ['CA', 'Canada'], ['BR', 'Brazil'], ['DE', 'Germany'], ['JP', 'Japan'], ['MX', 'Mexico'], ['NL', 'Netherlands'], ['NO', 'Norway'], ['PR', 'Puerto Rico'], ['KR', 'South Korea'], ['UK', 'United Kingdom'], ['OT', 'Other']];
	
	var PromotionalEmailsPrefsFrequency = {
	    DAILY: 'DAILY',
	    WEEKLY: 'WEEKLY',
	    MONTHLY: 'MONTHLY'
	};
	
	var EmailSubscriptionTypes = {
	    CONSUMER: 'CONSUMER',
	    TRIGGERED: 'TRIGGERED',
	    PLAY: 'PLAY',
	    MAIL: 'MAIL'
	};
	
	var SubscriptionStatus = {
	    SUBSCRIBED: 'SUBSCRIBED',
	    UNSUBSCRIBED: 'UNSUBSCRIBED'
	};
	
	module.exports = {
	    PROMOTIONAL_EMAILS_PREFS_COUNTRIES: PROMOTIONAL_EMAILS_PREFS_COUNTRIES,
	    PromotionalEmailsPrefsFrequency: PromotionalEmailsPrefsFrequency,
	    EmailSubscriptionTypes: EmailSubscriptionTypes,
	    SubscriptionStatus: SubscriptionStatus
	};

/***/ }),
/* 233 */
/*!********************************************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/mailingPreferences/notificationsAndReminders.js ***!
  \********************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/* eslint-disable no-shadow */
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	var updateProfile = __webpack_require__(/*! services/api/profile/updateProfile */ 221);
	
	var _require = __webpack_require__(/*! ../constants */ 232),
	    EmailSubscriptionTypes = _require.EmailSubscriptionTypes,
	    SubscriptionStatus = _require.SubscriptionStatus;
	
	function getNotificationsAndRemindersPreferences(userProfileId) {
	    var url = '/api/users/profiles/' + userProfileId + '?' + 'propertiesToInclude=emailSubscriptionInfo';
	    return refetch.fetch(restApi.getRestLocation(url), { method: 'GET' }).then(function (data) {
	        var promise = void 0;
	
	        if (data.errorCode) {
	            promise = Promise.reject(data);
	        } else {
	            var subscriptions = data.emailSubscriptionInfo || [];
	
	            var triggeredSubs = subscriptions.filter(function (data) {
	                return data.subscriptionType === EmailSubscriptionTypes.TRIGGERED;
	            })[0];
	
	            var subscribed = triggeredSubs && triggeredSubs.subscriptionStatus === SubscriptionStatus.SUBSCRIBED || false;
	
	            var prefs = { subscribed: subscribed };
	
	            promise = Promise.resolve(prefs);
	        }
	
	        return promise;
	    });
	}
	
	function setNotificationsAndRemindersPreferences(prefs) {
	    return updateProfile({
	        fragmentForUpdate: 'EMAIL_SUBSCRIPTION',
	        emailSubscriptionInfo: {
	            subScribeToEmails: prefs.subscribed,
	            subscriptionType: EmailSubscriptionTypes.TRIGGERED
	        }
	    });
	}
	
	module.exports = {
	    getNotificationsAndRemindersPreferences: getNotificationsAndRemindersPreferences,
	    setNotificationsAndRemindersPreferences: setNotificationsAndRemindersPreferences
	};

/***/ }),
/* 234 */
/*!*****************************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/mailingPreferences/postalMail.js ***!
  \*****************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/* eslint-disable no-shadow */
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	var updateProfile = __webpack_require__(/*! services/api/profile/updateProfile */ 221);
	
	var _require = __webpack_require__(/*! ../constants */ 232),
	    EmailSubscriptionTypes = _require.EmailSubscriptionTypes,
	    SubscriptionStatus = _require.SubscriptionStatus;
	
	function getPostalMailPreferences(userProfileId) {
	    var url = '/api/users/profiles/' + userProfileId + '?' + 'propertiesToSkip=' + 'personalizedInformation,' + 'subcriptions,' + 'subsriptionPrograms,' + 'personalizedInformation&' + 'propertiesToInclude=' + 'catalogAddress,emailSubscriptionInfo';
	
	    return refetch.fetch(restApi.getRestLocation(url), { method: 'GET' }).then(function (data) {
	        var promise = void 0;
	
	        if (data.errorCode) {
	            promise = Promise.reject(data);
	        } else {
	            var catalogAddress = data.catalogAddress;
	            var emailSubscriptionInfo = data.emailSubscriptionInfo;
	            var mailSubscription = void 0;
	            var subscribed = false;
	            var prefs = void 0;
	
	            // Data from POSTAL mail subscription is included in
	            // emailSubscriptionInfo object
	            if (emailSubscriptionInfo) {
	                mailSubscription = emailSubscriptionInfo.filter(function (obj) {
	                    return obj.subscriptionType === EmailSubscriptionTypes.MAIL;
	                });
	
	                // Check if user is subscribed to postal mail
	                if (mailSubscription && mailSubscription.length > 0) {
	                    subscribed = mailSubscription[0].subscriptionStatus === SubscriptionStatus.SUBSCRIBED;
	                }
	            }
	
	            if (!catalogAddress) {
	                prefs = {
	                    subscribed: subscribed,
	                    address: {}
	                };
	            } else if (catalogAddress.firstName && catalogAddress.lastName && catalogAddress.isDefault === false && Object.keys(catalogAddress).length === 3) {
	                prefs = {
	                    subscribed: subscribed,
	                    address: {
	                        firstName: catalogAddress.firstName,
	                        lastName: catalogAddress.lastName
	                    }
	                };
	            } else {
	                prefs = {
	                    subscribed: subscribed,
	                    address: {
	                        firstName: catalogAddress.firstName,
	                        lastName: catalogAddress.lastName,
	                        city: catalogAddress.city,
	                        state: catalogAddress.state,
	                        address1: catalogAddress.address1,
	                        address2: catalogAddress.address2,
	                        postalCode: catalogAddress.postalCode
	                    }
	                };
	            }
	
	            promise = Promise.resolve(prefs);
	        }
	
	        return promise;
	    });
	}
	
	function setPostalMailPreferences(prefs) {
	    var data = {
	        fragmentForUpdate: 'CATALOG_ADDRESS',
	        catalogAddress: { subscribe: prefs.subscribed }
	    };
	
	    if (prefs.subscribed) {
	        data.catalogAddress.address = prefs.address;
	    }
	
	    return updateProfile(data);
	}
	
	module.exports = {
	    getPostalMailPreferences: getPostalMailPreferences,
	    setPostalMailPreferences: setPostalMailPreferences
	};

/***/ }),
/* 235 */
/*!***********************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/mailingPreferences/play.js ***!
  \***********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/* eslint-disable no-shadow */
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	var updateProfile = __webpack_require__(/*! services/api/profile/updateProfile */ 221);
	
	var _require = __webpack_require__(/*! ../constants */ 232),
	    PROMOTIONAL_EMAILS_PREFS_COUNTRIES = _require.PROMOTIONAL_EMAILS_PREFS_COUNTRIES,
	    PromotionalEmailsPrefsFrequency = _require.PromotionalEmailsPrefsFrequency,
	    EmailSubscriptionTypes = _require.EmailSubscriptionTypes,
	    SubscriptionStatus = _require.SubscriptionStatus;
	
	function getPlayEmailPreferences(userProfileId) {
	    var url = '/api/users/profiles/' + userProfileId + '?' + 'propertiesToInclude=emailSubscriptionInfo';
	    return refetch.fetch(restApi.getRestLocation(url), { method: 'GET' }).then(function (data) {
	        var promise = void 0;
	
	        if (data.errorCode) {
	            promise = Promise.reject(data);
	        } else {
	            var subscriptions = data.emailSubscriptionInfo || [];
	
	            var playSubscription = subscriptions.filter(function (data) {
	                return data.subscriptionType === EmailSubscriptionTypes.PLAY;
	            });
	
	            // on occasion after updates to play mail subscription,
	            // there are two play mail subscriptions. Use the last one.
	            if (playSubscription.length) {
	                playSubscription = playSubscription[playSubscription.length - 1];
	            }
	
	            var playEmailPrefs = {
	                subscriptionType: EmailSubscriptionTypes.PLAY,
	                subScribeToEmails: playSubscription && playSubscription.subscriptionStatus === SubscriptionStatus.SUBSCRIBED || false,
	                subscriptionFrequency: playSubscription && playSubscription.subscriptionFrequency || PromotionalEmailsPrefsFrequency.DAILY,
	                countryLocation: playSubscription && playSubscription.countryLocation || PROMOTIONAL_EMAILS_PREFS_COUNTRIES[0][0],
	                zipCode: playSubscription && playSubscription.subscriptionZip || null
	            };
	
	            promise = Promise.resolve(playEmailPrefs);
	        }
	
	        return promise;
	    });
	}
	
	module.exports = {
	    getPlayEmailPreferences: getPlayEmailPreferences
	};

/***/ }),
/* 236 */
/*!*****************************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/getUserSpecificProductDetails.js ***!
  \*****************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172).fetch;
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Get+User-Specific+Product+Details+API
	
	function getUserSpecificProductDetails(productId) {
	    var skuId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
	
	    var url = '/api/users/profiles/current/product/' + productId + '?';
	    var queryParams = [];
	    queryParams.push('skipAddToRecentlyViewed=false');
	
	    if (skuId !== null) {
	        queryParams.push('preferedSku=' + skuId);
	    }
	
	    url = url + queryParams.join('&');
	
	    return refetch(restApi.getRestLocation(url), {
	        method: 'GET'
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    }).catch(function (reason) {
	        console.error('getUserSpecificProductDetails failed for ' + ('productId, skuId: ' + productId + ', ' + skuId + '.'));
	        return Promise.reject(reason);
	    });
	}
	
	module.exports = getUserSpecificProductDetails;

/***/ }),
/* 237 */
/*!*********************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/enrollToSephoraEmails.js ***!
  \*********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Sephora+Email+Subscription
	
	
	function enrollToSephoraEmails(email) {
	    var url = '/api/users/profile/emailSubscription';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'PUT',
	        body: JSON.stringify({ email: email })
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = enrollToSephoraEmails;

/***/ }),
/* 238 */
/*!******************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/getLithiumSSOToken.js ***!
  \******************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172).fetch;
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Get+Lithium+SSO+Token
	
	function getLithiumSSOToken(profileId) {
	    var url = '/api/users/profiles/' + profileId + '/lithiumSsoToken';
	    return refetch(restApi.getRestLocation(url), {
	        method: 'GET'
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data.lithiumSsoToken;
	    });
	}
	
	module.exports = getLithiumSSOToken;

/***/ }),
/* 239 */
/*!****************************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/addresses/addShippingAddress.js ***!
  \****************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Add+Shipping+Address+to+Profile+API
	
	
	function addShippingAddress(input) {
	    var url = '/api/users/profiles/address';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'POST',
	        body: JSON.stringify(input)
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = addShippingAddress;

/***/ }),
/* 240 */
/*!******************************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/addresses/getShippingAddresses.js ***!
  \******************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Get+Shipping+Addresses+from+Profile+API
	
	
	function getShippingAddresses(profileId) {
	    var url = '/api/users/profiles/' + profileId + '/addresses';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'GET'
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = getShippingAddresses;

/***/ }),
/* 241 */
/*!*******************************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/addresses/removeShippingAddress.js ***!
  \*******************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Remove+Shipping+Address+from+Profile+API
	
	
	function removeShippingAddress(profileId, addressId) {
	    var url = '/api/users/profiles/' + profileId + '/address/' + addressId;
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'DELETE'
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = removeShippingAddress;

/***/ }),
/* 242 */
/*!*******************************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/addresses/updateShippingAddress.js ***!
  \*******************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Update+Shipping+Address+on+Profile+API
	
	
	function updateShippingAddress(addressData) {
	    var url = '/api/users/profiles/address';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'PUT',
	        body: JSON.stringify(addressData)
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = updateShippingAddress;

/***/ }),
/* 243 */
/*!***********************************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/addresses/setDefaultShippingAddress.js ***!
  \***********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Set+Default+Shipping+Address+on+Profile+API
	
	
	function setDefaultShippingAddress(addressId) {
	    var url = '/api/users/profiles/address/defaultAddress';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'PUT',
	        body: JSON.stringify({ addressId: addressId })
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = setDefaultShippingAddress;

/***/ }),
/* 244 */
/*!*****************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/getProfileSamples.js ***!
  \*****************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	var urlUtils = __webpack_require__(/*! utils/Url */ 2);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Profile+Samples+List+API
	
	var PROFILE_SAMPLE_SOURCES = {
	    BI: 'biReward',
	    DMG: 'dmg',
	    IN_STORE: 'inStore',
	    ONLINE: 'online',
	    PLAY: 'play',
	    RECENT: 'recent'
	};
	
	/**
	 * Returns a list of samples from users profile for logged in or recognized users
	 * @param {String} profileId - profile Id of user to retrieve samples for
	 * @param {Array} sampleSources - any combination of one or more samples sources to be retrieved
	 * @oparam {Object} options - can include any of the params listed in the api above
	*/
	
	// ignorign jshint because jshint does not have object literal with spread syntax support
	/* jshint ignore:start */
	function getProfileSamples(profileId, sampleSources) {
	    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	    var url = '/api/users/profiles/' + profileId + '/samples';
	
	    var qsParams = _extends({
	        sampleSources: sampleSources.join(',')
	    }, options);
	
	    url += '?' + urlUtils.makeQueryString(qsParams);
	
	    return refetch.fetch(restApi.getRestLocation(url), { method: 'GET' }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	/* jshint ignore:end */
	
	function getProfileSamplesByDMG(profileId, options) {
	    return getProfileSamples(profileId, [PROFILE_SAMPLE_SOURCES.DMG], options).then(function (data) {
	        return data.dmg;
	    });
	}
	
	//currently not exporting generic getProfileSamples, please change if needed
	module.exports = {
	    getProfileSamplesByDMG: getProfileSamplesByDMG,
	    getProfileSamples: getProfileSamples
	};

/***/ }),
/* 245 */
/*!*************************************************************!*\
  !*** ./public_ufe/js/services/api/profile/switchCountry.js ***!
  \*************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Switch+Country+API
	
	function switchCountry(switchToCountry, languageCode) {
	    var url = '/api/users/profile/switchCountry';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'PUT',
	        body: JSON.stringify({ switchToCountry: switchToCountry, languageCode: languageCode })
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = switchCountry;

/***/ }),
/* 246 */
/*!*************************************************!*\
  !*** ./public_ufe/js/actions/ProductActions.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var snbApi = __webpack_require__(/*! services/api/search-n-browse */ 247);
	
	var TYPES = {
	    CHANGE_CURRENT_SKU: 'CHANGE_CURRENT_SKU',
	    SUBSCRIPTION: {
	        TYPE: 'outOfStock',
	        ACTION_TYPE: 'cancel'
	    },
	    UPDATE_CURRENT_PRODUCT: 'UPDATE_CURRENT_PRODUCT',
	    UPDATE_CURRENT_PRODUCT_USER_SPECIFIC: 'UPDATE_CURRENT_PRODUCT_USER_SPECIFIC',
	    UPDATE_CURRENT_SKU_IN_CURRENT_PRODUCT: 'UPDATE_CURRENT_SKU_IN_CURRENT_PRODUCT',
	    UPDATE_QUANTITY_OF_CURRENT_SKU: 'UPDATE_QUANTITY_OF_CURRENT_SKU',
	    HOVERED_SKU: 'HOVERED_SKU',
	    TOGGLE_CUSTOM_SETS: 'TOGGLE_CUSTOM_SETS',
	    CUSTOM_SETS_CHOICE_UPDATED: 'CUSTOM_SETS_CHOICE_UPDATED',
	    REVIEW_FILTERS_APPLIED: 'REVIEW_FILTERS_APPLIED',
	    BEAUTY_MATCH_FILTERS_TOGGLED: 'BEAUTY_MATCH_FILTERS_TOGGLED',
	    GALLERY_FILTERS_APPLIED: 'GALLERY_FILTERS_APPLIED',
	    RESET_GALLERY_FILTERS: 'RESET_GALLERY_FILTERS',
	    TOGGLE_SWATCHES: 'TOGGLE_SWATCHES',
	    ADD_FLASH_ON_PDP: 'ADD_FLASH_ON_PDP'
	};
	
	var SKU_UPDATE_SOURCE = {
	    SWATCHES: 'SWATCHES',
	    QUERY_STRING: 'QUERY_STRING'
	};
	
	module.exports = {
	
	    SKU_UPDATE_SOURCE: SKU_UPDATE_SOURCE,
	
	    TYPES: TYPES,
	
	    changeCurrentSku: function changeCurrentSku(sku) {
	        return {
	            type: TYPES.CHANGE_CURRENT_SKU,
	            currentSku: sku
	        };
	    },
	
	    updateCurrentProduct: function updateCurrentProduct(currentProduct) {
	        return {
	            type: TYPES.UPDATE_CURRENT_PRODUCT,
	            currentProduct: currentProduct
	        };
	    },
	
	    /**
	     * Mixes the user specific data in to the product (on all sku levels) and updates
	     * the product in the store
	     * @returns {{type: *, userSpecificProductDetails: *}}
	     */
	    updateCurrentUserSpecificProduct: function updateCurrentUserSpecificProduct(userSpecificProductDetails) {
	        return {
	            type: TYPES.UPDATE_CURRENT_PRODUCT_USER_SPECIFIC,
	            currentProductUserSpecificDetails: userSpecificProductDetails
	        };
	    },
	
	    updateSkuInCurrentProduct: function updateSkuInCurrentProduct(newCurrentSku, source) {
	        return {
	            type: TYPES.UPDATE_CURRENT_SKU_IN_CURRENT_PRODUCT,
	            currentSkuInProduct: newCurrentSku,
	            source: source
	        };
	    },
	
	    updateQuantityOfCurrentSku: function updateQuantityOfCurrentSku(quantity) {
	        return {
	            type: TYPES.UPDATE_QUANTITY_OF_CURRENT_SKU,
	            currentSkuQuantity: quantity
	        };
	    },
	
	    hoveredSku: function hoveredSku(_hoveredSku) {
	        return {
	            type: TYPES.HOVERED_SKU,
	            hoveredSku: _hoveredSku
	        };
	    },
	
	    updateCustomSetsChoices: function updateCustomSetsChoices(customSetsChoices) {
	        return {
	            type: TYPES.CUSTOM_SETS_CHOICE_UPDATED,
	            customSetsChoices: customSetsChoices
	        };
	    },
	
	    toggleCustomSets: function toggleCustomSets(isOpen) {
	        return {
	            type: TYPES.TOGGLE_CUSTOM_SETS,
	            isOpen: isOpen
	        };
	    },
	
	    // forceapply tells ReviewsFilters to update, even if
	    // filters have not changed
	    applyReviewFilters: function applyReviewFilters(filters) {
	        var forceApply = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	
	        return {
	            type: TYPES.REVIEW_FILTERS_APPLIED,
	            filters: filters,
	            apply: forceApply
	        };
	    },
	
	    beautyMatchFiltersToggled: function beautyMatchFiltersToggled(filters, isChecked, name) {
	        return {
	            type: TYPES.BEAUTY_MATCH_FILTERS_TOGGLED,
	            filters: filters,
	            isChecked: isChecked,
	            name: name
	        };
	    },
	
	    applyGalleryFilters: function applyGalleryFilters(filters, isBeautyMatch) {
	        return {
	            type: TYPES.GALLERY_FILTERS_APPLIED,
	            filters: filters,
	            isBeautyMatch: isBeautyMatch
	        };
	    },
	
	    resetGalleryFilters: function resetGalleryFilters() {
	        return {
	            type: TYPES.RESET_GALLERY_FILTERS,
	            filters: []
	        };
	    },
	
	    fetchCurrentProduct: function fetchCurrentProduct(productId, skuId) {
	        var _this = this;
	
	        return function (dispatch) {
	            return snbApi.getProductDetails(productId, skuId, { addCurrentSkuToProductChildSkus: true }).then(function (data) {
	                return dispatch(_this.updateCurrentProduct(data));
	            });
	        };
	    },
	
	    toggleSwatches: function toggleSwatches(isExpand) {
	        return {
	            type: TYPES.TOGGLE_SWATCHES,
	            isExpand: isExpand
	        };
	    },
	
	    toggleAddFlashOnPdp: function toggleAddFlashOnPdp(newState) {
	        return {
	            type: TYPES.ADD_FLASH_ON_PDP,
	            state: newState
	        };
	    }
	};

/***/ }),
/* 247 */
/*!*************************************************************!*\
  !*** ./public_ufe/js/services/api/search-n-browse/index.js ***!
  \*************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// This module provides API call methods for Sephora Commerce
	// Search & Browse APIs:
	// https://jira.sephora.com/wiki/pages/viewpage.action?pageId=120041949
	
	var getProductDetails = __webpack_require__(/*! ./getProductDetails */ 248);
	var getSkuDetails = __webpack_require__(/*! ./getSkuDetails */ 249);
	var findInStore = __webpack_require__(/*! ./findInStore */ 250);
	var searchProductsByKeyword = __webpack_require__(/*! ./searchProductsByKeyword */ 251);
	var searchTypeAhead = __webpack_require__(/*! ./searchTypeAhead */ 252);
	var getNthLevelCategory = __webpack_require__(/*! ./getNthLevelCategory */ 253);
	
	module.exports = {
	    getProductDetails: getProductDetails,
	    getSkuDetails: getSkuDetails,
	    findInStore: findInStore,
	    searchProductsByKeyword: searchProductsByKeyword,
	    searchTypeAhead: searchTypeAhead,
	    getNthLevelCategory: getNthLevelCategory
	};

/***/ }),
/* 248 */
/*!*************************************************************************!*\
  !*** ./public_ufe/js/services/api/search-n-browse/getProductDetails.js ***!
  \*************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Get+Product+Details+API
	
	function addCurrentSkuToProductChildSkus(productData) {
	    var _productData$regularC = productData.regularChildSkus,
	        regularChildSkus = _productData$regularC === undefined ? [] : _productData$regularC,
	        _productData$onSaleCh = productData.onSaleChildSkus,
	        onSaleChildSkus = _productData$onSaleCh === undefined ? [] : _productData$onSaleCh,
	        _productData$currentS = productData.currentSku,
	        currentSku = _productData$currentS === undefined ? {} : _productData$currentS;
	
	
	    if (currentSku.salePrice) {
	        if (!onSaleChildSkus.filter(function (sku) {
	            return sku.skuId === currentSku.skuId;
	        }).length) {
	            onSaleChildSkus.unshift(currentSku);
	        }
	    } else {
	        if (!regularChildSkus.filter(function (sku) {
	            return sku.skuId === currentSku.skuId;
	        }).length) {
	            regularChildSkus.unshift(currentSku);
	        }
	    }
	
	    productData.regularChildSkus = regularChildSkus;
	    productData.onSaleChildSkus = onSaleChildSkus;
	    return productData;
	}
	
	function getProductDetails(productId) {
	    var skuId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
	    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	    var url = restApi.getRestLocation('/api/catalog/products/');
	    var opts = Object.assign({}, options);
	
	    if (skuId) {
	        url += productId + '?preferedSku=' + skuId + '&includeConfigurableSku=true';
	    } else {
	        url += productId;
	    }
	
	    return refetch.fetch(url).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : function () {
	            var promise = void 0;
	
	            if (opts.addCurrentSkuToProductChildSkus) {
	                promise = Promise.resolve(addCurrentSkuToProductChildSkus(data));
	            } else {
	                promise = Promise.resolve(data);
	            }
	
	            return promise;
	        }();
	    });
	}
	
	module.exports = getProductDetails;

/***/ }),
/* 249 */
/*!*********************************************************************!*\
  !*** ./public_ufe/js/services/api/search-n-browse/getSkuDetails.js ***!
  \*********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Get+SKU+Detail+API
	
	// (!) As of 8/29/2017 this seems to be unused.
	
	function getSkuDetails(skuId) {
	    var url = '/api/catalog/skus/' + skuId;
	
	    return refetch.fetch(restApi.getRestLocation(url)).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = getSkuDetails;

/***/ }),
/* 250 */
/*!*******************************************************************!*\
  !*** ./public_ufe/js/services/api/search-n-browse/findInStore.js ***!
  \*******************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Find+In+Store+API
	
	
	/**
	 * Find specific SKU in stores by some geo data.
	 * @param skuId string  sku id of product
	 * @param params object {zipCode, radius, latitude, longitude}
	 * @returns {Promise}
	 */
	function findInStore(skuId) {
	    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    var url = '/api/catalog/skus/' + skuId + '/search?';
	    var queryParams = [];
	    if (params.zipCode) {
	        queryParams.push('zipCode=' + params.zipCode);
	    }
	
	    if (params.radius) {
	        queryParams.push('radius=' + params.radius);
	    }
	
	    if (params.latitude && params.longitude) {
	        queryParams.push('latitude=' + params.latitude);
	        queryParams.push('longitude=' + params.longitude);
	    }
	
	    var apiUrl = url + queryParams.join('&');
	    return refetch.fetch(restApi.getRestLocation(apiUrl), {
	        method: 'GET'
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = findInStore;

/***/ }),
/* 251 */
/*!*******************************************************************************!*\
  !*** ./public_ufe/js/services/api/search-n-browse/searchProductsByKeyword.js ***!
  \*******************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Keyword+Search+API
	
	function searchProductsByKeyword(query) {
	    var page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
	    var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 4;
	
	    var url = '/api/catalog/search/?type=keyword&q=' + query + '&' + ('currentPage=' + page + '&pageSize=' + limit);
	    return refetch.fetch(url, { method: 'GET' }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = searchProductsByKeyword;

/***/ }),
/* 252 */
/*!***********************************************************************!*\
  !*** ./public_ufe/js/services/api/search-n-browse/searchTypeAhead.js ***!
  \***********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Type+Ahead+Search+API
	
	function searchTypeAhead(query) {
	    var url = '/api/catalog/search/?type=typeahead&q=' + query;
	    return refetch.fetch(url, { method: 'GET' }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = searchTypeAhead;

/***/ }),
/* 253 */
/*!***************************************************************************!*\
  !*** ./public_ufe/js/services/api/search-n-browse/getNthLevelCategory.js ***!
  \***************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var urlUtils = __webpack_require__(/*! utils/Url */ 2);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Get+Nth+Level+Category+API
	
	function getNthLevelCategory(options) {
	    var categoryId = options.categoryId,
	        opts = _objectWithoutProperties(options, ['categoryId']);
	
	    var url = '/api/catalog/categories/' + categoryId + '/products';
	
	    if (Object.keys(opts).length) {
	        url += '?' + urlUtils.makeQueryString(opts);
	    }
	
	    return refetch.fetch(url, { method: 'GET' }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = getNthLevelCategory;

/***/ }),
/* 254 */
/*!******************************************************!*\
  !*** ./public_ufe/js/actions/WelcomePopupActions.js ***!
  \******************************************************/
/***/ (function(module, exports) {

	'use strict';
	
	var TYPES = {
	    UPDATE_WELCOME: 'UPDATE_WELCOME'
	};
	
	module.exports = {
	    TYPES: TYPES,
	
	    updateWelcome: function updateWelcome(welcomeMat) {
	        return {
	            type: TYPES.UPDATE_WELCOME,
	            welcomeMat: welcomeMat
	        };
	    }
	};

/***/ }),
/* 255 */
/*!**************************************************!*\
  !*** ./public_ufe/js/actions/TargeterActions.js ***!
  \**************************************************/
/***/ (function(module, exports) {

	'use strict';
	
	var TYPES = {
	    SET_RESULTS: 'SET_RESULTS'
	};
	
	function setResults(results) {
	    return {
	        type: TYPES.SET_RESULTS,
	        results: results
	    };
	}
	
	module.exports = {
	    TYPES: TYPES,
	    setResults: setResults
	};

/***/ }),
/* 256 */
/*!****************************************************!*\
  !*** ./public_ufe/js/actions/SocialInfoActions.js ***!
  \****************************************************/
/***/ (function(module, exports) {

	'use strict';
	
	var TYPES = {
	    SET_USER_SOCIAL_INFO: 'SET_USER_SOCIAL_INFO',
	    SET_LITHIUM_SUCCESS_STATUS: 'SET_LITHIUM_SUCCESS_STATUS'
	};
	
	module.exports = {
	    TYPES: TYPES,
	
	    setUserSocialInfo: function setUserSocialInfo(data) {
	        return {
	            type: TYPES.SET_USER_SOCIAL_INFO,
	            socialInfo: data
	        };
	    },
	
	    setLithiumSuccessStatus: function setLithiumSuccessStatus(data) {
	        return {
	            type: TYPES.SET_LITHIUM_SUCCESS_STATUS,
	            isLithiumSuccessful: data
	        };
	    }
	};

/***/ }),
/* 257 */
/*!**********************************************************!*\
  !*** ./public_ufe/js/services/api/thirdparty/Lithium.js ***!
  \**********************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/* eslint-disable max-len */
	var apiUtil = __webpack_require__(/*! utils/Api */ 258);
	var cookieUtil = __webpack_require__(/*! utils/Cookies */ 5);
	var profileApi = __webpack_require__(/*! services/api/profile */ 212);
	var userUtil = __webpack_require__(/*! utils/User */ 186);
	
	//TODO: 17.6 LITHIUM_API_TOKEN_COOKIE_NAME cookie name will need to be updated
	var LITHIUM_API_HOST = Sephora.configurationSettings.communitySiteHost;
	var LITHIUM_API_TOKEN_COOKIE_NAME = 'lithiumSSO:sephora.qa';
	var LITHIUM_SESSION_KEY_COOKIE_NAME = 'LiSESSIONID';
	// Since this is not really used, commenting this for now (see authenticate method below).
	// const LITHIUM_BASIC_AUTH_KEY = Sephora.configurationSettings.lithiumApi.token;
	var SUCCESS_MESSAGE = 'success';
	var IS_LITHIUM_ENABLED = true;
	var BACKGROUND_PHOTO_DEFAULT = 'https://' + LITHIUM_API_HOST + '/html/assets/coverphoto_default.jpg';
	var AVATAR_PHOTO_DEFAULT = 'https://' + LITHIUM_API_HOST + '/t5/image/serverpage/avatar-name/default-avatar/avatar-theme/sephora/avatar-collection/sephora/avatar-display-size/profile/version/2';
	
	function _lithiumApiRequest(options) {
	    if (IS_LITHIUM_ENABLED === false) {
	        return Promise.reject('Lithium is disabled');
	    }
	
	    var qsParams = Object.assign({}, options.qsParams, { 'restapi.response_format': 'json' });
	
	    var opts = Object.assign({}, options, {
	        url: 'https://' + LITHIUM_API_HOST + options.url,
	        headers: options.headers,
	        qsParams: qsParams,
	        params: options.params
	    });
	
	    return apiUtil.request(opts).then(function (response) {
	        return response.json();
	    }).then(function (data) {
	
	        var result = void 0;
	
	        // For the time being, Lithium does not maintain solid structure
	        // throughout its responses. That's why we need to look through
	        // them carefully to tell if one is success or not.
	
	        // NOTE: data.response exists in authentication response.
	        if (data.response && data.response.status === 'success') {
	            data = data.response;
	            delete data.status;
	            result = data;
	        } else if (data.status === 'success') {
	            delete data.status;
	            result = data;
	        } else if (data.status === 'error') {
	            result = Promise.reject(data.error);
	        } else {
	            console.debug('Unexpected response from Lithium', data);
	            result = Promise.reject(data);
	        }
	
	        return result;
	    }).catch(function (reason) {
	
	        var result = void 0;
	
	        if (reason instanceof Error && reason.message === 'Failed to fetch') {
	            result = Promise.reject('cors 403');
	        } else if (reason.code === 302) {
	            // Object {code: 302, message: "User authentication failed."}
	            result = Promise.reject('session expired');
	        } else {
	            result = Promise.reject(reason);
	        }
	
	        return result;
	    });
	}
	
	function lithiumAuthenticatedApiRequest(options) {
	    var LITHIUM_SESSION_KEY = cookieUtil.read(LITHIUM_SESSION_KEY_COOKIE_NAME);
	
	    var qsParams = Object.assign({}, options.qsParams, { 'restapi.session_key': LITHIUM_SESSION_KEY });
	
	    var opts = Object.assign({}, options, { qsParams: qsParams });
	
	    return _lithiumApiRequest(opts);
	}
	
	function authenticate() {
	    var LITHIUM_API_TOKEN = cookieUtil.read(LITHIUM_API_TOKEN_COOKIE_NAME);
	
	    var opts = {
	        url: '/restapi/vc/authentication/sessions/login',
	        method: 'POST',
	
	        // TODO (mykhaylo.gavrylyuk): Figure out why Lithium insisted on having
	        // this. Allowing this header would result in OPTIONS request that would
	        // fail with the below error.
	        // --- Response to preflight request doesn't pass access control check:
	        // --- No 'Access-Control-Allow-Origin' header is present on
	        // --- the requested resource. Origin 'https://m-local.sephora.com' is
	        // --- therefore not allowed access. If an opaque response serves your
	        // --- needs, set the request's mode to 'no-cors' to fetch the resource
	        // --- with CORS disabled.
	        //
	        //headers: {
	        //    Authorization: `Basic ${LITHIUM_BASIC_AUTH_KEY}`
	        //},
	
	        qsParams: { 'sso.authentication_token': LITHIUM_API_TOKEN }
	    };
	
	    console.debug('Authenticating w/ Lithium...');
	
	    return _lithiumApiRequest(opts).then(function (data) {
	        cookieUtil.write(LITHIUM_SESSION_KEY_COOKIE_NAME, data.value.$);
	    });
	}
	
	function ensureUserIsAuthenticated(apiMethod) {
	
	    return function () {
	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	            args[_key] = arguments[_key];
	        }
	
	        return new Promise(function (resolve, reject) {
	            var retryCount = 0;
	            function shoot() {
	                console.debug('Shooting Lithium authed request', apiMethod.name, args);
	                apiMethod.apply(undefined, args).then(resolve).catch(function (reason1) {
	                    console.debug('Lithium authed request failed', reason1);
	                    authenticate().then(function () {
	                        if (retryCount < 2) {
	                            retryCount += 1;
	                            shoot();
	                        } else {
	                            reject(reason1);
	                        }
	                    }).catch(reject);
	                });
	            }
	
	            function getSSOTokenAndTryAgain() {
	                console.debug('Shooting Lithium SSO Token request', apiMethod.name, args);
	                profileApi.getLithiumSSOToken(userUtil.getProfileId()).then(function (token) {
	                    return cookieUtil.write(LITHIUM_API_TOKEN_COOKIE_NAME, token);
	                }).then(shoot).catch(reject);
	            }
	
	            var LITHIUM_SESSION_KEY = cookieUtil.read(LITHIUM_SESSION_KEY_COOKIE_NAME);
	
	            if (!LITHIUM_SESSION_KEY || LITHIUM_SESSION_KEY === '0') {
	                authenticate().then(shoot).catch(getSSOTokenAndTryAgain);
	            } else {
	                shoot();
	            }
	        });
	    };
	}
	
	function fixTyposInSocialInfoDataKeys(data) {
	    var copy = Object.assign({}, data);
	
	    copy.socialProfile = copy.social_profile;
	    copy.socialProfile.aboutMe = copy.socialProfile.about_me;
	    copy.socialProfile.isBeingFollowed = copy.socialProfile.is_being_followed;
	    copy.socialProfile.biBadgeUrl = copy.socialProfile.sephora_bi_badge;
	    copy.socialProfile.engagementBadgeUrl = copy.socialProfile.rank_badge;
	
	    var isFeaturedConversation = copy.recent_messages.length === 0;
	    copy.conversationsData = {
	        isFeaturedConversation: isFeaturedConversation,
	        conversations: isFeaturedConversation ? [copy.featured_message] : copy.recent_messages,
	        total: copy.recent_messages.length
	    };
	
	    var isFeaturedGroups = copy.recent_groups.length === 0;
	    copy.groupsData = {
	        isFeaturedGroups: isFeaturedGroups,
	        groups: isFeaturedGroups ? copy.featured_groups : copy.recent_groups,
	        total: copy.totalgroups
	    };
	
	    delete copy.recent_messages;
	    delete copy.totalgroups;
	    delete copy.social_profile;
	    delete copy.socialProfile.about_me;
	    delete copy.socialProfile.sephora_bi_badge;
	    delete copy.socialProfile.rank_badge;
	    delete copy.featured_message;
	    delete copy.recent_groups;
	    delete copy.featured_groups;
	    delete copy.socialProfile.is_being_followed;
	
	    // Reset the avatar coordinates by removing them from the URL
	    // TODO: Replace this with an API call once Lithium provides ones
	    var COORDINATES_REGEX = /(\/image-coordinates)([^\?]*)/;
	
	    if (copy.socialProfile.avatar && copy.socialProfile.avatar.match(COORDINATES_REGEX)) {
	        copy.socialProfile.avatar = copy.socialProfile.avatar.replace(COORDINATES_REGEX, '');
	    }
	
	    return copy;
	}
	
	function ensureBackgroundPhotoIsPresent(data) {
	    if (!data.socialProfile.background) {
	        data.socialProfile.background = BACKGROUND_PHOTO_DEFAULT;
	    }
	    return data;
	}
	
	var getAuthenticatedUserSocialInfo = function getAuthenticatedUserSocialInfo(userNickname) {
	    return lithiumAuthenticatedApiRequest({
	        method: 'GET',
	        url: '/sephora/plugins/custom/sephora/sephora/getuserrecentgroups',
	        qsParams: { username: userNickname }
	    }).then(function (data) {
	        return data['User_' + userNickname + '_Group_Info'];
	    }).then(fixTyposInSocialInfoDataKeys).then(ensureBackgroundPhotoIsPresent);
	};
	
	var joinOrLeaveGroup = function joinOrLeaveGroup(groupId, action) {
	    /* eslint-disable camelcase */
	    return lithiumAuthenticatedApiRequest({
	        method: 'GET',
	        url: '/sephora/plugins/custom/sephora/sephora/mobile.group_membership',
	        qsParams: {
	            group_id: groupId,
	            action: action
	        }
	    });
	};
	
	var updateUserSocialBio = function updateUserSocialBio(newBio, userNickname) {
	    return lithiumAuthenticatedApiRequest({
	        method: 'POST',
	        url: '/restapi/v1/users/login/' + userNickname + '/profiles/name/biography/set',
	        qsParams: { value: newBio }
	    });
	};
	
	var updateUserSocialInstagram = function updateUserSocialInstagram(newInstagram, userNickname) {
	    return lithiumAuthenticatedApiRequest({
	        method: 'POST',
	        url: '/restapi/v1/users/login/' + userNickname + '/settings/name/profile.instagram_url/set',
	        qsParams: { value: newInstagram }
	    });
	};
	
	var updateUserSocialYoutube = function updateUserSocialYoutube(newYoutube, userNickname) {
	    return lithiumAuthenticatedApiRequest({
	        method: 'POST',
	        url: '/restapi/v1/users/login/' + userNickname + '/settings/name/profile.youtube_url/set',
	        qsParams: { value: newYoutube }
	    });
	};
	
	/**
	 * Update the lithium user's avatar
	 * @param  {String} newAvatarUrl - The url of the avatar
	 * @param  {String} userNickname - The lithium user name
	 * @returns {Promise}
	 */
	var updateUserSocialAvatar = function updateUserSocialAvatar(newAvatarUrl, userNickname) {
	    return lithiumAuthenticatedApiRequest({
	        method: 'POST',
	        url: '/restapi/v1/users/login/' + userNickname + '/profiles/name/url_icon/set',
	        qsParams: { value: newAvatarUrl }
	    });
	};
	
	/**
	 * Update the lithium user's background image
	 * @param  {} newBackgroundUrl - The url of the background image
	 * @param  {String} userNickname - The lithium user name
	 */
	var updateUserSocialBackground = function updateUserSocialBackground(newBackgroundUrl, userNickname) {
	    return lithiumAuthenticatedApiRequest({
	        method: 'POST',
	        url: '/restapi/v1/users/login/' + userNickname + '/settings/name/profile.background_url/set',
	        qsParams: { value: newBackgroundUrl }
	    });
	};
	
	/**
	 * API call to get a list of the user's albums
	 * @param  {String} userNickname - The lithium user name
	 * @returns {Promise}
	 */
	var getUserAlbums = function getUserAlbums(userNickname) {
	    return lithiumAuthenticatedApiRequest({
	        method: 'GET',
	        url: '/restapi/v1/users/login/' + userNickname + '/media/albums/public'
	    });
	};
	
	/**
	 * API call to create a new album
	 * @param  {String} userNickname - The lithium user name
	 * @param  {String} title - The title of the album
	 * @returns {Promise}
	 */
	var createAlbum = function createAlbum(title) {
	    return lithiumAuthenticatedApiRequest({
	        method: 'POST',
	        url: '/restapi/v1/media/albums/add',
	        qsParams: { 'album.title': title }
	    });
	};
	
	/**
	 * API call to upload an image to an album
	 * @param  {String} albumId - The ID of the album
	 * @param  {Object} formData - Multi-part form data image
	 * @returns {Promise}
	 */
	var uploadImageToAlbum = function uploadImageToAlbum(albumId, formData) {
	    return lithiumAuthenticatedApiRequest({
	        method: 'POST',
	        url: '/restapi/v1/media/albums/id/' + albumId + '/images/upload',
	        params: formData,
	        isMultiPart: true
	    });
	};
	
	/** follow a user api call
	 * @param {string} user nickname of the current user using the site
	 * @param {string} user nickname of the currently *viewed* user
	 */
	var followUser = function followUser(currentUserNickname, userToFollowId) {
	    return lithiumAuthenticatedApiRequest({
	        method: 'POST',
	        url: '/restapi/v1/users/login/' + currentUserNickname + '/addressbook/contacts/friends/add',
	        qsParams: { 'contacts.user': '/users/id/' + userToFollowId }
	    });
	};
	
	/** unfollow a user api call
	 * @param {string} user nickname of the current user using the site
	 * @param {string} user nickname of the currently *viewed* user
	 */
	var unfollowUser = function unfollowUser(currentUserNickname, userToUnfollowId) {
	    return lithiumAuthenticatedApiRequest({
	        method: 'POST',
	        url: '/restapi/v1/users/login/' + currentUserNickname + '/addressbook/contacts/friends/remove',
	        qsParams: { 'contacts.user': '/users/id/' + userToUnfollowId }
	    });
	};
	
	function lithiumPublicApiRequest(options) {
	    if (IS_LITHIUM_ENABLED === false) {
	        return Promise.reject('Lithium is disabled');
	    }
	
	    var qsParams = Object.assign({}, options.qsParams, { 'restapi.response_format': 'json' });
	
	    var opts = Object.assign({}, options, {
	        url: 'https://' + LITHIUM_API_HOST + options.url,
	        qsParams: qsParams
	    });
	
	    return apiUtil.request(opts).then(function (response) {
	        return response.json();
	    }).catch(function (reason) {
	        var result = void 0;
	        if (reason instanceof Error && reason.message === 'Failed to fetch') {
	            result = Promise.reject('cors 403');
	        } else {
	            result = Promise.reject();
	        }
	        return result;
	    });
	}
	
	var getPublicUserSocialInfo = function getPublicUserSocialInfo(userNickname) {
	    return lithiumPublicApiRequest({
	        method: 'GET',
	        url: '/sephora/plugins/custom/sephora/sephora/getuserrecentgroups',
	        qsParams: { username: userNickname }
	    }).then(function (data) {
	        return data['User_' + userNickname + '_Group_Info'];
	    }).then(fixTyposInSocialInfoDataKeys).then(ensureBackgroundPhotoIsPresent);
	};
	
	var incrementUserScore = function incrementUserScore(interactionType, incrementAmount) {
	    return lithiumAuthenticatedApiRequest({
	        method: 'GET',
	        url: '/sephora/plugins/custom/sephora/gamification/update_user_value',
	        qsParams: {
	            interaction_type: interactionType,
	            increment_amount: incrementAmount
	        }
	    });
	};
	
	function noNicknameDataAdapter(data) {
	    var copy = Object.assign({}, data);
	
	    //once featured_groups comes back as an array
	    //change this to copy.featured_groups without an array wrapper
	    copy.groupsData = {
	        isFeaturedGroups: true,
	        groups: [copy.featured_group],
	        total: 0
	    };
	    copy.conversationsData = {
	        isFeaturedConversation: true,
	        conversations: [copy.featured_message],
	        total: 0
	    };
	    copy.totalGroups = 0;
	    copy.socialProfile = {
	        aboutMe: null,
	        // TODO Can this be renamed into avatarUrl safely?
	        avatar: AVATAR_PHOTO_DEFAULT,
	        background: BACKGROUND_PHOTO_DEFAULT,
	        youtube: null,
	        instagram: null,
	        follower: 0,
	        following: 0
	    };
	
	    delete copy.featured_group;
	    delete copy.featured_message;
	    delete copy.user;
	    delete copy.groups_joined;
	    delete copy.user_message;
	    return copy;
	}
	
	function getNoNicknameUserSocialInfo() {
	    return _lithiumApiRequest({
	        url: '/sephora/plugins/custom/sephora/sephora/mobile.richprofile',
	        method: 'GET'
	    }).then(function (data) {
	        return noNicknameDataAdapter(data.profile);
	    });
	}
	
	getAuthenticatedUserSocialInfo = ensureUserIsAuthenticated(getAuthenticatedUserSocialInfo);
	updateUserSocialBio = ensureUserIsAuthenticated(updateUserSocialBio);
	updateUserSocialInstagram = ensureUserIsAuthenticated(updateUserSocialInstagram);
	updateUserSocialYoutube = ensureUserIsAuthenticated(updateUserSocialYoutube);
	joinOrLeaveGroup = ensureUserIsAuthenticated(joinOrLeaveGroup);
	updateUserSocialAvatar = ensureUserIsAuthenticated(updateUserSocialAvatar);
	updateUserSocialBackground = ensureUserIsAuthenticated(updateUserSocialBackground);
	followUser = ensureUserIsAuthenticated(followUser);
	unfollowUser = ensureUserIsAuthenticated(unfollowUser);
	getUserAlbums = ensureUserIsAuthenticated(getUserAlbums);
	createAlbum = ensureUserIsAuthenticated(createAlbum);
	uploadImageToAlbum = ensureUserIsAuthenticated(uploadImageToAlbum);
	
	module.exports = {
	    getAuthenticatedUserSocialInfo: getAuthenticatedUserSocialInfo,
	    getPublicUserSocialInfo: getPublicUserSocialInfo,
	    joinOrLeaveGroup: joinOrLeaveGroup,
	    updateUserSocialBio: updateUserSocialBio,
	    updateUserSocialYoutube: updateUserSocialYoutube,
	    updateUserSocialInstagram: updateUserSocialInstagram,
	    updateUserSocialAvatar: updateUserSocialAvatar,
	    updateUserSocialBackground: updateUserSocialBackground,
	    followUser: followUser,
	    unfollowUser: unfollowUser,
	    getUserAlbums: getUserAlbums,
	    createAlbum: createAlbum,
	    uploadImageToAlbum: uploadImageToAlbum,
	    getNoNicknameUserSocialInfo: getNoNicknameUserSocialInfo,
	    incrementUserScore: incrementUserScore,
	    AVATAR_PHOTO_DEFAULT: AVATAR_PHOTO_DEFAULT
	};

/***/ }),
/* 258 */
/*!************************************!*\
  !*** ./public_ufe/js/utils/Api.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var urlUtils = __webpack_require__(/*! utils/Url */ 2);
	
	/**
	 *
	 * @param method
	 * @param url
	 * @param body
	 * @param params -
	 * @param qsParams - array of nvps to be converted in to the querystring.  If multiple querystring
	 * entries are needed for the same key, then the nvp should contain:  'key': [arrayOfValues]
	 * @param headers
	 * @param isMultiPart
	 * @returns {{then, catch}}
	 */
	function request(_ref) {
	    var method = _ref.method,
	        url = _ref.url,
	        _ref$params = _ref.params,
	        params = _ref$params === undefined ? {} : _ref$params,
	        _ref$qsParams = _ref.qsParams,
	        qsParams = _ref$qsParams === undefined ? {} : _ref$qsParams,
	        _ref$headers = _ref.headers,
	        headers = _ref$headers === undefined ? {} : _ref$headers,
	        _ref$isMultiPart = _ref.isMultiPart,
	        isMultiPart = _ref$isMultiPart === undefined ? false : _ref$isMultiPart;
	
	    var body = void 0;
	
	    if (!url) {
	        throw new Error('Url argument is required!');
	    }
	
	    if (!method) {
	        throw new Error('Method argument is required!');
	    }
	
	    if (method === 'POST') {
	        if (isMultiPart || typeof params === 'string') {
	            body = params;
	        } else {
	            body = JSON.stringify(params);
	        }
	    }
	
	    if (Object.keys(qsParams).length) {
	        url += '?' + urlUtils.makeQueryString(qsParams);
	    }
	
	    return fetch(url, {
	        method: method, body: body, headers: headers
	    });
	}
	
	module.exports = { request: request };

/***/ }),
/* 259 */
/*!*************************************************************************!*\
  !*** ./public_ufe/js/analytics/bindings/pages/all/linkTrackingError.js ***!
  \*************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var anaUtils = __webpack_require__(/*! analytics/utils */ 179);
	var anaConsts = __webpack_require__(/*! analytics/constants */ 178);
	
	/**
	 * Merge the properties set here into the
	 * event object that was created earlier.
	 * @param  {object} data Event specific data
	 */
	module.exports = function (data) {
	
	    var previousEventData = anaUtils.getMostRecentEvent(anaConsts.LINK_TRACKING_EVENT);
	
	    var newEventData = { eventInfo: { attributes: {
	                eVar63: 'D=g',
	                languageLocale: digitalData.page.attributes.languageLocale,
	
	                //This gets reset (or not) earlier, so just pass the current value
	                pageName: s.pageName,
	                experience: digitalData.page.attributes.experience,
	                previousPage: data.previousPage || digitalData.page.attributes.previousPageData.pageName,
	                platform: digitalData.page.attributes.platform,
	                urlWithoutQuery: window.location.host,
	                pageType: anaConsts.SIGN_IN_PAGE_TYPE_DETAIL,
	                pageDetail: anaConsts.SIGN_IN_PAGE_TYPE_DETAIL
	            } } };
	    //Update old data with new
	    __webpack_require__(/*! deep-extend */ 180)(previousEventData, anaUtils.removeUndefinedItems(newEventData));
	};

/***/ }),
/* 260 */
/*!***********************************************************!*\
  !*** ./public_ufe/js/services/api/beautyInsider/index.js ***!
  \***********************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// This module provides API call methods for Sephora Commerce
	// Beauty Insider APIs:
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Beauty+Insider+APIs
	
	var getBiPoints = __webpack_require__(/*! ./getBiPoints */ 261);
	var getBiDigitalCardNumber = __webpack_require__(/*! ./getBiDigitalCardNumber */ 262);
	var getBiAccountHistory = __webpack_require__(/*! ./getBiAccountHistory */ 263);
	var createBiAccount = __webpack_require__(/*! ./createBiAccount */ 264);
	var updateBiAccount = __webpack_require__(/*! ./updateBiAccount */ 265);
	var getPurchaseHistory = __webpack_require__(/*! ./getPurchaseHistory */ 266);
	var addBiRewardsToCart = __webpack_require__(/*! ./addBiRewardsToCart */ 267);
	var removeBiRewardFromBasket = __webpack_require__(/*! ./removeBiRewardFromBasket */ 268);
	
	var _require = __webpack_require__(/*! ./getBiRewardsGroup */ 269),
	    getBiRewardsGroupForCheckout = _require.getBiRewardsGroupForCheckout,
	    getBiRewardsGroupForProfile = _require.getBiRewardsGroupForProfile;
	
	module.exports = {
	    getBiPoints: getBiPoints,
	    getBiDigitalCardNumber: getBiDigitalCardNumber,
	    getBiAccountHistory: getBiAccountHistory,
	    createBiAccount: createBiAccount,
	    updateBiAccount: updateBiAccount,
	    addBiRewardsToCart: addBiRewardsToCart,
	    removeBiRewardFromBasket: removeBiRewardFromBasket,
	    getPurchaseHistory: getPurchaseHistory,
	    getBiRewardsGroupForCheckout: getBiRewardsGroupForCheckout,
	    getBiRewardsGroupForProfile: getBiRewardsGroupForProfile
	};

/***/ }),
/* 261 */
/*!*****************************************************************!*\
  !*** ./public_ufe/js/services/api/beautyInsider/getBiPoints.js ***!
  \*****************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Get+BI+Points+API
	
	
	function getBiPoints(userProfileId) {
	    var url = '/api/bi/profiles/' + userProfileId + '/points?source=profile';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'GET'
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = getBiPoints;

/***/ }),
/* 262 */
/*!****************************************************************************!*\
  !*** ./public_ufe/js/services/api/beautyInsider/getBiDigitalCardNumber.js ***!
  \****************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Get+BI+Digital+Card+Number+API
	
	
	function getBiDigitalCardNumber(userProfileId) {
	    var url = '/api/bi/profiles/' + userProfileId + '/digitalCardNumber?source=other';
	    return refetch.fetch(restApi.getRestLocation(url), { method: 'GET' }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = getBiDigitalCardNumber;

/***/ }),
/* 263 */
/*!*************************************************************************!*\
  !*** ./public_ufe/js/services/api/beautyInsider/getBiAccountHistory.js ***!
  \*************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Get+BI+Account+History
	
	function getBiAccountHistory(profileId, offset, limit) {
	    var url = '/api/bi/profiles/' + profileId + '/accountHistory' + ('?offset=' + offset + '&limit=' + limit);
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'GET'
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = getBiAccountHistory;

/***/ }),
/* 264 */
/*!*********************************************************************!*\
  !*** ./public_ufe/js/services/api/beautyInsider/createBiAccount.js ***!
  \*********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Create+BI+Account+API
	
	
	function createBiAccount(input) {
	    var url = '/api/bi/account';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'POST',
	        body: JSON.stringify(input)
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = createBiAccount;

/***/ }),
/* 265 */
/*!*********************************************************************!*\
  !*** ./public_ufe/js/services/api/beautyInsider/updateBiAccount.js ***!
  \*********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Update+BI+Account+API
	
	
	function updateBiAccount(input) {
	    var url = '/api/bi/account';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'PUT',
	        body: JSON.stringify(input)
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = updateBiAccount;

/***/ }),
/* 266 */
/*!************************************************************************!*\
  !*** ./public_ufe/js/services/api/beautyInsider/getPurchaseHistory.js ***!
  \************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Get+Purchase+History
	
	
	function getPurchaseHistory(userProfileId) {
	    var url = '/api/bi/profiles/' + userProfileId + '/purchases';
	    return refetch.fetch(restApi.getRestLocation(url), { method: 'GET' }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = getPurchaseHistory;

/***/ }),
/* 267 */
/*!************************************************************************!*\
  !*** ./public_ufe/js/services/api/beautyInsider/addBiRewardsToCart.js ***!
  \************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Add+BI+Rewards+to+Cart+API
	
	
	function addBiRewardsToCart(skuId) {
	    var url = '/api/bi/profile/rewards?includeBasket=true';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'POST',
	        body: JSON.stringify({ biRewards: [skuId] })
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = addBiRewardsToCart;

/***/ }),
/* 268 */
/*!******************************************************************************!*\
  !*** ./public_ufe/js/services/api/beautyInsider/removeBiRewardFromBasket.js ***!
  \******************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Remove+BI+Reward+from+Basket+API
	
	
	function removeBiRewardFromBasket(orderId, skuId) {
	    var url = '/api/bi/orders/' + orderId + '/rewards/' + skuId + '?includeBasket=true';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'DELETE'
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = removeBiRewardFromBasket;

/***/ }),
/* 269 */
/*!***********************************************************************!*\
  !*** ./public_ufe/js/services/api/beautyInsider/getBiRewardsGroup.js ***!
  \***********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Get+BI+Rewards+Group+API
	
	function _getBiRewardsGroup(source) {
	    var url = '/api/bi/rewards/?source=' + source;
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'GET'
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	function getBiRewardsGroupForCheckout() {
	    return _getBiRewardsGroup('checkout');
	}
	
	function getBiRewardsGroupForProfile() {
	    return _getBiRewardsGroup('profile');
	}
	
	module.exports = {
	    getBiRewardsGroupForCheckout: getBiRewardsGroupForCheckout,
	    getBiRewardsGroupForProfile: getBiRewardsGroupForProfile
	};

/***/ }),
/* 270 */
/*!************************************************************!*\
  !*** ./public_ufe/js/services/api/authentication/index.js ***!
  \************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// This module provides API call methods for Sephora Commerce Authentication APIs:
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Authentication+APIs
	
	
	// TO WHOM IT MAY CONCERN,
	//
	// Please do your best honest work of factoring out any of the related API
	// calls from other places into this module as soon as there's an assignment
	// related to this scope.
	
	
	var login = __webpack_require__(/*! ./login */ 271);
	var logout = __webpack_require__(/*! ./logout */ 272);
	var resetPasswordByLogin = __webpack_require__(/*! ./resetPasswordByLogin */ 273);
	
	module.exports = {
	    login: login,
	    logout: logout,
	    resetPasswordByLogin: resetPasswordByLogin
	};

/***/ }),
/* 271 */
/*!************************************************************!*\
  !*** ./public_ufe/js/services/api/authentication/login.js ***!
  \************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Login+API
	
	
	function login(log1n, password, options) {
	    var loginForCheckout = options.loginForCheckout,
	        isKeepSignedIn = options.isKeepSignedIn;
	
	
	    var url = '/api/auth/login';
	
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'POST',
	        body: JSON.stringify({
	            login: log1n,
	            password: password,
	            loginForCheckout: loginForCheckout,
	            isKeepSignedIn: isKeepSignedIn
	        })
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = login;

/***/ }),
/* 272 */
/*!*************************************************************!*\
  !*** ./public_ufe/js/services/api/authentication/logout.js ***!
  \*************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Logout+API
	
	
	function logout() {
	    var url = '/api/auth/logout';
	
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'POST'
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = logout;

/***/ }),
/* 273 */
/*!***************************************************************************!*\
  !*** ./public_ufe/js/services/api/authentication/resetPasswordByLogin.js ***!
  \***************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Reset+Password+API
	
	
	function resetPasswordByLogin(login) {
	    var url = '/api/secure/resetPassword';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'POST',
	        body: JSON.stringify({ type: 'email', email: login })
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = resetPasswordByLogin;

/***/ }),
/* 274 */
/*!*******************************************************!*\
  !*** ./public_ufe/js/utils/localStorage/Constants.js ***!
  \*******************************************************/
/***/ (function(module, exports) {

	'use strict';
	
	module.exports = {
	    CATNAV: 'CatNav',
	    USER_DATA: 'UserData',
	    SVA_DATA: 'SvaData',
	    TARGET_PARAMS: 'TargetParams',
	    LEGACY_MW_JSTORAGE: 'jStorage',
	    BASKET: 'basket'
	};

/***/ }),
/* 275 */
/*!*****************************************************!*\
  !*** ./public_ufe/js/utils/localStorage/Storage.js ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var helpers = __webpack_require__(/*! utils/Helpers */ 189);
	
	var SECONDS = 1000;
	var MINUTES = 60 * SECONDS;
	var HOURS = 60 * MINUTES;
	
	function isDataExpired(expiry) {
	    return Date.parse(expiry) < new Date().getTime();
	}
	
	function Storage(type) {
	    this.storage = type;
	}
	
	Storage.prototype.getItem = function (key) {
	    var ignoreExpiry = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	
	    var value = this.storage.getItem(key);
	    var parsedValue = void 0;
	
	    try {
	        parsedValue = JSON.parse(value);
	    } catch (e) {
	        return null;
	    }
	
	    if (helpers.isObject(parsedValue)) {
	        var _parsedValue = parsedValue,
	            _parsedValue$data = _parsedValue.data,
	            data = _parsedValue$data === undefined ? null : _parsedValue$data,
	            _parsedValue$expiry = _parsedValue.expiry,
	            expiry = _parsedValue$expiry === undefined ? null : _parsedValue$expiry;
	
	
	        if (expiry && !ignoreExpiry && isDataExpired(expiry)) {
	            return null;
	        }
	
	        return data;
	    }
	
	    return parsedValue;
	};
	
	Storage.prototype.setItem = function (key, value) {
	    var expiry = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
	
	    var data = { data: value };
	
	    if (expiry) {
	        var date = typeof expiry === 'number' ? new Date(Date.now() + expiry) : expiry;
	        data.expiry = date;
	    }
	
	    try {
	        this.storage.setItem(key, JSON.stringify(data));
	    } catch (e) {
	        return;
	    }
	};
	
	Storage.prototype.removeItem = function (key) {
	    return this.storage.removeItem(key);
	};
	
	var local = {};
	var session = {};
	
	if (!Sephora.isRootRender) {
	    local = new Storage(window.localStorage);
	    session = new Storage(window.sessionStorage);
	}
	
	module.exports = {
	    local: local,
	    session: session,
	    SECONDS: SECONDS,
	    MINUTES: MINUTES,
	    HOURS: HOURS
	};

/***/ }),
/* 276 */
/*!***********************************************************!*\
  !*** ./public_ufe/js/services/api/thirdparty/tokyWoky.js ***!
  \***********************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172).fetch;
	var restApi = __webpack_require__(/*! RestApi */ 174);
	var communityUtils = __webpack_require__(/*! utils/Community */ 277);
	var store = __webpack_require__(/*! Store */ 146);
	var watch = __webpack_require__(/*! redux-watch */ 187);
	
	function getSocialInfo() {
	    return new Promise(function (resolve) {
	        var socialInfo = store.getState().socialInfo;
	        var dataToSend = {};
	        if (socialInfo.isLithiumSuccessful !== null && socialInfo.socialProfile) {
	            dataToSend.engagementBadge = socialInfo.socialProfile.engagementBadgeUrl;
	            dataToSend.profilePicture = socialInfo.socialProfile.avatar;
	            dataToSend.biLevelBadge = socialInfo.socialProfile.biBadgeUrl;
	            resolve(dataToSend);
	        } else {
	            var socialInfoWatch = watch(store.getState, 'socialInfo');
	            store.subscribe(socialInfoWatch(function (info) {
	                if (info.socialProfile) {
	                    dataToSend.engagementBadge = info.socialProfile.engagementBadgeUrl;
	                    dataToSend.profilePicture = info.socialProfile.avatar;
	                    dataToSend.biLevelBadge = info.socialProfile.biBadgeUrl;
	                    resolve(dataToSend);
	                } else {
	                    resolve(dataToSend);
	                }
	            }));
	        }
	    });
	}
	
	function getTokyWokySSOToken() {
	    var url = '/api/users/profiles/tokyWokyToken';
	    return new Promise(function (resolve, reject) {
	        getSocialInfo().then(function (socialInfo) {
	            refetch(restApi.getRestLocation(url), {
	                method: 'POST',
	                body: JSON.stringify(socialInfo)
	            }).then(function (data) {
	                if (data.errorCode) {
	                    reject(data);
	                } else {
	                    resolve(data);
	                }
	            });
	        });
	    });
	}
	
	function validateSocialUser() {
	    return communityUtils.ensureUserIsReadyForSocialAction(communityUtils.PROVIDER_TYPES.tokywoky);
	}
	
	function getToken() {
	    return new Promise(function (resolve, reject) {
	        Sephora.TokyWoky.isSignInThroughChat = true;
	        validateSocialUser().then(function () {
	            return getTokyWokySSOToken();
	        }).then(function (data) {
	            return resolve(data);
	        }).catch(reject);
	    });
	}
	
	module.exports = {
	    getTokyWokySSOToken: getTokyWokySSOToken,
	    getToken: getToken
	};

/***/ }),
/* 277 */
/*!******************************************!*\
  !*** ./public_ufe/js/utils/Community.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var store = __webpack_require__(/*! Store */ 146);
	var profileActions = __webpack_require__(/*! actions/ProfileActions */ 278);
	var userUtils = __webpack_require__(/*! utils/User */ 186);
	var authentication = __webpack_require__(/*! utils/Authentication */ 173);
	var actions = __webpack_require__(/*! actions/Actions */ 175);
	var urlUtils = __webpack_require__(/*! utils/Url */ 2);
	
	var communitySiteHost = Sephora.configurationSettings.communitySiteHost;
	var TOKY_AUTH_COOKIE_NAME = 'toky_auth_sso';
	
	// tokywoky set to 'olapic', because api call requires a social provider
	// but only accepts either 'lithium', 'olapic', or 'bv'
	var PROVIDER_TYPES = {
	    lithium: 'lithium',
	    olapic: 'olapic',
	    bv: 'bv',
	    tokywoky: 'olapic'
	};
	
	var COMMUNITY_URLS = {
	    CONVERSATIONS: '//' + communitySiteHost + '/t5/user/viewprofilepage/user-id/',
	    GROUPS: '//' + communitySiteHost + '/t5/custom/page/page-id/GroupsLandingPage',
	    PUBLIC_LOOKS_PROFILE: '/community/gallery/album/',
	    MY_LOOKS_PROFILE: '/community/gallery/myprofile',
	    ADD_PHOTO: '/community/gallery/add-photo',
	    GALLERY: '/community/gallery',
	    LANDING_PAGE: '/community'
	};
	
	var showRegistrationModal = function showRegistrationModal() {
	    return new Promise(function (resolve, reject) {
	        store.dispatch(actions.showRegisterModal(true, null, resolve, null, null, null, reject));
	    });
	};
	
	var showBiRegisterModal = function showBiRegisterModal() {
	    return new Promise(function (resolve, reject) {
	        store.dispatch(actions.showBiRegisterModal(true, resolve, true, reject));
	    });
	};
	
	// provider type arg is required for social register api call, it fails without it
	// if socialProvider comes in as null, set it to lithium as default
	var showSocialRegistrationModal = function showSocialRegistrationModal() {
	    var socialProvider = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : PROVIDER_TYPES.lithium;
	
	    return new Promise(function (resolve, reject) {
	        store.dispatch(profileActions.showSocialRegistrationModal(true, userUtils.isBI(), resolve, socialProvider, reject));
	    });
	};
	
	var showSocialReOptModal = function showSocialReOptModal() {
	    return new Promise(function (resolve, reject) {
	        store.dispatch(profileActions.showSocialReOptModal(true, resolve, reject));
	    });
	};
	
	/**
	 * user must be atleast recognized to launch social action
	 * user must be fully signed in before launching any social registration modal
	 * if user is not bi but is social, we launch bi registration modal
	 * if user is not social, we launch social registration modal
	 * if user needs to re opt their current social user, we launch the re opt modal
	 * otherwise, we launch the social action
	 * you can see how ensureUserIsReadyForSocialAction is implemented in:
	 *  - AddReview/AddReviewCarousel/AddReviewCarousel.c.js
	 *  - RichProfile/UserProfile/common/AboutMeSlideShow/AboutMeSlideshow.c.js
	 */
	var ensureUserIsReadyForSocialAction = function ensureUserIsReadyForSocialAction(socialProvider) {
	
	    return authentication.requireRecognizedAuthentication().then(function () {
	        var promise = Promise.resolve();
	
	        if (!userUtils.isBI() && userUtils.isSocial()) {
	            promise = authentication.requireLoggedInAuthentication().then(function () {
	                return showBiRegisterModal();
	            });
	        } else if (!userUtils.isSocial()) {
	            promise = authentication.requireLoggedInAuthentication().then(function () {
	                return showSocialRegistrationModal(socialProvider);
	            });
	        } else if (userUtils.needsSocialReOpt()) {
	            promise = authentication.requireLoggedInAuthentication().then(function () {
	                return showSocialReOptModal();
	            });
	        }
	
	        return promise;
	    }).catch(function (reason) {
	        console.debug('oops! user sign in required');
	        return Promise.reject(reason);
	    });
	};
	
	var socialCheckLink = function socialCheckLink(url, socialProvider) {
	    ensureUserIsReadyForSocialAction(socialProvider).then(function () {
	        urlUtils.redirectTo(url);
	    });
	};
	
	var tokyWokySignIn = function tokyWokySignIn() {
	    return new Promise(function (resolve, reject) {
	        if (window.toky) {
	            var tokyWokyApi = __webpack_require__(/*! services/api/thirdparty/tokyWoky */ 276);
	            tokyWokyApi.getTokyWokySSOToken().then(function (data) {
	                var tokyAuthData = data.tokyWokyAuthPublicKey + ':' + data.tokyWokyAuthMessage + ':' + (data.tokyWokyAuthHmac + ':' + data.tokyWokyAuthTimestamp);
	                toky.utils.createCookie(TOKY_AUTH_COOKIE_NAME, tokyAuthData, 0);
	                resolve();
	            }).catch(reject);
	        } else {
	            reject();
	        }
	    });
	};
	
	//used for when user tries to signin from a lithium hosted page
	var launchSocialSignInFlow = function launchSocialSignInFlow() {
	    Sephora.TokyWoky ? Sephora.TokyWoky.CommunitySignIn = true : Sephora.TokyWoky = { CommunitySignIn: true };
	
	    //re-using ensureUserIsReadyForSocialAction since sign in flow is the same
	    return ensureUserIsReadyForSocialAction().then(function () {
	        return tokyWokySignIn();
	    });
	};
	
	//used for when user tries to register from a lithium hosted page
	var launchSocialRegisterFlow = function launchSocialRegisterFlow() {
	    Sephora.TokyWoky ? Sephora.TokyWoky.CommunitySignIn = true : Sephora.TokyWoky = { CommunitySignIn: true };
	
	    //if user is registering, only option to open afterwards is
	    //social registration modal, since new user will need nickname
	    return showRegistrationModal().then(function () {
	        return showSocialRegistrationModal();
	    }).then(function () {
	        return tokyWokySignIn();
	    });
	};
	
	var community = {
	    PROVIDER_TYPES: PROVIDER_TYPES,
	    COMMUNITY_URLS: COMMUNITY_URLS,
	    socialCheckLink: socialCheckLink,
	    ensureUserIsReadyForSocialAction: ensureUserIsReadyForSocialAction,
	    launchSocialSignInFlow: launchSocialSignInFlow,
	    launchSocialRegisterFlow: launchSocialRegisterFlow
	};
	
	module.exports = community;

/***/ }),
/* 278 */
/*!*************************************************!*\
  !*** ./public_ufe/js/actions/ProfileActions.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var UserActions = __webpack_require__(/*! actions/UserActions */ 210);
	var processEvent = __webpack_require__(/*! analytics/processEvent */ 176);
	var anaConsts = __webpack_require__(/*! analytics/constants */ 178);
	var anaUtils = __webpack_require__(/*! analytics/utils */ 179);
	var biApi = __webpack_require__(/*! services/api/beautyInsider */ 260);
	
	var TYPES = {
	    SHOW_EDIT_MY_PROFILE_MODAL: 'SHOW_EDIT_MY_PROFILE_MODAL',
	    SHOW_EDIT_FLOW_MODAL: 'SHOW_EDIT_FLOW_MODAL',
	    UPDATE_BI_ACCOUNT: 'UPDATE_BI_ACCOUNT',
	    GET_ACCOUNT_HISTORY_SLICE: 'GET_ACCOUNT_HISTORY_SLICE',
	    SET_ACCOUNT_HISTORY_SLICE: 'SET_ACCOUNT_HISTORY_SLICE',
	    SHOW_SOCIAL_REGISTRATION_MODAL: 'SHOW_SOCIAL_REGISTRATION_MODAL',
	    SHOW_SOCIAL_REOPT_MODAL: 'SHOW_SOCIAL_REOPT_MODAL'
	};
	
	function setAccountHistorySlice(accountHistorySlice) {
	    return {
	        type: TYPES.SET_ACCOUNT_HISTORY_SLICE,
	        accountHistorySlice: accountHistorySlice
	    };
	}
	
	module.exports = {
	    TYPES: TYPES,
	
	    showEditMyProfileModal: function showEditMyProfileModal(isOpen) {
	        return {
	            type: TYPES.SHOW_EDIT_MY_PROFILE_MODAL,
	            isOpen: isOpen
	        };
	    },
	
	    showEditFlowModal: function showEditFlowModal(isOpen, title, content, biAccount, socialProfile, saveProfileCallback) {
	        return {
	            type: TYPES.SHOW_EDIT_FLOW_MODAL,
	            isOpen: isOpen,
	            title: title,
	            content: content,
	            biAccount: biAccount,
	            socialProfile: socialProfile,
	            saveProfileCallback: saveProfileCallback
	        };
	    },
	
	    showSocialRegistrationModal: function showSocialRegistrationModal(isOpen, isBi, socialRegistrationCallback, socialRegistrationProvider) {
	        var cancellationCallback = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;
	
	        //Analytics - Track Modal
	        var pageDetail = isBi ? 'nickname' : 'nickname birthday';
	
	        if (isOpen) {
	            processEvent.process(anaConsts.ASYNC_PAGE_LOAD, {
	                data: {
	                    pageName: 'social registration:' + pageDetail + ':n/a*',
	                    pageType: 'social registration',
	                    pageDetail: pageDetail
	                }
	            });
	        }
	
	        return {
	            type: TYPES.SHOW_SOCIAL_REGISTRATION_MODAL,
	            isOpen: isOpen,
	            socialRegistrationCallback: socialRegistrationCallback,
	            socialRegistrationCancellationCallback: cancellationCallback,
	            socialRegistrationProvider: socialRegistrationProvider
	        };
	    },
	
	    showSocialReOptModal: function showSocialReOptModal(isOpen, socialReOptCallback) {
	        var cancellationCallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
	
	        //Analytics - Track Modal
	        if (isOpen) {
	            processEvent.process(anaConsts.ASYNC_PAGE_LOAD, {
	                data: {
	                    pageName: 'social registration:re-opt in:n/a*',
	                    pageType: 'social registration',
	                    pageDetail: 're-opt in'
	                }
	            });
	        }
	
	        return {
	            type: TYPES.SHOW_SOCIAL_REOPT_MODAL,
	            isOpen: isOpen,
	            socialReOptCallback: socialReOptCallback,
	            cancellationCallback: cancellationCallback
	        };
	    },
	
	    updateBiAccount: function updateBiAccount(change, successCallback, errorCallback) {
	        return function (dispatch) {
	            biApi.updateBiAccount(change).then(function (data) {
	                dispatch(UserActions.getUserFull(null, successCallback));
	            }).catch(function (reason) {
	                if (reason.errorMessages && typeof errorCallback === 'function') {
	                    errorCallback();
	                }
	            });
	        };
	    },
	
	    getAccountHistorySlice: function getAccountHistorySlice(profileId) {
	        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	        var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;
	
	        return function (dispatch) {
	            biApi.getBiAccountHistory(profileId, offset, limit).then(function (data) {
	                return dispatch(setAccountHistorySlice(data));
	            });
	        };
	    }
	};

/***/ }),
/* 279 */
/*!*************************************************!*\
  !*** ./public_ufe/js/services/api/ssi/index.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// This module provides API call methods for Sephora Stay Signed-in APIs:
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Stay+Signed-in+Specification
	
	var autoLogin = __webpack_require__(/*! ./autoLogin */ 280);
	
	module.exports = {
	    autoLogin: autoLogin
	};

/***/ }),
/* 280 */
/*!*****************************************************!*\
  !*** ./public_ufe/js/services/api/ssi/autoLogin.js ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Auto+Login+API
	
	function autoLogin() {
	    return refetch.fetch(RestApi.getRestLocation('/api/ssi/autoLogin'), {
	        method: 'POST',
	        body: '{}'
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = autoLogin;

/***/ }),
/* 281 */
/*!*****************************************!*\
  !*** ./public_ufe/js/utils/Checkout.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var LegacyStorage = __webpack_require__(/*! utils/localStorage/LegacyMW */ 282);
	var store = __webpack_require__(/*! Store */ 146);
	var urlUtils = __webpack_require__(/*! utils/Url */ 2);
	var uiUtils = __webpack_require__(/*! utils/UI */ 283);
	var basketUtils = __webpack_require__(/*! utils/Basket */ 190);
	var basketActions = __webpack_require__(/*! actions/BasketActions */ 169);
	var processEvent = __webpack_require__(/*! analytics/processEvent */ 176);
	var anaConstants = __webpack_require__(/*! analytics/constants */ 178);
	var linkTrackingError = __webpack_require__(/*! analytics/bindings/pages/all/linkTrackingError */ 259);
	var userUtils = __webpack_require__(/*! utils/User */ 186);
	var checkoutApi = __webpack_require__(/*! services/api/checkout */ 284);
	
	var _require = __webpack_require__(/*! utils/decorators */ 297),
	    withInterstice = _require.withInterstice;
	
	var orderMergedMsgViewed = false;
	
	// Initializing checkout is a mandatory API operation of switching current order
	// to its new `checkout' status. It's not possible to start a checkout process
	// without initializing an order first.
	
	function initializeCheckout() {
	    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var _options$isPaypalFlow = options.isPaypalFlow,
	        isPaypalFlow = _options$isPaypalFlow === undefined ? false : _options$isPaypalFlow,
	        _options$isApplePayFl = options.isApplePayFlow,
	        isApplePayFlow = _options$isApplePayFl === undefined ? false : _options$isApplePayFl,
	        _options$user = options.user,
	        user = _options$user === undefined ? null : _options$user;
	
	
	    var data = {};
	    var userData = (user ? user : store.getState().user) || {};
	
	    var isAnonymousCheckout = !!userData.isNewUserFlow;
	
	    if (isAnonymousCheckout) {
	        data.email = userData.userName;
	    } else {
	        data.orderId = basketUtils.getOrderId();
	        data.profileId = userUtils.getProfileId();
	    }
	
	    data.isPaypalFlow = !!isPaypalFlow;
	    data.isApplePayFlow = !!isApplePayFlow;
	
	    var promise = void 0;
	
	    if (isAnonymousCheckout) {
	        promise = withInterstice(checkoutApi.initializeAnonymousCheckout)(data);
	    } else {
	        promise = withInterstice(checkoutApi.initializeCheckout)(data);
	    }
	
	    return promise;
	}
	
	function initOrderSuccess() {
	    // To keep legacy Play/Regular Checkout flow alive
	    if (Sephora.isMobile()) {
	        LegacyStorage.deleteLegacyJStorageItem('lastOrderInitId');
	        LegacyStorage.deleteLegacyJStorageItem('playUpdateOrderId');
	    }
	
	    var mergedBasket = store.getState().basket && store.getState().basket.error && store.getState().basket.error.orderMergedMsg;
	    if (orderMergedMsgViewed || !mergedBasket) {
	        urlUtils.redirectTo('/checkout');
	    } else {
	        orderMergedMsgViewed = true;
	        uiUtils.scrollToTop();
	        uiUtils.unlockBackgroundPosition();
	    }
	}
	
	function initOrderFailure(response) {
	
	    var itemLevelErrors = basketUtils.catchItemLevelErrors(response);
	    var basketLevelErrors = itemLevelErrors ? null : {
	        internalError: response.errorMessages.join(' ')
	    };
	    store.dispatch(basketActions.showError(basketLevelErrors, itemLevelErrors));
	
	    store.dispatch(basketActions.refreshBasket(itemLevelErrors ? response : null));
	
	    processEvent.process(anaConstants.LINK_TRACKING_EVENT, {
	        data: {
	            bindingMethods: linkTrackingError,
	            errorMessages: response.errorMessages,
	            eventStrings: [anaConstants.Event.EVENT_71],
	            linkName: 'error',
	            specificEventName: 'basket_checkout_button_error'
	        }
	    });
	}
	
	module.exports = {
	    initializeCheckout: initializeCheckout,
	    initOrderSuccess: initOrderSuccess,
	    initOrderFailure: initOrderFailure
	};

/***/ }),
/* 282 */
/*!******************************************************!*\
  !*** ./public_ufe/js/utils/localStorage/LegacyMW.js ***!
  \******************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var LEGACY_MW_JSTORAGE = __webpack_require__(/*! utils/localStorage/Constants */ 274).LEGACY_MW_JSTORAGE;
	
	function getLegacyJStorage() {
	    var jStorage = window.localStorage.getItem(LEGACY_MW_JSTORAGE) || '{}';
	    return JSON.parse(jStorage);
	}
	
	module.exports = function () {
	    return {
	        getLegacyJStorageItem: function getLegacyJStorageItem(key) {
	            var jStorage = getLegacyJStorage();
	            return jStorage[key];
	        },
	
	        setLegacyJStorageItem: function setLegacyJStorageItem(key, value) {
	            var jStorage = getLegacyJStorage();
	            jStorage[key] = value;
	            window.localStorage.setItem(LEGACY_MW_JSTORAGE, JSON.stringify(jStorage));
	        },
	
	        deleteLegacyJStorageItem: function deleteLegacyJStorageItem(key) {
	            var jStorage = getLegacyJStorage();
	            if (jStorage[key]) {
	                delete jStorage[key];
	            }
	
	            window.localStorage.setItem(LEGACY_MW_JSTORAGE, JSON.stringify(jStorage));
	        }
	    };
	}();

/***/ }),
/* 283 */
/*!***********************************!*\
  !*** ./public_ufe/js/utils/UI.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var urlUtils = __webpack_require__(/*! utils/Url */ 2);
	var ReactDOM = __webpack_require__(/*! react-dom */ 100);
	
	var UI = {
	    toggleMain: function toggleMain() {
	        if (Sephora.isMobile()) {
	            var main = document.getElementById('main');
	            main.classList.toggle('active');
	            main.classList.toggle('in');
	        }
	    },
	
	    swatchSize: function swatchSize(product) {
	        var size = {};
	        switch (product.swatchType) {
	            case 'Image - 36':
	                size.width = 36;
	                size.height = 36;
	                break;
	            case 'Image - 42':
	                size.width = 42;
	                size.height = 42;
	                break;
	            case 'Image - 62':
	                size.width = 62;
	                size.height = 62;
	                break;
	            case 'Image - Rectangle':
	                size.width = 72;
	                size.height = 36;
	                break;
	            default:
	        }
	        return size;
	    },
	
	    /**
	     * Lock the body once your element needs it,
	     * and unlock it right after its closed
	     */
	    preventBackgroundScroll: function preventBackgroundScroll(elementIsOpen) {
	        if (!Sephora.isRootRender) {
	            if (elementIsOpen && document.body.style.overflowY !== 'hidden') {
	                document.body.style.overflowY = 'hidden';
	            } else if (!elementIsOpen && document.body.style.overflowY === 'hidden') {
	                document.body.style.overflowY = 'auto';
	            }
	        }
	    },
	
	    lockBackgroundPosition: function lockBackgroundPosition() {
	        if (document.body.style.position !== 'fixed') {
	            var offset = document.body.scrollTop;
	            Object.assign(document.body.style, {
	                position: 'fixed',
	                left: 0,
	                right: 0,
	                top: offset * -1 + 'px'
	            });
	        }
	    },
	
	    unlockBackgroundPosition: function unlockBackgroundPosition() {
	        if (document.body.style.position === 'fixed') {
	            var scrollPosition = parseInt(document.body.style.top, 10) * -1;
	            Object.assign(document.body.style, {
	                position: '',
	                left: '',
	                right: ''
	            });
	            document.body.scrollTop = scrollPosition;
	        }
	    },
	
	    getRetinaSrcSet: function getRetinaSrcSet(src) {
	        if (src) {
	            var ext = src.substring(src.lastIndexOf('.') + 1);
	            var src2x = src.replace('.' + ext, '@2x.' + ext);
	            return urlUtils.getImagePath(src) + ' 1x, ' + urlUtils.getImagePath(src2x) + ' 2x';
	        } else {
	            return null;
	        }
	    },
	
	    scrollToTop: function scrollToTop() {
	        // Cross-browser support: document.documentElement for Mozilla
	        document.body.scrollTop = document.documentElement.scrollTop = 0;
	    },
	
	    scrollElementToTop: function scrollElementToTop(element) {
	        element.scrollTop = 0;
	    },
	
	    observeElement: function observeElement(callback) {
	        return new MutationObserver(callback);
	    },
	
	    hasHorizontalScrollBar: function hasHorizontalScrollBar(component) {
	        var element = ReactDOM.findDOMNode(component);
	        return element ? element.scrollWidth > element.clientWidth : false;
	    },
	
	    isSupportsLineClamp: function isSupportsLineClamp() {
	        if (!Sephora.isRootRender) {
	            return 'WebkitLineClamp' in document.documentElement.style;
	        }
	        return false;
	    },
	
	    detectIEVersion: function detectIEVersion() {
	        if (Sephora.isRootRender) {
	            return false;
	        }
	        var userAgent = window && window.navigator && window.navigator.userAgent;
	        if (!userAgent) {
	            return false;
	        }
	        var msie = userAgent.indexOf('MSIE ');
	        if (msie > 0) {
	            // IE 10 or older => return version number
	            return parseInt(userAgent.substring(msie + 5, userAgent.indexOf('.', msie)), 10);
	        }
	        var trident = userAgent.indexOf('Trident/');
	        if (trident > 0) {
	            // IE 11 => return version number
	            var rv = userAgent.indexOf('rv:');
	            return parseInt(userAgent.substring(rv + 3, userAgent.indexOf('.', rv)), 10);
	        }
	        var edge = userAgent.indexOf('Edge/');
	        if (edge > 0) {
	            // Edge (IE 12+) => return version number
	            return parseInt(userAgent.substring(edge + 5, userAgent.indexOf('.', edge)), 10);
	        }
	        // other browser
	        return false;
	    },
	
	    refreshStuckUIRender: function refreshStuckUIRender() {
	        if (!Sephora.isRootRender && this.isIOS()) {
	            var element = document.body;
	            element.scrollTop++;
	            element.scrollTop--;
	        }
	    },
	
	    isIOS: function isIOS() {
	        return (/iPad|iPhone|iPod/.test(navigator.userAgent)
	        );
	    }
	
	};
	
	module.exports = UI;

/***/ }),
/* 284 */
/*!******************************************************!*\
  !*** ./public_ufe/js/services/api/checkout/index.js ***!
  \******************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// This module provides API call methods for Sephora Commerce Checkout APIs:
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Checkout+APIs
	
	var getPayPalToken = __webpack_require__(/*! ./getPayPalToken */ 285);
	var initializePayPalCheckout = __webpack_require__(/*! ./initializePayPalCheckout */ 286);
	
	var getOrderDetails = __webpack_require__(/*! ./getOrderDetails */ 287);
	var placeOrder = __webpack_require__(/*! ./placeOrder */ 288);
	
	var validateApplePayMerchant = __webpack_require__(/*! ./validateApplePayMerchant */ 289);
	
	var createShippingAddress = __webpack_require__(/*! ./addresses/createShippingAddress */ 290);
	var updateShippingAddress = __webpack_require__(/*! ./addresses/updateShippingAddress */ 291);
	var setShippingMethod = __webpack_require__(/*! ./addresses/setShippingMethod */ 292);
	var getAvailableShippingMethods = __webpack_require__(/*! ./addresses/getAvailableShippingMethods */ 293);
	
	var addCreditCardToOrder = __webpack_require__(/*! ./creditCards/addCreditCardToOrder */ 294);
	
	var initializeAnonymousCheckout = __webpack_require__(/*! ./initializeAnonymousCheckout */ 295);
	var initializeCheckout = __webpack_require__(/*! ./initializeCheckout */ 296);
	
	module.exports = {
	
	    getPayPalToken: getPayPalToken,
	    initializePayPalCheckout: initializePayPalCheckout,
	
	    getOrderDetails: getOrderDetails,
	    placeOrder: placeOrder,
	
	    validateApplePayMerchant: validateApplePayMerchant,
	
	    createShippingAddress: createShippingAddress,
	    updateShippingAddress: updateShippingAddress, // doesn't appear to be used anywhere as of Wed Aug 23, 2017
	    setShippingMethod: setShippingMethod,
	    getAvailableShippingMethods: getAvailableShippingMethods,
	
	    addCreditCardToOrder: addCreditCardToOrder,
	
	    initializeAnonymousCheckout: initializeAnonymousCheckout,
	    initializeCheckout: initializeCheckout
	};

/***/ }),
/* 285 */
/*!***************************************************************!*\
  !*** ./public_ufe/js/services/api/checkout/getPayPalToken.js ***!
  \***************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Get+PayPal+Token
	
	function getPayPalToken() {
	    var url = '/api/checkout/paypalToken';
	    return refetch.fetch(restApi.getRestLocation(url)).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = getPayPalToken;

/***/ }),
/* 286 */
/*!*************************************************************************!*\
  !*** ./public_ufe/js/services/api/checkout/initializePayPalCheckout.js ***!
  \*************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Initialize+PayPal+checkout+API
	
	
	function initializePayPalCheckout(payload) {
	    var url = '/api/checkout/paypal/init';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'POST',
	        body: JSON.stringify(payload)
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = initializePayPalCheckout;

/***/ }),
/* 287 */
/*!****************************************************************!*\
  !*** ./public_ufe/js/services/api/checkout/getOrderDetails.js ***!
  \****************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Get+Order+Details+API
	
	function getOrderDetails(orderId) {
	    var url = '/api/checkout/orders/' + orderId + '?includeShippingItems=true&includeProfileFlags=true';
	    return refetch.fetch(restApi.getRestLocation(url), { method: 'GET' }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = getOrderDetails;

/***/ }),
/* 288 */
/*!***********************************************************!*\
  !*** ./public_ufe/js/services/api/checkout/placeOrder.js ***!
  \***********************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Place+Order+API
	
	function placeOrder(params) {
	    var url = '/api/checkout/submitOrder';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'POST',
	        body: JSON.stringify(params)
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = placeOrder;

/***/ }),
/* 289 */
/*!*************************************************************************!*\
  !*** ./public_ufe/js/services/api/checkout/validateApplePayMerchant.js ***!
  \*************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Merchant+Validation+ApplePay
	
	function validateApplePayMerchant(domainName, validationUrl) {
	    var url = '/api/checkout/applePay/validateMerchant';
	
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'POST',
	        body: JSON.stringify({
	            domainName: domainName,
	            validationURL: validationUrl
	        })
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = validateApplePayMerchant;

/***/ }),
/* 290 */
/*!********************************************************************************!*\
  !*** ./public_ufe/js/services/api/checkout/addresses/createShippingAddress.js ***!
  \********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Create+Shipping+Address+API
	
	function createShippingAddress(addressData) {
	    var url = '/api/checkout/orders/shippingGroups/shippingAddress';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'POST',
	        body: JSON.stringify(addressData)
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = createShippingAddress;

/***/ }),
/* 291 */
/*!********************************************************************************!*\
  !*** ./public_ufe/js/services/api/checkout/addresses/updateShippingAddress.js ***!
  \********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Update+Shipping+Address+API
	
	function updateShippingAddress(addressData) {
	    var url = '/api/checkout/orders/shippingGroups/shippingAddress';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'PUT',
	        body: JSON.stringify(addressData)
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = updateShippingAddress;

/***/ }),
/* 292 */
/*!****************************************************************************!*\
  !*** ./public_ufe/js/services/api/checkout/addresses/setShippingMethod.js ***!
  \****************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Set+Shipping+Method+API
	
	function setShippingMethod(shippingMethodData) {
	    var url = '/api/checkout/orders/shippingGroups/shippingMethod';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'POST',
	        body: JSON.stringify(shippingMethodData)
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = setShippingMethod;

/***/ }),
/* 293 */
/*!**************************************************************************************!*\
  !*** ./public_ufe/js/services/api/checkout/addresses/getAvailableShippingMethods.js ***!
  \**************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Get+Available+Shipping+Methods+API
	
	function getAvailableShippingMethods(orderId, shippingGroupId) {
	        var url = '/api/checkout/orders/' + orderId + '/shippingGroups/' + shippingGroupId + '/shippingMethods';
	        return refetch.fetch(restApi.getRestLocation(url), { method: 'GET' }).then(function (data) {
	                return data.errorCode ? Promise.reject(data) : data;
	        });
	}
	
	module.exports = getAvailableShippingMethods;

/***/ }),
/* 294 */
/*!*********************************************************************************!*\
  !*** ./public_ufe/js/services/api/checkout/creditCards/addCreditCardToOrder.js ***!
  \*********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Add+Credit+Card+To+Order+API
	
	
	function addCreditCardToOrder(creditCardData) {
	    var url = '/api/checkout/orders/creditCard';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'POST',
	        body: JSON.stringify(creditCardData)
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = addCreditCardToOrder;

/***/ }),
/* 295 */
/*!****************************************************************************!*\
  !*** ./public_ufe/js/services/api/checkout/initializeAnonymousCheckout.js ***!
  \****************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Initiate+Anonymous+Checkout+API
	
	function initializeAnonymousCheckout(payload) {
	    var url = '/api/checkout/initAnonymousPurchase';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'POST',
	        body: JSON.stringify(payload)
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = initializeAnonymousCheckout;

/***/ }),
/* 296 */
/*!*******************************************************************!*\
  !*** ./public_ufe/js/services/api/checkout/initializeCheckout.js ***!
  \*******************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Initialize+checkout+API
	
	function initializeCheckout(payload) {
	    var url = '/api/checkout/order/init';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'POST',
	        body: JSON.stringify(payload)
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = initializeCheckout;

/***/ }),
/* 297 */
/*!*******************************************!*\
  !*** ./public_ufe/js/utils/decorators.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var Authentication = __webpack_require__(/*! utils/Authentication */ 173);
	var getUser = __webpack_require__(/*! utils/User */ 186).getUser;
	var store = __webpack_require__(/*! Store */ 146);
	var watch = __webpack_require__(/*! redux-watch */ 187);
	var Actions = __webpack_require__(/*! Actions */ 175);
	
	function decorateWithCollectStateUpdatesFeature(decoratedComponentInstance) {
	    var originalSetState = decoratedComponentInstance.setState;
	
	    decoratedComponentInstance.collectState = function (state) {
	        if (!this._collectedState) {
	            this._collectedState = {};
	        }
	
	        this._collectedState = Object.assign({}, this._collectedState, state);
	    };
	
	    decoratedComponentInstance.setState = function (state) {
	        var stateToSet = Object.assign({}, this._collectedState, state);
	        originalSetState.call(this, stateToSet);
	    };
	}
	
	// TODO 17.4: consolidate ensure recognized and force log in methods
	// This function is a complete copy of ensureUserIsSignedIn decorator
	// Only difference is that we are using the requireRecognizedAuthentication method
	// instead of the requireLoggedInAuthentication method
	function ensureUserIsAtLeastRecognized(DecoratedComponent) {
	
	    var originalCtrlr = DecoratedComponent.prototype.ctrlr;
	    var ctrlrAsync = DecoratedComponent.prototype.ctrlrAsync;
	
	    var isUserAtleastRecognizedKey = '_' + Math.round(Math.random() * 1000000) + '_isUserAtleastRecognized';
	
	    DecoratedComponent.prototype.ctrlr = function () {
	        var _this = this;
	
	        decorateWithCollectStateUpdatesFeature(this);
	
	        var rememberUserIsAtLeastRecognizedAndInvokeOriginalController = function rememberUserIsAtLeastRecognizedAndInvokeOriginalController(user) {
	            var done = void 0;
	            var finish = new Promise(function (resolve) {
	                done = resolve;
	            });
	
	            _this.collectState(_defineProperty({}, isUserAtleastRecognizedKey, true));
	
	            if (ctrlrAsync) {
	                ctrlrAsync.call(_this, user, done);
	            } else {
	                originalCtrlr.call(_this, user);
	                done();
	            }
	
	            finish.then(function () {
	                if (_this.state[isUserAtleastRecognizedKey] === undefined) {
	                    _this.setState({});
	                }
	            });
	        };
	
	        Authentication.requireRecognizedAuthentication().then(function () {
	            getUser().then(function (user) {
	                rememberUserIsAtLeastRecognizedAndInvokeOriginalController.call(_this, user);
	            });
	        }).catch(function () {
	
	            _this.collectState(_defineProperty({}, isUserAtleastRecognizedKey, false));
	
	            _this.ctrlrForNotSignedIn();
	
	            if (_this.state[isUserAtleastRecognizedKey] === undefined) {
	                _this.setState({});
	            }
	
	            var userWatch = watch(store.getState, 'user');
	            store.subscribe(userWatch(function (newUser) {
	                if (newUser.profileId) {
	                    rememberUserIsAtLeastRecognizedAndInvokeOriginalController.call(_this, newUser);
	                }
	            }));
	        });
	    };
	
	    DecoratedComponent.prototype.isUserAtleastRecognized = function () {
	        return this.state[isUserAtleastRecognizedKey] === true;
	    };
	
	    DecoratedComponent.prototype.isUserReady = function () {
	        return typeof this.state[isUserAtleastRecognizedKey] === 'boolean';
	    };
	
	    DecoratedComponent.prototype.ctrlrForNotSignedIn = function () {};
	
	    return DecoratedComponent;
	}
	
	function ensureUserIsSignedIn(DecoratedComponent) {
	
	    var originalCtrlr = DecoratedComponent.prototype.ctrlr;
	    var ctrlrAsync = DecoratedComponent.prototype.ctrlrAsync;
	
	    // This is needed to prevent developers from even trying to rely on the
	    // underlying state property.
	    var isUserAuthenticatedKey = '_' + Math.round(Math.random() * 1000000) + '_isUserAuthenticated';
	
	    DecoratedComponent.prototype.ctrlr = function () {
	        var _this2 = this;
	
	        // This decoration here is needed for performance reasons.
	        // If we used setState to set _isUserAuthenticated below, it would cause
	        // a render. Then, `originalCtlr.call(this, user)` following it is going
	        // to set the state by its design and cause another render. So, with the
	        // setState approach, by using setState twie, we would end up having two
	        // renders. This is exactly what we're trying to avoid.
	        decorateWithCollectStateUpdatesFeature(this);
	
	        var rememberUserIsAuthenticatedAndInvokeOriginalController = function rememberUserIsAuthenticatedAndInvokeOriginalController(user) {
	            var done = void 0;
	            var finish = new Promise(function (resolve) {
	                done = resolve;
	            });
	
	            _this2.collectState(_defineProperty({}, isUserAuthenticatedKey, true));
	
	            if (ctrlrAsync) {
	                ctrlrAsync.call(_this2, user, done);
	            } else {
	                originalCtrlr.call(_this2, user);
	                done();
	            }
	
	            // For the ctrlrAsync to continue the `done` is passed to it.
	            // That `done` is exactly what's finishes the decorator work. For
	            // the regular synchronous `ctrlr` the `done` is called
	            // automatically in the implicit manner above.
	            finish.then(function () {
	                // There was no setState in the original component, but we still
	                // need the _isUserAuthenticated to end in the state, so we're
	                // setting it here purposely.
	                if (_this2.state[isUserAuthenticatedKey] === undefined) {
	                    _this2.setState({});
	                }
	            });
	        };
	
	        Authentication.requireLoggedInAuthentication().then(function () {
	            // TODO 17.4 mykhaylo.gavrylyuk: Figure out why the user is not
	            // present right after the authentication and remove the 2nd level.
	            getUser().then(function (user) {
	                rememberUserIsAuthenticatedAndInvokeOriginalController.call(_this2, user);
	            });
	        }).catch(function () {
	            // NOTE mykhaylo.gavrylyuk: We may need to analize reasons for
	            // failure at some future point to make components familiar with
	            // them in order to render differently.
	            // THIS IS THE VERY PLACE FOR DOING THAT!
	
	            _this2.collectState(_defineProperty({}, isUserAuthenticatedKey, false));
	
	            _this2.ctrlrForNotSignedIn();
	
	            // For the same purpose described above.
	            if (_this2.state[isUserAuthenticatedKey] === undefined) {
	                _this2.setState({});
	            }
	
	            var userWatch = watch(store.getState, 'user');
	            store.subscribe(userWatch(function (newUser) {
	                if (newUser.profileId) {
	                    rememberUserIsAuthenticatedAndInvokeOriginalController.call(_this2, newUser);
	                }
	            }));
	        });
	    };
	
	    // NOTE! This method should always be used in conjunction with
	    // #isUserReady(), as because if the user is not ready, it will look like
	    // she's not authenticated, which is not true, because she's just not yet
	    // arrived.
	    DecoratedComponent.prototype.isUserAuthenticated = function () {
	        return this.state[isUserAuthenticatedKey] === true;
	    };
	
	    DecoratedComponent.prototype.isUserReady = function () {
	        // It is safe to use this property here too as once the user is ready,
	        // it's value will be either true, or false. And this way we don't need
	        // to introduce another property on the state, which is good.
	        return typeof this.state[isUserAuthenticatedKey] === 'boolean';
	    };
	
	    // If there's ever a need to set state on component for the case
	    // when user is not authenticated, this is the right place.
	    // Please overwrite this dummy method on your components.
	    DecoratedComponent.prototype.ctrlrForNotSignedIn = function () {};
	
	    return DecoratedComponent;
	}
	
	function requireSignedInUser(DecoratedComponent) {
	    var originalCtrlr = DecoratedComponent.prototype.ctrlr;
	
	    DecoratedComponent.prototype.ctrlr = function () {
	        var _this3 = this;
	
	        getUser().then(function (user) {
	            originalCtrlr.call(_this3, user);
	        });
	    };
	
	    return DecoratedComponent;
	}
	
	// The purpose of this decorator is to make showing/hiding the interstice
	// as easy as wrapping the related api call.
	//
	// It is supposed to be leveraged with the use of `withInterstice` morphem
	// in the code:
	//
	// > withInterstice(checkoutApi.getOrderDetails)(orderId)
	
	function decorateApiCallWithInterstice(method) {
	    return function () {
	        store.dispatch(Actions.showInterstice(true));
	
	        return method.apply(undefined, arguments).then(function (data) {
	            store.dispatch(Actions.showInterstice(false));
	            return Promise.resolve(data);
	        }).catch(function (reason) {
	            store.dispatch(Actions.showInterstice(false));
	            return Promise.reject(reason);
	        });
	    };
	}
	
	module.exports = {
	    ensureUserIsAtLeastRecognized: ensureUserIsAtLeastRecognized,
	    ensureUserIsSignedIn: ensureUserIsSignedIn,
	    requireSignedInUser: requireSignedInUser,
	    decorateApiCallWithInterstice: decorateApiCallWithInterstice,
	    withInterstice: decorateApiCallWithInterstice
	};

/***/ }),
/* 298 */
/*!***********************************************!*\
  !*** ./public_ufe/js/actions/PromoActions.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var updateBasket = __webpack_require__(/*! actions/BasketActions */ 169).updateBasket;
	var processEvent = __webpack_require__(/*! analytics/processEvent */ 176);
	var anaConsts = __webpack_require__(/*! analytics/constants */ 178);
	var showPromoModal = __webpack_require__(/*! actions/Actions */ 175).showPromoModal;
	var skuUtils = __webpack_require__(/*! utils/Sku */ 185);
	var userUtils = __webpack_require__(/*! utils/User */ 186);
	var basketApi = __webpack_require__(/*! services/api/basket */ 170);
	
	var TYPES = {
	    SET_PROMOS: 'SET_PROMOS',
	    APPLY_PROMO_AFTER_LOGIN: 'APPLY_PROMO_AFTER_LOGIN',
	    UPDATE_MSG_PROMO_LIST: 'UPDATE_MSG_PROMO_LIST',
	    REMOVE_PROMOS: 'REMOVE_PROMOS',
	    SHOW_PROMOS_ERROR: 'SHOW_PROMOS_ERROR'
	};
	
	function setPromo(promo, promoCode) {
	    return {
	        type: TYPES.SET_PROMOS,
	        promo: promo,
	        promoCode: promoCode,
	        promoApplied: true,
	        promoWarningMessage: null,
	        promoErrorMessage: null
	    };
	}
	
	function applyPromoAfterLogin(promoCode) {
	    return {
	        type: TYPES.APPLY_PROMO_AFTER_LOGIN,
	        promoCode: promoCode
	    };
	}
	
	function deletePromo() {
	    return {
	        type: TYPES.REMOVE_PROMOS,
	        promo: null,
	        promoApplied: false
	    };
	}
	
	function updateMsgPromosList(msgPromosSkuList, promoCode) {
	    return {
	        type: TYPES.UPDATE_MSG_PROMO_LIST,
	        msgPromosSkuList: msgPromosSkuList,
	        promoCode: promoCode
	    };
	}
	
	function showPromoError(promoError) {
	    return {
	        type: TYPES.SHOW_PROMOS_ERROR,
	        promoErrorMessage: promoError.errorMessages[0]
	    };
	}
	
	function applyPromo(promoCode, successCallback, failureCallback) {
	    failureCallback = failureCallback || successCallback;
	
	    return function (dispatch) {
	        basketApi.applyPromotion(promoCode).then(function (data) {
	            if (data.responseStatus === 202) {
	                dispatch(setPromo(data, promoCode));
	                dispatch(showPromoModal(true, data.items, data.maxMsgSkusToSelect, data.instructions, promoCode));
	            } else {
	                dispatch(setPromo(data, promoCode));
	                dispatch(updateBasket(data));
	                successCallback && successCallback();
	            }
	
	            var analyticsData = {
	                eventStrings: [anaConsts.Event.EVENT_71],
	                linkName: 'Enter Promo Code',
	                actionInfo: 'Enter Promo Code',
	                userInput: promoCode
	            };
	
	            processEvent.process(anaConsts.LINK_TRACKING_EVENT, { data: analyticsData });
	        }).catch(function (reason) {
	            if (userUtils.isAnonymous()) {
	                dispatch(applyPromoAfterLogin(promoCode));
	            }
	
	            failureCallback && failureCallback(reason);
	
	            analyticsData = Object.assign({}, analyticsData, {
	                serverResponse: reason.errorMessages.join(','),
	                fieldErrors: ['promo'],
	                errorMessages: reason.errorMessages
	            });
	        });
	    };
	}
	
	function removePromo(orderId, successCallback, failureCallback) {
	    return function (dispatch) {
	        basketApi.removePromotion(orderId).then(function (data) {
	            dispatch(deletePromo(data));
	            data.promoMessage = data.promoMessage ? data.promoMessage : null;
	            data.promoWarning = data.promoWarning ? data.promoWarning : null;
	            dispatch(updateBasket(data));
	        }).catch(failureCallback);
	    };
	}
	
	function updateMsgPromo(sku) {
	    return function (dispatch, getState) {
	        var msgPromosSkuList = getState().promo.msgPromosSkuList;
	        var promoCode = getState().promo.promoCode;
	        if (!skuUtils.isInMsgPromoSkuList(sku.skuId)) {
	            msgPromosSkuList.push(sku.skuId);
	        } else {
	            msgPromosSkuList = msgPromosSkuList.filter(function (elem) {
	                return elem !== sku.skuId;
	            });
	        }
	
	        dispatch(updateMsgPromosList(msgPromosSkuList, promoCode));
	    };
	}
	
	function submitMsgPromos() {
	    return function (dispatch, getState) {
	        var couponCode = getState().promo.promoCode;
	        var sampleSkuIdList = getState().promo.msgPromosSkuList;
	
	        basketApi.addMsgPromotionToBasket(couponCode, sampleSkuIdList).then(function (data) {
	            data.promoMessage = !data.promoMessage ? null : data.promoMessage;
	            data.promoWarning = !data.promoWarning ? null : data.promoWarning;
	            dispatch(showPromoModal(false));
	            dispatch(updateBasket(data));
	        }).catch(function (reason) {
	            dispatch(showPromoError(reason));
	        });
	    };
	}
	
	module.exports = {
	    TYPES: TYPES,
	    applyPromo: applyPromo,
	    removePromo: removePromo,
	    updateMsgPromo: updateMsgPromo,
	    submitMsgPromos: submitMsgPromos
	};

/***/ }),
/* 299 */
/*!***************************************************************!*\
  !*** ./public_ufe/js/services/api/basket/getBasketDetails.js ***!
  \***************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Get+Basket+Details+API
	
	
	function getBasketDetails() {
	    var url = '/api/shopping-cart/basket';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'GET'
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = getBasketDetails;

/***/ }),
/* 300 */
/*!**************************************************************!*\
  !*** ./public_ufe/js/services/api/basket/subscribeToPlay.js ***!
  \**************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Subscribe+to+PLAY+API
	
	
	function subscribeToPlay(skuId) {
	    var authData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    var userId = __webpack_require__(/*! utils/User */ 186).getProfileId();
	    var url = '/api/shopping-cart/playSubscription';
	    var data = {
	        skuList: [{ skuId: skuId, qty: 1 }]
	    };
	    if (authData.isNewUserFlow) {
	        // API requires email instead of profileId for Play New User Flow
	        data.email = authData.userName;
	    } else {
	        data.profileId = userId;
	    }
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'POST',
	        body: JSON.stringify(data)
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = subscribeToPlay;

/***/ }),
/* 301 */
/*!********************************************************!*\
  !*** ./public_ufe/js/services/api/basket/addToCart.js ***!
  \********************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Add+to+Cart+API
	
	
	function addToCart(_ref) {
	    var orderId = _ref.orderId,
	        skuList = _ref.skuList;
	
	    var url = '/api/shopping-cart/basket/items';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'POST',
	        body: JSON.stringify({ orderId: orderId, skuList: skuList })
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = addToCart;

/***/ }),
/* 302 */
/*!*************************************************************!*\
  !*** ./public_ufe/js/services/api/basket/applyPromotion.js ***!
  \*************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Apply+Promotion+API
	
	function applyPromotion(couponCode) {
	    var url = '/api/shopping-cart/basket/promotions';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'POST',
	        body: JSON.stringify({ couponCode: couponCode })
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = applyPromotion;

/***/ }),
/* 303 */
/*!***********************************************************!*\
  !*** ./public_ufe/js/services/api/basket/updateBasket.js ***!
  \***********************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Update+Basket+API
	
	
	function updateBasket(_ref) {
	    var orderId = _ref.orderId,
	        skuList = _ref.skuList,
	        modifyConfirmed = _ref.modifyConfirmed;
	
	    var url = '/api/shopping-cart/basket/items';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'PUT',
	        body: JSON.stringify({
	            orderId: orderId,
	            skuList: skuList,
	            modifyConfirmed: !!modifyConfirmed
	        })
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = updateBasket;

/***/ }),
/* 304 */
/*!*****************************************************************!*\
  !*** ./public_ufe/js/services/api/basket/addSamplesToBasket.js ***!
  \*****************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Add+Samples+to+Basket+API
	
	
	function addSamplesToBasket(sampleSkuIdList) {
	    var url = '/api/shopping-cart/basket/samples';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'POST',
	        body: JSON.stringify({ sampleSkuIdList: sampleSkuIdList })
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = addSamplesToBasket;

/***/ }),
/* 305 */
/*!**********************************************************************!*\
  !*** ./public_ufe/js/services/api/basket/addMsgPromotionToBasket.js ***!
  \**********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Add+MSG+Promotion+to+Basket+API
	
	
	function addMsgPromotionToBasket(couponCode, sampleSkuIdList) {
	    var url = '/api/shopping-cart/basket/msgs';
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'POST',
	        body: JSON.stringify({ couponCode: couponCode, sampleSkuIdList: sampleSkuIdList })
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = addMsgPromotionToBasket;

/***/ }),
/* 306 */
/*!**************************************************************!*\
  !*** ./public_ufe/js/services/api/basket/removePromotion.js ***!
  \**************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Remove+Promotion+API
	
	function removePromotion(orderId) {
	    var url = '/api/shopping-cart/baskets/' + orderId + '/promotions';
	
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'DELETE',
	        body: JSON.stringify({ orderId: orderId })
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = removePromotion;

/***/ }),
/* 307 */
/*!******************************************************************!*\
  !*** ./public_ufe/js/services/api/basket/removeSkuFromBasket.js ***!
  \******************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	
	// https://jira.sephora.com/wiki/display/ILLUMINATE/Remove+SKU+from+basket+API
	
	
	function removeSkuFromBasket(orderId, skuId, modifyConfirmed) {
	    var url = '/api/shopping-cart/baskets/' + orderId + '/items/' + skuId;
	
	    if (modifyConfirmed) {
	        url += '?modifyConfirmed=true';
	    }
	
	    return refetch.fetch(restApi.getRestLocation(url), {
	        method: 'DELETE'
	    }).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : data;
	    });
	}
	
	module.exports = removeSkuFromBasket;

/***/ }),
/* 308 */
/*!************************************************************************!*\
  !*** ./public_ufe/js/analytics/bindings/pages/all/addToBasketEvent.js ***!
  \************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(/*! analytics/utils */ 179);
	var anaConsts = __webpack_require__(/*! analytics/constants */ 178);
	var deepExtend = __webpack_require__(/*! deep-extend */ 180);
	
	module.exports = function (data) {
	
	    var currentEvent = utils.getMostRecentEvent(anaConsts.LINK_TRACKING_EVENT);
	
	    var attributes = {
	        linkName: 'Add To Basket',
	        actionInfo: 'Add To Basket',
	        eventStrings: [anaConsts.Event.SC_ADD]
	    };
	
	    if (data.sku.rootContainerName) {
	        attributes.internalCampaign = data.sku.rootContainerName + ':' + data.sku.productId + ':add-to-basket';
	    }
	
	    deepExtend(currentEvent, {
	        eventInfo: {
	            attributes: attributes
	        }
	    });
	};

/***/ }),
/* 309 */
/*!*********************************************!*\
  !*** ./public_ufe/js/analytics/bluecore.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var analyticsUtils = __webpack_require__(/*! analytics/utils */ 179);
	
	module.exports = {
	
	    addToCartEvent: function addToCartEvent(productId) {
	        if (analyticsUtils.safelyReadProperty('Sephora.analytics.promises.bluecoreReady')) {
	            Sephora.analytics.promises.bluecoreReady.then(function () {
	                if (typeof triggermail !== 'undefined') {
	                    triggermail.add_to_cart({ id: productId });
	                }
	            });
	        }
	    },
	
	    removeFromCartEvent: function removeFromCartEvent(productId) {
	        if (analyticsUtils.safelyReadProperty('Sephora.analytics.promises.bluecoreReady')) {
	            Sephora.analytics.promises.bluecoreReady.then(function () {
	                if (typeof triggermail !== 'undefined') {
	                    bluecore.track('remove_from_cart', { id: productId });
	                }
	            });
	        }
	    },
	
	    productViewedEvent: function productViewedEvent(productId) {
	        if (analyticsUtils.safelyReadProperty('Sephora.analytics.promises.bluecoreReady')) {
	            Sephora.analytics.promises.bluecoreReady.then(function () {
	                if (typeof triggermail !== 'undefined') {
	                    triggermail.view({ id: productId }, { partial: true });
	                }
	            });
	        }
	    }
	
	};

/***/ }),
/* 310 */
/*!******************************************************!*\
  !*** ./public_ufe/js/actions/InlineBasketActions.js ***!
  \******************************************************/
/***/ (function(module, exports) {

	'use strict';
	
	var TYPES = {
	    ADDED_PRODUCTS_NOTIFICATION: 'ADDED_PRODUCTS_NOTIFICATION',
	    RESET_PRODUCTS_NOTIFICATION: 'RESET_PRODUCTS_NOTIFICATION',
	    SHOW_BASKET: 'SHOW_BASKET'
	};
	
	function addedProductsNotification(addedProductsCount) {
	    return {
	        type: TYPES.ADDED_PRODUCTS_NOTIFICATION,
	        justAddedProducts: addedProductsCount
	    };
	}
	
	function resetProductsNotification() {
	    var defaultValue = 0;
	    return {
	        type: TYPES.RESET_PRODUCTS_NOTIFICATION,
	        justAddedProducts: defaultValue
	    };
	}
	
	function showInlineBasket(isOpen) {
	    return {
	        type: TYPES.SHOW_BASKET,
	        isOpen: isOpen
	    };
	}
	
	module.exports = {
	
	    TYPES: TYPES,
	
	    addedProductsNotification: addedProductsNotification,
	
	    resetProductsNotification: resetProductsNotification,
	
	    showInlineBasket: showInlineBasket
	
	};

/***/ }),
/* 311 */
/*!*****************************************************************************!*\
  !*** ./public_ufe/js/analytics/bindings/pages/all/removeFromBasketEvent.js ***!
  \*****************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(/*! analytics/utils */ 179);
	var anaConsts = __webpack_require__(/*! analytics/constants */ 178);
	var deepExtend = __webpack_require__(/*! deep-extend */ 180);
	
	module.exports = function (data) {
	
	    var currentEvent = utils.getMostRecentEvent(anaConsts.LINK_TRACKING_EVENT);
	
	    deepExtend(currentEvent, {
	        eventInfo: {
	            attributes: {
	                // Should anything be added to the removeFromBasket link
	                // tracking event or removed from it, please do that here.
	            }
	        }
	    });
	};

/***/ }),
/* 312 */
/*!********************************************!*\
  !*** ./public_ufe/js/reducers/category.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var ACTION_TYPES = __webpack_require__(/*! actions/CategoryActions */ 313).TYPES;
	
	var initialState = {
	    categories: null
	};
	
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.UPDATE_CATEGORIES:
	            return Object.assign({}, state, {
	                categories: action.categories
	            });
	
	        default:
	            return state;
	    }
	};

/***/ }),
/* 313 */
/*!**************************************************!*\
  !*** ./public_ufe/js/actions/CategoryActions.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var LOCAL_STORAGE = __webpack_require__(/*! utils/localStorage/Constants */ 274);
	var Storage = __webpack_require__(/*! utils/localStorage/Storage */ 275);
	var legacyMwebApi = __webpack_require__(/*! services/api/legacy-mweb */ 314);
	
	var TYPES = { UPDATE_CATEGORIES: 'UPDATE_CATEGORIES' };
	
	function updateCategories(categories) {
	    return {
	        type: TYPES.UPDATE_CATEGORIES,
	        categories: categories
	    };
	}
	
	function fetchCategories() {
	    return function (dispatch) {
	        legacyMwebApi.getCategoryHierarchy().then(function (data) {
	            // Expires at 2 PM UTC (6 AM PST) of next day
	            var expiry = new Date();
	            var expiryTime = 14;
	
	            expiry.setDate(expiry.getDate() + 1);
	            expiry.setUTCHours(expiryTime);
	            expiry.setUTCMinutes(0);
	            expiry.setUTCSeconds(0);
	
	            Storage.local.setItem(LOCAL_STORAGE.CATNAV, data, expiry);
	            dispatch(updateCategories(data));
	        });
	    };
	}
	
	module.exports = {
	    TYPES: TYPES,
	    fetchCategories: fetchCategories,
	    updateCategories: updateCategories
	};

/***/ }),
/* 314 */
/*!*********************************************************!*\
  !*** ./public_ufe/js/services/api/legacy-mweb/index.js ***!
  \*********************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// This API section contains methods to trigger all legacy (mweb TOM) endpoints
	// which are still being used.
	// Unfortunately, those API endpoints are not documented.
	
	var getCategoryHierarchy = __webpack_require__(/*! ./getCategoryHierarchy */ 315);
	
	module.exports = {
	    getCategoryHierarchy: getCategoryHierarchy
	};

/***/ }),
/* 315 */
/*!************************************************************************!*\
  !*** ./public_ufe/js/services/api/legacy-mweb/getCategoryHierarchy.js ***!
  \************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var refetch = __webpack_require__(/*! Refetch */ 172);
	var restApi = __webpack_require__(/*! RestApi */ 174);
	var UrlUtils = __webpack_require__(/*! utils/Url */ 2);
	
	// Mweb TOM RestController.java getCategoryHierarchy => /api/shop/all
	
	
	function dangerouslyAdaptData(data) {
	
	    // Andrew Halfhill:
	    // TODO: remove this once category template supports ufe components
	
	    data.forEach(function (cat) {
	        var leftContent = cat.content && cat.content.region1 ? cat.content.region1 : [];
	        var bannerContent = cat.megaNavMarketingBanner;
	        if (leftContent.length) {
	            leftContent.forEach(function (linkGroup) {
	                if (linkGroup.componentType === 9) {
	                    linkGroup.componentType = 59;
	                    linkGroup.displayTitle = linkGroup.title;
	                    if (linkGroup.links && linkGroup.links.length) {
	                        linkGroup.links.forEach(function (link) {
	                            link.componentType = 58;
	                            link.displayTitle = link.linkText;
	                        });
	                    }
	                }
	            });
	        }
	
	        if (bannerContent && bannerContent.length) {
	            bannerContent.forEach(function (banner) {
	                if (banner) {
	                    banner.componentType = 53;
	                }
	            });
	        }
	    });
	
	    return data;
	}
	
	function getCategoryHierarchy() {
	    var url = '/api/shop/all';
	    return refetch.fetch(restApi.getRestLocation(UrlUtils.getLink(url))).then(function (data) {
	        return data.errorCode ? Promise.reject(data) : dangerouslyAdaptData(data);
	    });
	}
	
	module.exports = getCategoryHierarchy;

/***/ }),
/* 316 */
/*!*********************************************!*\
  !*** ./public_ufe/js/reducers/framework.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var ACTION_TYPES = __webpack_require__(/*! ../actions/FrameworkActions */ 96).TYPES;
	
	var initialState = {
	    queryParams: {}
	};
	
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.UPDATE_QUERY_PARAMS:
	            return Object.assign({}, state, {
	                queryParams: action.queryParams
	            });
	
	        default:
	            return state;
	    }
	};

/***/ }),
/* 317 */
/*!*********************************************!*\
  !*** ./public_ufe/js/reducers/hamburger.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var ACTION_TYPES = __webpack_require__(/*! ../actions/Actions */ 175).TYPES;
	var USER_ACTION_TYPES = __webpack_require__(/*! ../actions/UserActions */ 210).TYPES;
	
	var initialState = {
	    isOpen: false,
	    openItem: null
	};
	
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.SHOW_HAMBURGER_MENU:
	            var toggle = action.isOpen ? action.isOpen : !state.isOpen;
	
	            return Object.assign({}, state, {
	                isOpen: toggle,
	                openItem: null
	            });
	        case USER_ACTION_TYPES.UPDATE:
	            return Object.assign({}, state, {
	                isOpen: false,
	                openItem: null
	            });
	
	        default:
	            return state;
	    }
	};

/***/ }),
/* 318 */
/*!**********************************************!*\
  !*** ./public_ufe/js/reducers/interstice.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var ACTION_TYPES = __webpack_require__(/*! ../actions/Actions */ 175).TYPES;
	
	var initialState = {
	    isVisible: false
	};
	
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.SHOW_INTERSTICE:
	            return Object.assign({}, state, {
	                isVisible: action.isVisible
	            });
	
	        default:
	            return state;
	    }
	};

/***/ }),
/* 319 */
/*!******************************************!*\
  !*** ./public_ufe/js/reducers/modals.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var ACTION_TYPES = __webpack_require__(/*! ../actions/Actions */ 175).TYPES;
	var RESERVATION_ACTION_TYPES = __webpack_require__(/*! ../actions/ReservationActions */ 320).TYPES;
	var PROFILE_ACTION_TYPES = __webpack_require__(/*! ../actions/ProfileActions */ 278).TYPES;
	
	var initialState = {
	    showBccModal: false,
	    showRegisterModal: false,
	    showSignInModal: false,
	    showBiRegisterModal: false,
	    showForgotPasswordModal: false,
	    showInfoModal: false,
	    infoModalTitle: '',
	    infoModalMessage: '',
	    infoModalButtonText: '',
	    infoModalCallback: null,
	    showInfoModalCancelButton: false,
	    infoModalCancelText: '',
	    infoModalMessageIsHtml: false,
	    confirmMsgObj: {},
	    showMediaModal: false,
	    mediaModalId: '',
	    mediaModalTitle: '',
	    mediaModalClose: null,
	    showSampleModal: false,
	    showVideoModal: false,
	    showRewardModal: false,
	    sampleList: null,
	    allowedQtyPerOrder: 0,
	    samplesMessage: '',
	    showPromoModal: false,
	    showColorIQModal: false,
	    colorIQModalCallback: null,
	    promoCode: null,
	    promosList: null,
	    maxMsgSkusToSelect: 0,
	    instructions: '',
	    showFindInStoreModal: false,
	    showFindInStoreMapModal: false,
	    storesToShow: null,
	    zipCode: null,
	    searchedDistance: null,
	    currentProduct: null,
	    showCountrySwitcherModal: false,
	    showCountrySwitcherPrompt: false,
	    showInternationalShippingModal: false,
	    bccModalTemplate: null,
	    signInMessages: null,
	    signInCallback: null,
	    signInErrback: null,
	    registerCallback: null,
	    registerErrback: null,
	    biRegisterCallback: null,
	    biRegisterCancellationCallback: null,
	    showQuickLookModal: false,
	    quickLookProduct: null,
	    skuType: null,
	    quickLookSku: null,
	    desiredCountry: null,
	    desiredLang: null,
	    presetLogin: null,
	    switchCountryName: null,
	    showEmailMeWhenInStockModal: false,
	    showMoreReservationsModal: false,
	    showTimeTradeModal: false,
	    reservationInfo: {},
	    showEditMyProfileModal: false,
	    showEditFlowModal: false,
	    editFlowTitle: '',
	    editFlowContent: null,
	    biAccount: null,
	    socialProfile: null,
	    saveProfileCallback: null,
	    showShareLinkModal: false,
	    showSocialRegistrationModal: false,
	    socialRegistrationProvider: null,
	    socialRegistrationCallback: null,
	    showSocialReOptModal: false,
	    socialReOptCallback: null,
	    isEditProfileFlow: false,
	    isCommunity: false,
	    showProductFinderModal: false,
	    guidedSellingData: null
	};
	
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    switch (action.type) {
	        case ACTION_TYPES.SHOW_BCC_MODAL:
	            return Object.assign({}, state, {
	                showBccModal: action.isOpen,
	                bccModalTemplate: action.bccModalTemplate
	            });
	
	        case ACTION_TYPES.SHOW_SIGN_IN_MODAL:
	            return Object.assign({}, state, {
	                showSignInModal: action.isOpen,
	                signInMessages: action.messages,
	                isNewUserFlow: action.isNewUserFlow,
	                signInCallback: action.callback,
	                signInErrback: action.errback
	            });
	
	        case ACTION_TYPES.SHOW_FORGOT_PASSWORD_MODAL:
	            return Object.assign({}, state, {
	                showForgotPasswordModal: action.isOpen,
	                presetLogin: action.email
	            });
	
	        case ACTION_TYPES.SHOW_INFO_MODAL:
	            return Object.assign({}, state, {
	                showInfoModal: action.isOpen,
	                infoModalTitle: action.title,
	                infoModalMessage: action.message,
	                infoModalCallback: action.callback,
	                infoModalButtonText: action.buttonText,
	                showInfoModalCancelButton: action.showCancelButton,
	                infoModalCancelText: action.cancelText,
	                infoModalMessageIsHtml: action.isHtml,
	                confirmMsgObj: action.confirmMsgObj,
	                infoModalCancelCallback: action.cancelCallback
	            });
	
	        case ACTION_TYPES.SHOW_MEDIA_MODAL:
	            return Object.assign({}, state, {
	                showMediaModal: action.isOpen,
	                mediaModalId: action.mediaId,
	                mediaModalTitle: action.title,
	                mediaModalClose: action.modalClose
	            });
	
	        case ACTION_TYPES.SHOW_SAMPLE_MODAL:
	            return Object.assign({}, state, {
	                showSampleModal: action.isOpen,
	                sampleList: action.sampleList,
	                allowedQtyPerOrder: action.allowedQtyPerOrder,
	                samplesMessage: action.samplesMessage
	            });
	
	        case ACTION_TYPES.SHOW_VIDEO_MODAL:
	            return Object.assign({}, state, {
	                showVideoModal: action.isOpen,
	                videoTitle: action.videoTitle,
	                videoModalUpdated: action.videoModalUpdated,
	                video: action.video
	            });
	
	        case ACTION_TYPES.SHOW_PROMO_MODAL:
	            return Object.assign({}, state, {
	                showPromoModal: action.isOpen,
	                promoCode: action.promoCode,
	                promosList: action.promosList,
	                maxMsgSkusToSelect: action.maxMsgSkusToSelect,
	                instructions: action.instructions
	            });
	
	        case ACTION_TYPES.SHOW_COLOR_IQ_MODAL:
	            return Object.assign({}, state, {
	                showColorIQModal: action.isOpen,
	                colorIQModalCallback: action.callback
	            });
	
	        case ACTION_TYPES.SHOW_REWARD_MODAL:
	            return Object.assign({}, state, { showRewardModal: action.isOpen });
	
	        case ACTION_TYPES.SHOW_REGISTER_MODAL:
	            return Object.assign({}, state, {
	                showRegisterModal: action.isOpen,
	                presetLogin: action.presetLogin,
	                registerCallback: action.callback,
	                isStoreUser: action.isStoreUser,
	                biData: action.biData,
	                registerErrback: action.errback
	            });
	
	        case ACTION_TYPES.SHOW_BI_REGISTER_MODAL:
	            return Object.assign({}, state, {
	                showBiRegisterModal: action.isOpen,
	                biRegisterCallback: action.callback,
	                biRegisterCancellationCallback: action.cancellationCallback,
	                isCommunity: action.isCommunity
	            });
	
	        case ACTION_TYPES.SHOW_QUICK_LOOK_MODAL:
	            return Object.assign({}, state, {
	                showQuickLookModal: action.isOpen,
	                skuType: action.skuType,
	                quickLookSku: action.sku,
	                isCertonaProduct: action.isCertonaProduct
	            });
	
	        case ACTION_TYPES.SHOW_EMAIL_WHEN_IN_STOCK_MODAL:
	            return Object.assign({}, state, {
	                showQuickLookModal: false,
	                showEmailMeWhenInStockModal: action.isOpen,
	                emailInStockProduct: action.product,
	                emailInStockSku: action.currentSku,
	                isQuickLook: action.isQuickLook
	            });
	
	        case ACTION_TYPES.UPDATE_QUICK_LOOK:
	            return Object.assign({}, state, {
	                quickLookProduct: action.quickLookProduct,
	                sku: action.sku
	            });
	
	        case ACTION_TYPES.SHOW_COUNTRY_SWITCHER_MODAL:
	            return Object.assign({}, state, {
	                showCountrySwitcherModal: action.isOpen,
	                desiredCountry: action.desiredCountry,
	                desiredLang: action.desiredLang,
	                switchCountryName: action.switchCountryName
	            });
	
	        case ACTION_TYPES.SHOW_COUNTRY_SWITCHER_PROMPT:
	            return Object.assign({}, state, { showCountrySwitcherPrompt: action.isOpen });
	
	        case RESERVATION_ACTION_TYPES.SHOW_MORE_RESERVATIONS_MODAL:
	            return Object.assign({}, state, {
	                showMoreReservationsModal: action.reservationInfo.isOpen,
	                upcomingReservations: action.reservationInfo.upcomingReservations,
	                previousReservations: action.reservationInfo.previousReservations,
	                addReservationUrl: action.reservationInfo.addReservationUrl,
	                editReservationUrl: action.reservationInfo.editReservationUrl
	            });
	
	        case RESERVATION_ACTION_TYPES.SHOW_TIME_TRADE_MODAL:
	            return Object.assign({}, state, {
	                showTimeTradeModal: action.reservationInfo.isOpen,
	                timeTradeUrl: action.reservationInfo.timeTradeUrl,
	                appointmentId: action.reservationInfo.appointmentId,
	                clientLastName: action.reservationInfo.clientLastName
	            });
	
	        case ACTION_TYPES.SHOW_INTERNATIONAL_SHIPPING_MODAL:
	            return Object.assign({}, state, { showInternationalShippingModal: action.isOpen });
	
	        case PROFILE_ACTION_TYPES.SHOW_EDIT_MY_PROFILE_MODAL:
	            return Object.assign({}, state, { showEditMyProfileModal: action.isOpen });
	
	        case PROFILE_ACTION_TYPES.SHOW_EDIT_FLOW_MODAL:
	            return Object.assign({}, state, {
	                showEditFlowModal: action.isOpen,
	                editFlowTitle: action.title,
	                editFlowContent: action.content,
	                biAccount: action.biAccount,
	                socialProfile: action.socialProfile,
	                saveProfileCallback: action.saveProfileCallback
	            });
	
	        case ACTION_TYPES.SHOW_SHARE_LINK_MODAL:
	            return Object.assign({}, state, {
	                showShareLinkModal: action.isOpen,
	                title: action.title,
	                shareUrl: action.shareUrl
	            });
	
	        case ACTION_TYPES.SHOW_PRODUCT_FINDER_MODAL:
	            return Object.assign({}, state, {
	                showProductFinderModal: action.isOpen,
	                guidedSellingData: action.bccData
	            });
	
	        case ACTION_TYPES.SHOW_FIND_IN_STORE_MODAL:
	            return Object.assign({}, state, {
	                showFindInStoreModal: action.isOpen,
	                currentProduct: action.currentProduct,
	                zipCode: action.zipCode,
	                searchedDistance: action.searchedDistance,
	                storesToShow: action.storesToShow
	            });
	
	        case ACTION_TYPES.SHOW_FIND_IN_STORE_MAP_MODAL:
	            return Object.assign({}, state, {
	                showFindInStoreMapModal: action.isOpen,
	                currentProduct: action.currentProduct,
	                selectedStore: action.selectedStore,
	                zipCode: action.zipCode,
	                searchedDistance: action.searchedDistance,
	                storesToShow: action.storesToShow
	            });
	
	        case PROFILE_ACTION_TYPES.SHOW_SOCIAL_REGISTRATION_MODAL:
	            return Object.assign({}, state, {
	                showSocialRegistrationModal: action.isOpen,
	                socialRegistrationProvider: action.socialRegistrationProvider,
	                socialRegistrationCallback: action.socialRegistrationCallback,
	                socialRegistrationCancellationCallback: action.socialRegistrationCancellationCallback
	            });
	
	        case PROFILE_ACTION_TYPES.SHOW_SOCIAL_REOPT_MODAL:
	            return Object.assign({}, state, {
	                showSocialReOptModal: action.isOpen,
	                socialReOptCallback: action.socialReOptCallback,
	                socialReOptCancellationCallback: action.cancellationCallback
	            });
	
	        default:
	            return state;
	    }
	};

/***/ }),
/* 320 */
/*!*****************************************************!*\
  !*** ./public_ufe/js/actions/ReservationActions.js ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/* eslint-disable camelcase */
	var profileApi = __webpack_require__(/*! services/api/profile */ 212);
	
	var TYPES = {
	    SHOW_MORE_RESERVATIONS_MODAL: 'SHOW_MORE_RESERVATIONS_MODAL',
	    SHOW_TIME_TRADE_MODAL: 'SHOW_TIME_TRADE_MODAL',
	    GET_RESERVATIONS: 'GET_RESERVATIONS'
	};
	
	function setReservations(response) {
	    return {
	        type: TYPES.GET_RESERVATIONS,
	        upcomingReservations: response.upcomingReservations || [],
	        previousReservations: response.previousReservations || [],
	        addUrl: response.addUrl,
	        editUrl: response.editUrl,
	        error: response.errors
	    };
	}
	
	// Whether call fails or is successful, still dispatch setReservations
	function getReservations(profileId) {
	    return function (dispatch) {
	        profileApi.getReservations(profileId).then(function (data) {
	            return dispatch(setReservations(data));
	        }).catch(function (data) {
	            return dispatch(setReservations(data));
	        });
	    };
	}
	
	module.exports = {
	    TYPES: TYPES,
	
	    showMoreReservationsModal: function showMoreReservationsModal(isOpen, upcoming, previous, addUrl, editUrl) {
	        return {
	            type: TYPES.SHOW_MORE_RESERVATIONS_MODAL,
	            reservationInfo: {
	                isOpen: isOpen,
	                upcomingReservations: upcoming,
	                previousReservations: previous,
	                addReservationUrl: addUrl,
	                editReservationUrl: editUrl
	            }
	        };
	    },
	
	    showTimeTradeModal: function showTimeTradeModal(isOpen, timeTradeUrl, appointmentId, clientLastName) {
	        return {
	            type: TYPES.SHOW_TIME_TRADE_MODAL,
	            reservationInfo: {
	                isOpen: isOpen,
	                timeTradeUrl: timeTradeUrl,
	                appointmentId: appointmentId,
	                clientLastName: clientLastName
	            }
	        };
	    },
	
	    getReservations: getReservations
	
	};

/***/ }),
/* 321 */
/*!***********************************************!*\
  !*** ./public_ufe/js/reducers/productGrid.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var ACTION_TYPES = __webpack_require__(/*! ../actions/Actions */ 175).TYPES;
	var PRODUCT_GRID_ACTION_TYPES = __webpack_require__(/*! ../actions/ProductGridActions */ 322).TYPES;
	
	var initialState = {
		currentPage: 0,
		products: [],
		categoryId: '',
		totalProducts: 0
	};
	
	var productGrid = function productGrid() {
		var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
		var action = arguments[1];
	
		switch (action.type) {
			case ACTION_TYPES.LOAD_MORE_PRODUCTS:
				return Object.assign({}, state, {
					currentPage: state.currentPage + 1,
					products: state.products.concat(action.products)
				});
			case PRODUCT_GRID_ACTION_TYPES.CHANGE_CATEGORY:
				return Object.assign({}, state, {
					categoryId: action.categoryId
				});
			case PRODUCT_GRID_ACTION_TYPES.RECEIVE_PRODUCTS:
				return Object.assign({}, state, {
					products: action.products
				});
			case PRODUCT_GRID_ACTION_TYPES.UPDATE_TOTAL_PRODUCTS:
				return Object.assign({}, state, {
					totalProducts: action.totalProducts
				});
			default:
				return state;
		}
	};
	
	module.exports = productGrid;

/***/ }),
/* 322 */
/*!*****************************************************!*\
  !*** ./public_ufe/js/actions/ProductGridActions.js ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// THE PRODUCTGRID IMPLEMENTATION IS OUT OF DATE
	// IF THIS IS GOING TO BE USED, IT NEEDS TO BE REVISITED AND BROUGHT UP TO DATE WITH LATEST UFE
	// STANDARDS.
	
	var urlUtils = __webpack_require__(/*! utils/Url */ 2);
	var snbApi = __webpack_require__(/*! services/api/search-n-browse */ 247);
	var ProductFilterActions = __webpack_require__(/*! ./ProductFilterActions */ 323);
	
	var TYPES = {
	    CHANGE_CATEGORY: 'PRODUCT_GRID.CHANGE_CATEGORY',
	    REQUEST_PRODUCTS: 'PRODUCT_GRID.REQUEST_PRODUCTS',
	    RECEIVE_PRODUCTS: 'PRODUCT_GRID.RECEIVE_PRODUCTS',
	    UPDATE_TOTAL_PRODUCTS: 'PRODUCT_GRID.UPDATE_TOTAL_PRODUCTS'
	};
	
	function changeCategory(categoryId) {
	    return {
	        type: TYPES.CHANGE_CATEGORY,
	        categoryId: categoryId
	    };
	}
	
	function receiveProducts(products) {
	    return {
	        type: TYPES.RECEIVE_PRODUCTS,
	        products: products
	    };
	}
	
	function updateTotalProducts(totalProducts) {
	    return {
	        type: TYPES.UPDATE_TOTAL_PRODUCTS,
	        totalProducts: totalProducts
	    };
	}
	
	/**
	 * This method is out of date and would need to be revisited using current UFE best practices
	 * if it were to be used.
	 * @returns {function(*, *)}
	 */
	function fetchProducts() {
	    return function (dispatch, getState) {
	
	        // (!) Mykhaylo Gavrylyuk:
	        // This side effect is separated from the rest of the action's work and
	        // per comment left by Aaron Liebling earlier, this is broken and needs
	        // to be revisited.
	        // Aaron Liebling:
	        // > TODO: queryUrl does not match the current parameter requirements for
	        // > buildQuery. This would need to be fixed if it is to be used.
	        (function () {
	            var queryUrl = [];
	
	            var filters = getState().productFilters.filters;
	            var currentSort = getState().productSort.currentSort;
	
	            var query = {
	                filters: {
	                    name: 'ref',
	                    value: filters.toString()
	                },
	                sorts: {
	                    name: 'sortBy',
	                    value: currentSort
	                }
	            };
	
	            if (filters && filters.length) {
	                queryUrl.push(query.filters);
	            }
	
	            if (currentSort && currentSort.length) {
	                queryUrl.push(query.sorts);
	            }
	
	            queryUrl = urlUtils.buildQuery(queryUrl);
	            urlUtils.updateURL(queryUrl, null, false);
	        })();
	
	        var options = {
	            categoryId: getState().productGrid.categoryId,
	            currentPage: getState().productGrid.currentPage,
	            pageSize: 60,
	            ref: getState().productFilters.filters.toString(),
	            sortBy: getState().productSort.currentSort
	        };
	
	        return snbApi.getNthLevelCategory(options).then(function (data) {
	            dispatch(receiveProducts(data.products));
	            dispatch(updateTotalProducts(data.products.length));
	            dispatch(ProductFilterActions.updateRefinements(data.refinements));
	        });
	    };
	}
	
	module.exports = {
	    TYPES: TYPES,
	    changeCategory: changeCategory,
	    fetchProducts: fetchProducts,
	    receiveProducts: receiveProducts,
	    updateTotalProducts: updateTotalProducts
	};

/***/ }),
/* 323 */
/*!*******************************************************!*\
  !*** ./public_ufe/js/actions/ProductFilterActions.js ***!
  \*******************************************************/
/***/ (function(module, exports) {

	'use strict';
	
	var TYPES = {
		ADD_FILTER: 'PRODUCT_FILTER.ADD_FILTER',
		REMOVE_FILTER: 'PRODUCT_FILTER.REMOVE_FILTER',
		UPDATE_REFINEMENTS: 'PRODUCT_FILTER.UPDATE_REFINEMENTS',
		UPDATE_FILTERS: 'PRODUCT_FILTER.UPDATE_FILTERS',
		SHOW_FILTERS: 'PRODUCT_FILTER.SHOW_FILTERS'
	};
	
	function updateFilters(filters) {
		return {
			type: TYPES.UPDATE_FILTERS,
			filters: filters
		};
	}
	
	function updateRefinements(refinements) {
		return {
			type: TYPES.UPDATE_REFINEMENTS,
			refinements: refinements
		};
	}
	
	function addFilter(filter) {
		return {
			type: TYPES.ADD_FILTER,
			filter: filter.toString()
		};
	}
	
	function removeFilter(filter) {
		return {
			type: TYPES.REMOVE_FILTER,
			filter: filter.toString()
		};
	}
	
	function showFilters(isOpen) {
		return {
			type: TYPES.SHOW_FILTERS,
			showFilters: isOpen
		};
	}
	
	module.exports = {
		TYPES: TYPES,
		updateFilters: updateFilters,
		updateRefinements: updateRefinements,
		addFilter: addFilter,
		removeFilter: removeFilter,
		showFilters: showFilters
	};

/***/ }),
/* 324 */
/*!***********************************************!*\
  !*** ./public_ufe/js/reducers/productSort.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var ACTION_TYPES = __webpack_require__(/*! ../actions/Actions */ 175).TYPES;
	
	var initialState = {
	    currentSort: null
	};
	
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.UPDATE_PRODUCT_SORT:
	            return Object.assign({}, state, {
	                currentSort: action.sortOption
	            });
	
	        default:
	            return state;
	    }
	};

/***/ }),
/* 325 */
/*!****************************************!*\
  !*** ./public_ufe/js/reducers/user.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var USER_ACTION_TYPES = __webpack_require__(/*! ../actions/UserActions */ 210).TYPES;
	
	var initialState = {
	    profileStatus: 0
	};
	
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];
	
	    switch (action.type) {
	        case USER_ACTION_TYPES.UPDATE:
	            return Object.assign({}, state, action.data);
	        default:
	            return state;
	    }
	};

/***/ }),
/* 326 */
/*!**************************************************!*\
  !*** ./public_ufe/js/reducers/productFilters.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var update = __webpack_require__(/*! react-addons-update */ 327);
	
	var PRODUCT_FILTER_ACTION_TYPES = __webpack_require__(/*! ../actions/ProductFilterActions */ 323).TYPES;
	
	var initialState = {
		refinements: [],
		filters: [],
		isFiltered: false,
		showFilters: false
	};
	
	var ProductFilters = function ProductFilters() {
		var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
		var action = arguments[1];
	
		switch (action.type) {
			case PRODUCT_FILTER_ACTION_TYPES.ADD_FILTER:
				return update(state, {
					filters: { $push: [action.filter] },
					isFiltered: { $set: true }
				});
			case PRODUCT_FILTER_ACTION_TYPES.REMOVE_FILTER:
				return update(state, {
					filters: { $splice: [[state.filters.indexOf(action.filter), 1]] },
					isFiltered: { $set: state.filters.length !== 0 }
				});
			case PRODUCT_FILTER_ACTION_TYPES.UPDATE_FILTERS:
				return update(state, {
					filters: { $set: action.filters },
					isFiltered: { $set: action.filters.length !== 0 }
				});
			case PRODUCT_FILTER_ACTION_TYPES.UPDATE_REFINEMENTS:
				return update(state, {
					refinements: { $set: action.refinements }
				});
			case PRODUCT_FILTER_ACTION_TYPES.SHOW_FILTERS:
				return update(state, {
					showFilters: { $set: action.showFilters }
				});
			default:
				return state;
		}
	};
	
	module.exports = ProductFilters;

/***/ }),
/* 327 */
/*!****************************************!*\
  !*** ./~/react-addons-update/index.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(/*! react/lib/update */ 328);

/***/ }),
/* 328 */
/*!************************************!*\
  !*** ./~/react-lite/lib/update.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule update
	 */
	
	/* global hasOwnProperty:true */
	
	'use strict';
	
	var React = __webpack_require__(/*! ../dist/react-lite.common */ 100);
	var assign = Object.assign;
	var keyOf = __webpack_require__(/*! ./utils/keyOf */ 329);
	var invariant = function invariant() {};
	var hasOwnProperty = ({}).hasOwnProperty;
	
	function shallowCopy(x) {
	  if (Array.isArray(x)) {
	    return x.concat();
	  } else if (x && typeof x === 'object') {
	    return assign(new x.constructor(), x);
	  } else {
	    return x;
	  }
	}
	
	var COMMAND_PUSH = keyOf({ $push: null });
	var COMMAND_UNSHIFT = keyOf({ $unshift: null });
	var COMMAND_SPLICE = keyOf({ $splice: null });
	var COMMAND_SET = keyOf({ $set: null });
	var COMMAND_MERGE = keyOf({ $merge: null });
	var COMMAND_APPLY = keyOf({ $apply: null });
	
	var ALL_COMMANDS_LIST = [COMMAND_PUSH, COMMAND_UNSHIFT, COMMAND_SPLICE, COMMAND_SET, COMMAND_MERGE, COMMAND_APPLY];
	
	var ALL_COMMANDS_SET = {};
	
	ALL_COMMANDS_LIST.forEach(function (command) {
	  ALL_COMMANDS_SET[command] = true;
	});
	
	function invariantArrayCase(value, spec, command) {
	  invariant(Array.isArray(value), 'update(): expected target of %s to be an array; got %s.', command, value);
	  var specValue = spec[command];
	  invariant(Array.isArray(specValue), 'update(): expected spec of %s to be an array; got %s. ' + 'Did you forget to wrap your parameter in an array?', command, specValue);
	}
	
	function update(value, spec) {
	  invariant(typeof spec === 'object', 'update(): You provided a key path to update() that did not contain one ' + 'of %s. Did you forget to include {%s: ...}?', ALL_COMMANDS_LIST.join(', '), COMMAND_SET);
	
	  if (hasOwnProperty.call(spec, COMMAND_SET)) {
	    invariant(Object.keys(spec).length === 1, 'Cannot have more than one key in an object with %s', COMMAND_SET);
	
	    return spec[COMMAND_SET];
	  }
	
	  var nextValue = shallowCopy(value);
	
	  if (hasOwnProperty.call(spec, COMMAND_MERGE)) {
	    var mergeObj = spec[COMMAND_MERGE];
	    invariant(mergeObj && typeof mergeObj === 'object', 'update(): %s expects a spec of type \'object\'; got %s', COMMAND_MERGE, mergeObj);
	    invariant(nextValue && typeof nextValue === 'object', 'update(): %s expects a target of type \'object\'; got %s', COMMAND_MERGE, nextValue);
	    assign(nextValue, spec[COMMAND_MERGE]);
	  }
	
	  if (hasOwnProperty.call(spec, COMMAND_PUSH)) {
	    invariantArrayCase(value, spec, COMMAND_PUSH);
	    spec[COMMAND_PUSH].forEach(function (item) {
	      nextValue.push(item);
	    });
	  }
	
	  if (hasOwnProperty.call(spec, COMMAND_UNSHIFT)) {
	    invariantArrayCase(value, spec, COMMAND_UNSHIFT);
	    spec[COMMAND_UNSHIFT].forEach(function (item) {
	      nextValue.unshift(item);
	    });
	  }
	
	  if (hasOwnProperty.call(spec, COMMAND_SPLICE)) {
	    invariant(Array.isArray(value), 'Expected %s target to be an array; got %s', COMMAND_SPLICE, value);
	    invariant(Array.isArray(spec[COMMAND_SPLICE]), 'update(): expected spec of %s to be an array of arrays; got %s. ' + 'Did you forget to wrap your parameters in an array?', COMMAND_SPLICE, spec[COMMAND_SPLICE]);
	    spec[COMMAND_SPLICE].forEach(function (args) {
	      invariant(Array.isArray(args), 'update(): expected spec of %s to be an array of arrays; got %s. ' + 'Did you forget to wrap your parameters in an array?', COMMAND_SPLICE, spec[COMMAND_SPLICE]);
	      nextValue.splice.apply(nextValue, args);
	    });
	  }
	
	  if (hasOwnProperty.call(spec, COMMAND_APPLY)) {
	    invariant(typeof spec[COMMAND_APPLY] === 'function', 'update(): expected spec of %s to be a function; got %s.', COMMAND_APPLY, spec[COMMAND_APPLY]);
	    nextValue = spec[COMMAND_APPLY](nextValue);
	  }
	
	  for (var k in spec) {
	    if (!(ALL_COMMANDS_SET.hasOwnProperty(k) && ALL_COMMANDS_SET[k])) {
	      nextValue[k] = update(value[k], spec[k]);
	    }
	  }
	
	  return nextValue;
	}
	
	module.exports = update;

/***/ }),
/* 329 */
/*!*****************************************!*\
  !*** ./~/react-lite/lib/utils/keyOf.js ***!
  \*****************************************/
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyOf
	 */
	
	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without losing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	"use strict";
	
	var keyOf = function keyOf(oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};
	
	module.exports = keyOf;

/***/ }),
/* 330 */
/*!*****************************************!*\
  !*** ./public_ufe/js/reducers/loves.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var LOVE_ACTION_TYPES = __webpack_require__(/*! actions/LoveActions */ 211).TYPES;
	
	var initialState = {
	    currentLoves: [],
	    shoppingListIds: []
	};
	
	/* shoppingListIds contains the skuId of every loved item in currentLoves.
	*
	* This is to ease the handling of add/remove loves locally upon POST/DELETE success.
	* The addLove and removeLove actions will manipulate the requested sku accordingly here
	* as we don't really need to fetch the updated list of loved skus if the API operations
	* were successful. This state will not persist session, however, each page load will
	* populate the list correctly.
	*/
	
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];
	
	    switch (action.type) {
	        case LOVE_ACTION_TYPES.UPDATE_LOVES_LIST:
	            return Object.assign({}, state, {
	                currentLoves: action.currentLoves
	            });
	        case LOVE_ACTION_TYPES.UPDATE_SHOPPING_LIST_IDS:
	            return Object.assign({}, state, {
	                shoppingListIds: action.shoppingListIds
	            });
	        default:
	            return state;
	    }
	};

/***/ }),
/* 331 */
/*!*******************************************!*\
  !*** ./public_ufe/js/reducers/product.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var ACTION_TYPES = __webpack_require__(/*! ../actions/ProductActions */ 246).TYPES;
	
	var UserSpecificProductUtils = __webpack_require__(/*! utils/UserSpecificProduct */ 332);
	
	var initialState = {
	    currentSku: null,
	    currentProduct: {},
	    currentSkuQuantity: 1,
	    currentProductUserSpecificDetails: {},
	    isUserSpecificReady: false
	};
	
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.CHANGE_CURRENT_SKU:
	            return Object.assign({}, state, {
	                currentSku: action.currentSku
	            });
	
	        case ACTION_TYPES.UPDATE_CURRENT_PRODUCT:
	            {
	                var currentProductWithUserSpecificDetails = UserSpecificProductUtils.addUserSpecificDetailsToProduct(action.currentProduct, state.currentProductUserSpecificDetails);
	
	                return Object.assign({}, state, {
	                    currentProduct: currentProductWithUserSpecificDetails
	                });
	            }
	
	        case ACTION_TYPES.UPDATE_CURRENT_PRODUCT_USER_SPECIFIC:
	            {
	                var _currentProductWithUserSpecificDetails = UserSpecificProductUtils.addUserSpecificDetailsToProduct(state.currentProduct, action.currentProductUserSpecificDetails);
	
	                return Object.assign({}, state, {
	                    currentProduct: _currentProductWithUserSpecificDetails,
	                    currentProductUserSpecificDetails: action.currentProductUserSpecificDetails
	                });
	            }
	
	        case ACTION_TYPES.UPDATE_CURRENT_SKU_IN_CURRENT_PRODUCT:
	            {
	                var currentProduct = state.currentProduct || {};
	                currentProduct.currentSku = action.currentSkuInProduct;
	                return Object.assign({}, state, {
	                    currentProduct: currentProduct
	                });
	            }
	        case ACTION_TYPES.UPDATE_QUANTITY_OF_CURRENT_SKU:
	            return Object.assign({}, state, {
	                currentSkuQuantity: action.currentSkuQuantity
	            });
	        case ACTION_TYPES.HOVERED_SKU:
	            return Object.assign({}, state, {
	                hoveredSku: action.hoveredSku
	            });
	        case ACTION_TYPES.CUSTOM_SETS_CHOICE_UPDATED:
	            return Object.assign({}, state, {
	                customSetsChoices: action.customSetsChoices
	            });
	        case ACTION_TYPES.TOGGLE_CUSTOM_SETS:
	            return Object.assign({}, state, {
	                isOpenCustomSets: action.isOpen
	            });
	        case ACTION_TYPES.ADD_FLASH_ON_PDP:
	            return Object.assign({}, state, {
	                addFlashOnPdp: action.state
	            });
	        default:
	            return state;
	    }
	};

/***/ }),
/* 332 */
/*!****************************************************!*\
  !*** ./public_ufe/js/utils/UserSpecificProduct.js ***!
  \****************************************************/
/***/ (function(module, exports) {

	'use strict';
	
	/**
	 * Returns a map of all skuId->sku for all skus in a product.  This ibcludes all sku groups,
	 * such as ymalSkus, ancillarySkus, etc...
	 *
	 * @param userSpecificProductDetails
	 * @returns {Map}
	 */
	var buildMapOfUserSpecificSkuDetails = function buildMapOfUserSpecificSkuDetails() {
	    var userSpecificProductDetails = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    var safelySet = function safelySet(skuMap, id, newValue) {
	        var oldValue = skuMap.get(id);
	        skuMap.set(id, Object.assign({}, oldValue, newValue));
	    };
	    var _userSpecificProductD = userSpecificProductDetails.regularChildSkus,
	        regularChildSkus = _userSpecificProductD === undefined ? [] : _userSpecificProductD,
	        _userSpecificProductD2 = userSpecificProductDetails.onSaleChildSkus,
	        onSaleChildSkus = _userSpecificProductD2 === undefined ? [] : _userSpecificProductD2,
	        _userSpecificProductD3 = userSpecificProductDetails.simillarSkus,
	        simillarSkus = _userSpecificProductD3 === undefined ? [] : _userSpecificProductD3,
	        _userSpecificProductD4 = userSpecificProductDetails.ymalSkus,
	        ymalSkus = _userSpecificProductD4 === undefined ? [] : _userSpecificProductD4,
	        _userSpecificProductD5 = userSpecificProductDetails.ancillarySkus,
	        ancillarySkus = _userSpecificProductD5 === undefined ? [] : _userSpecificProductD5,
	        _userSpecificProductD6 = userSpecificProductDetails.recentlyViewedSkus,
	        recentlyViewedSkus = _userSpecificProductD6 === undefined ? [] : _userSpecificProductD6;
	
	
	    var skuMap = new Map();
	
	    if (userSpecificProductDetails.currentSku) {
	        safelySet(skuMap, userSpecificProductDetails.currentSku.skuId, userSpecificProductDetails.currentSku);
	    }
	
	    regularChildSkus.forEach(function (skuDetails) {
	        safelySet(skuMap, skuDetails.skuId, skuDetails);
	    });
	
	    onSaleChildSkus.forEach(function (skuDetails) {
	        safelySet(skuMap, skuDetails.skuId, skuDetails);
	    });
	
	    simillarSkus.forEach(function (skuDetails) {
	        safelySet(skuMap, skuDetails.skuId, skuDetails);
	    });
	
	    ymalSkus.forEach(function (skuDetails) {
	        safelySet(skuMap, skuDetails.skuId, skuDetails);
	    });
	
	    ancillarySkus.forEach(function (skuDetails) {
	        safelySet(skuMap, skuDetails.skuId, skuDetails);
	    });
	
	    recentlyViewedSkus.forEach(function (skuDetails) {
	        safelySet(skuMap, skuDetails.skuId, skuDetails);
	    });
	
	    return skuMap;
	};
	
	/**
	 * This copies only to a single level.  It does not deep copy within skus, for example
	 *
	 * This is necessary because our product store data is not normalized
	 *
	 * @param product
	 */
	var deepCopyProduct = function deepCopyProduct(product) {
	    var _product$regularChild = product.regularChildSkus,
	        regularChildSkus = _product$regularChild === undefined ? [] : _product$regularChild,
	        _product$onSaleChildS = product.onSaleChildSkus,
	        onSaleChildSkus = _product$onSaleChildS === undefined ? [] : _product$onSaleChildS,
	        _product$simillarSkus = product.simillarSkus,
	        simillarSkus = _product$simillarSkus === undefined ? [] : _product$simillarSkus,
	        _product$ymalSkus = product.ymalSkus,
	        ymalSkus = _product$ymalSkus === undefined ? [] : _product$ymalSkus,
	        _product$ancillarySku = product.ancillarySkus,
	        ancillarySkus = _product$ancillarySku === undefined ? [] : _product$ancillarySku,
	        _product$recentlyView = product.recentlyViewedSkus,
	        recentlyViewedSkus = _product$recentlyView === undefined ? [] : _product$recentlyView;
	
	
	    var newProduct = Object.assign({}, product);
	    newProduct.currentSku = Object.assign({}, product.currentSku);
	
	    newProduct.regularChildSkus = regularChildSkus.slice();
	    newProduct.onSaleChildSkus = onSaleChildSkus.slice();
	    newProduct.simillarSkus = simillarSkus.slice();
	    newProduct.ymalSkus = ymalSkus.slice();
	    newProduct.ancillarySkus = ancillarySkus.slice();
	    newProduct.recentlyViewedSkus = recentlyViewedSkus.slice();
	
	    return newProduct;
	};
	
	var UserSpecificProductUtil = {
	    // This method adds User specific details to currentProduct Object
	    // for example currentSku, regularChildSkus, onSaleChildSkus, simillarSkus, ymalSkus
	    // ancillarySkus and recentlyViewedSkus because this information will be pulled
	    // for each user after initial cached product common information is loaded in ctrlr
	    addUserSpecificDetailsToProduct: function addUserSpecificDetailsToProduct(product) {
	        var userSpecificProductDetails = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	
	        var userSpecificProduct = deepCopyProduct(product);
	
	        // If we have user-specific data, flag the product as ready
	        if (Object.keys(userSpecificProductDetails).length !== 0) {
	            userSpecificProduct.isUserSpecificReady = true;
	
	            userSpecificProduct.usingDefaultUserSpecificData = userSpecificProductDetails.usingDefaultUserSpecificData;
	
	            var _userSpecificProduct$ = userSpecificProduct.regularChildSkus,
	                regularChildSkus = _userSpecificProduct$ === undefined ? [] : _userSpecificProduct$,
	                _userSpecificProduct$2 = userSpecificProduct.onSaleChildSkus,
	                onSaleChildSkus = _userSpecificProduct$2 === undefined ? [] : _userSpecificProduct$2,
	                _userSpecificProduct$3 = userSpecificProduct.simillarSkus,
	                simillarSkus = _userSpecificProduct$3 === undefined ? [] : _userSpecificProduct$3,
	                _userSpecificProduct$4 = userSpecificProduct.ymalSkus,
	                ymalSkus = _userSpecificProduct$4 === undefined ? [] : _userSpecificProduct$4,
	                _userSpecificProduct$5 = userSpecificProduct.ancillarySkus,
	                ancillarySkus = _userSpecificProduct$5 === undefined ? [] : _userSpecificProduct$5;
	
	
	            var skuMap = buildMapOfUserSpecificSkuDetails(userSpecificProductDetails);
	
	            Object.assign(userSpecificProduct.currentSku, skuMap.get(userSpecificProduct.currentSku.skuId));
	
	            regularChildSkus.forEach(function (sku, i) {
	                var userSpecificData = skuMap.get(sku.skuId);
	                if (userSpecificData) {
	                    regularChildSkus[i] = Object.assign(regularChildSkus[i], userSpecificData);
	                } else {
	                    console.debug('No user specific data found for sku ' + sku.skuId);
	                }
	            });
	
	            onSaleChildSkus.forEach(function (sku, i) {
	                var userSpecificData = skuMap.get(sku.skuId);
	                if (userSpecificData) {
	                    onSaleChildSkus[i] = Object.assign(onSaleChildSkus[i], userSpecificData);
	                } else {
	                    console.debug('No user specific data found for sku ' + sku.skuId);
	                }
	            });
	
	            simillarSkus.forEach(function (sku, i) {
	                var userSpecificData = skuMap.get(sku.skuId);
	                if (userSpecificData) {
	                    simillarSkus[i] = Object.assign(simillarSkus[i], userSpecificData);
	                } else {
	                    console.debug('No user specific data found for sku ' + sku.skuId);
	                }
	            });
	
	            ymalSkus.forEach(function (sku, i) {
	                var userSpecificData = skuMap.get(sku.skuId);
	                if (userSpecificData) {
	                    ymalSkus[i] = Object.assign(ymalSkus[i], userSpecificData);
	                } else {
	                    console.debug('No user specific data found for sku ' + sku.skuId);
	                }
	            });
	
	            ancillarySkus.forEach(function (sku, i) {
	                var userSpecificData = skuMap.get(sku.skuId);
	                if (userSpecificData) {
	                    ancillarySkus[i] = Object.assign(ancillarySkus[i], userSpecificData);
	                } else {
	                    console.debug('No user specific data found for sku ' + sku.skuId);
	                }
	            });
	
	            // Unlike other properties, recentlyViewedSkus needs to be replaced
	            // because recentlyViewedSkus is not available on initial load
	            // and thus we need to add it once it is created and pulled as part
	            // of full user call after ctrlr is already initialized
	            if (userSpecificProductDetails.recentlyViewedSkus) {
	                userSpecificProduct.recentlyViewedSkus = userSpecificProductDetails.recentlyViewedSkus;
	            }
	        }
	
	        return userSpecificProduct;
	    }
	
	};
	
	module.exports = UserSpecificProductUtil;

/***/ }),
/* 333 */
/*!******************************************!*\
  !*** ./public_ufe/js/reducers/search.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var SEARCH_ACTION_TYPES = __webpack_require__(/*! actions/SearchActions */ 334).TYPES;
	var Location = __webpack_require__(/*! utils/Location */ 3);
	
	var initialState = {
	    focus: false,
	    isFixed: false,
	    isTooltipVisible: false,
	    inline: Location.isHomePage()
	};
	
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];
	
	    var newVal = void 0;
	    switch (action.type) {
	        case SEARCH_ACTION_TYPES.CLEAR_SEARCH:
	            return Object.assign({}, state, {
	                focus: action.focus
	            });
	        case SEARCH_ACTION_TYPES.TOGGLE_FIXED_SEARCH:
	            newVal = typeof action.focus === 'boolean' ? action.focus : !state.focus;
	            return Object.assign({}, state, {
	                focus: newVal,
	                isFixed: newVal
	            });
	        case SEARCH_ACTION_TYPES.TOGGLE_SEARCH:
	            newVal = !state.inline;
	            return Object.assign({}, state, {
	                inline: newVal,
	                focus: false
	            });
	        case SEARCH_ACTION_TYPES.HIDE_SEARCH:
	            return Object.assign({}, state, {
	                isFixed: false,
	                inline: false,
	                focus: false
	            });
	        case SEARCH_ACTION_TYPES.SHOW_PREVIOUS_SEARCH:
	            return Object.assign({}, state, {
	                results: action.results,
	                focus: true
	            });
	        case SEARCH_ACTION_TYPES.HIDE_SEARCH_RESULTS:
	            return Object.assign({}, state, {
	                focus: false
	            });
	        case SEARCH_ACTION_TYPES.SHOW_SEARCH_RESULTS:
	            return Object.assign({}, state, {
	                results: action.results,
	                focus: true
	            });
	        default:
	            return state;
	    }
	};

/***/ }),
/* 334 */
/*!************************************************!*\
  !*** ./public_ufe/js/actions/SearchActions.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var _require = __webpack_require__(/*! style */ 106),
	    site = _require.site;
	
	var UrlUtils = __webpack_require__(/*! utils/Url */ 2);
	var LocalStorageSearchUtils = __webpack_require__(/*! utils/localStorage/Search */ 335);
	var wrapForLegacyAction = __webpack_require__(/*! actions/Legacy */ 208).wrapForLegacyAction;
	var LocationUtils = __webpack_require__(/*! utils/Location.js */ 3);
	var Location = __webpack_require__(/*! utils/Location */ 3);
	var Storage = __webpack_require__(/*! utils/localStorage/Storage */ 275);
	var snbApi = __webpack_require__(/*! services/api/search-n-browse */ 247);
	
	var TYPES = {
	    CLEAR_SEARCH: 'CLEAR_SEARCH',
	    TOGGLE_FIXED_SEARCH: 'TOGGLE_FIXED_SEARCH',
	    TOGGLE_SEARCH: 'TOGGLE_SEARCH',
	    HIDE_SEARCH: 'HIDE_SEARCH',
	    SHOW_PREVIOUS_SEARCH: 'SHOW_PREVIOUS_SEARCH',
	    HIDE_SEARCH_RESULTS: 'HIDE_SEARCH_RESULTS',
	    SHOW_SEARCH_RESULTS: 'SHOW_SEARCH_RESULTS'
	};
	var KEYS = LocalStorageSearchUtils.KEYS;
	
	var URLS = {
	    SEARCH_URL: '/shop/search?keyword=',
	    SEARCH_TYPEAHEAD_URL: '/api/catalog/search?type=typeahead&q=',
	    SEARCHPAGE_LEGACY_MOBILE_URL: '/shop/search/',
	    SEARCHPAGE_LEGACY_DESKTOP_URL: '/search/search.jsp?keyword='
	};
	
	var MAX_SEARCH_SUGGESTIONS_COUNT = 10;
	
	function mapResults(results) {
	    return results && results.length ? results.map(function (result) {
	        if (result instanceof Object) {
	            var searchResult = result.brandName ? result.brandName + ' - ' : '';
	            searchResult += result.productName;
	            result.value = typeof result.term !== 'undefined' ? result.term : searchResult;
	        }
	
	        return result;
	    }) : [];
	}
	
	function showSearchResults(results) {
	    return {
	        type: TYPES.SHOW_SEARCH_RESULTS,
	        results: mapResults(results.slice(0, MAX_SEARCH_SUGGESTIONS_COUNT))
	    };
	}
	
	function showPreviousSearchResults() {
	    var data = Storage.local.getItem(KEYS.STORAGE_PREVIOUS_RESULTS);
	    return {
	        type: TYPES.SHOW_PREVIOUS_SEARCH,
	        results: data ? mapResults(data.slice(0, KEYS.MAX_PREVIOUS_RESULTS_COUNT)) : []
	    };
	}
	
	function isNoInlineSearch() {
	    return LocationUtils.isCustomSets();
	}
	
	module.exports = {
	    TYPES: TYPES,
	
	    URLS: URLS,
	
	    STORAGE_KEYS: {
	        STORAGE_PREVIOUS_RESULTS: KEYS.STORAGE_PREVIOUS_RESULTS
	    },
	
	    clearSearch: function clearSearch() {
	        return {
	            type: TYPES.CLEAR_SEARCH,
	            focus: true
	        };
	    },
	
	    toggleSearch: wrapForLegacyAction(Sephora.legacy && Sephora.legacy.SearchActions ? Sephora.legacy.SearchActions.toggleSearch : null, function (focus) {
	        return {
	            type: window.scrollY > site.HEADER_HEIGHT_MW || isNoInlineSearch() ? TYPES.TOGGLE_FIXED_SEARCH : TYPES.TOGGLE_SEARCH,
	            focus: typeof focus === 'boolean' ? focus : undefined
	        };
	    }),
	
	    hideSearch: function hideSearch() {
	        return {
	            type: window.scrollY > site.HEADER_HEIGHT_MW || isNoInlineSearch() || Location.isProductReviewsPage() ? TYPES.HIDE_SEARCH : TYPES.HIDE_SEARCH_RESULTS
	        };
	    },
	
	    showPreviousSearchResults: showPreviousSearchResults,
	
	    getSearchResults: function getSearchResults(keyword) {
	        if (keyword && keyword.length) {
	            /* show search suggestions only for keyword more then N characters long */
	            if (keyword.length < KEYS.MIN_KEYWORD_LENGTH_FOR_SUGGESTIONS) {
	                return showSearchResults([]);
	            } else {
	                return function (dispatch) {
	                    return snbApi.searchTypeAhead(keyword).then(function (data) {
	                        return dispatch(showSearchResults(data.typeAheadTerms));
	                    }).catch(function () {
	                        return dispatch(showSearchResults([]));
	                    });
	                };
	            }
	        } else {
	            return showPreviousSearchResults();
	        }
	    }
	};

/***/ }),
/* 335 */
/*!****************************************************!*\
  !*** ./public_ufe/js/utils/localStorage/Search.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var Storage = __webpack_require__(/*! utils/localStorage/Storage */ 275);
	
	var KEYS = {
	    STORAGE_PREVIOUS_RESULTS: 'search_previous_results',
	    MIN_KEYWORD_LENGTH_FOR_SUGGESTIONS: 3,
	    MAX_PREVIOUS_RESULTS_COUNT: 5
	};
	
	var setSearchTermStorageItem = function setSearchTermStorageItem(term) {
	    var data = Storage.local.getItem(KEYS.STORAGE_PREVIOUS_RESULTS);
	    term = term.toLowerCase();
	    if (data) {
	        if (!data.filter(function (result) {
	            return result.term === term;
	        }).length) {
	            data.unshift({ term: term });
	        }
	    } else {
	        data = [{ term: term }];
	    }
	    Storage.local.setItem(KEYS.STORAGE_PREVIOUS_RESULTS, data.slice(0, KEYS.MAX_PREVIOUS_RESULTS_COUNT));
	};
	
	var isPreviousSearchItem = function isPreviousSearchItem(term) {
	    var data = Storage.local.getItem(KEYS.STORAGE_PREVIOUS_RESULTS);
	    term = term.toLowerCase();
	
	    if (data && data.filter(function (result) {
	        return result.term === term;
	    }).length) {
	        return true;
	    }
	
	    return false;
	};
	
	module.exports = {
	    KEYS: KEYS,
	    setSearchTermStorageItem: setSearchTermStorageItem,
	    isPreviousSearchItem: isPreviousSearchItem
	};

/***/ }),
/* 336 */
/*!************************************************!*\
  !*** ./public_ufe/js/reducers/stickyBanner.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var ACTION_TYPES = __webpack_require__(/*! ../actions/Actions */ 175).TYPES;
	
	var initialState = {
	    isOpen: false,
	    height: 0
	};
	
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    switch (action.type) {
	        case ACTION_TYPES.SHOW_STICKY_BANNER:
	            return Object.assign({}, state, {
	                isOpen: action.isOpen,
	                height: action.height
	            });
	
	        default:
	            return state;
	    }
	};

/***/ }),
/* 337 */
/*!***********************************************!*\
  !*** ./public_ufe/js/reducers/productRecs.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var ACTION_TYPES = __webpack_require__(/*! actions/CertonaActions */ 338).TYPES;
	
	var initialState = {
	    skuGroups: [],
	    quizResults: [],
	    isQuizSubmitted: false
	};
	
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.UPDATE_CAROUSEL:
	            return Object.assign({}, state, {
	                skuGroups: action.recs
	            });
	        case ACTION_TYPES.PRODUCT_FINDER_DATA:
	            return Object.assign({}, state, {
	                quizResults: action.productFinderData
	            });
	        case ACTION_TYPES.IS_QUIZ_SUBMITTED:
	            return Object.assign({}, state, {
	                isQuizSubmitted: action.isQuizSubmitted
	            });
	
	        default:
	            return state;
	    }
	};

/***/ }),
/* 338 */
/*!*************************************************!*\
  !*** ./public_ufe/js/actions/CertonaActions.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var Locale = __webpack_require__(/*! utils/LanguageLocale.js */ 4);
	
	var TYPES = {
	    UPDATE_CAROUSEL: 'UPDATE_CAROUSEL',
	    PRODUCT_FINDER_DATA: 'PRODUCT_FINDER_DATA',
	    IS_QUIZ_SUBMITTED: 'IS_QUIZ_SUBMITTED'
	};
	
	function updateCarousel(recs) {
	    var schema = void 0;
	    var schemas = [];
	
	    var reorg = function reorg(scheme) {
	        var prodRecs = [];
	        var currencyPrefix = Locale.getCurrentCountry().toUpperCase() === 'US' ? '$' : 'C$';
	
	        (scheme.items || []).forEach(function (product) {
	            product.skus = product.skus || [];
	
	            // Filter through product skus returned by certona to get default sku
	            var candidates = product.skus.filter(function (sku) {
	                return sku.sku_number === product.default_sku_id;
	            });
	
	            // If no default sku or default sku is oos, pick another thats in stock
	            if (candidates.length === 0 || candidates[0].is_in_stock === false) {
	                candidates = product.skus.filter(function (sku) {
	                    return sku.is_in_stock !== false;
	                });
	            }
	
	            // Oragnize data to how sephora components want it
	            var candidate = candidates.shift();
	            if (candidate) {
	                candidate.isCertonaProduct = true;
	                candidate.skuImages = { image: candidate.grid_images };
	                candidate.brandName = product.brand_name;
	                candidate.productName = product.display_name;
	                candidate.primaryProduct = product;
	                candidate.productId = candidate.primary_product_id;
	                candidate.skuId = candidate.sku_number;
	                candidate.targetUrl = product.product_url;
	                candidate.starRatings = product.rating;
	                candidate.isLimitedEdition = candidate.is_limited_edition || false;
	                candidate.isNew = candidate.is_new || false;
	                candidate.isSephoraExclusive = candidate.is_sephora_exclusive || false;
	                candidate.isOnlineOnly = candidate.is_online_only || false;
	                candidate.listPrice = candidate.list_price ? currencyPrefix + candidate.list_price.toFixed(2) : '';
	                candidate.salePrice = candidate.sale_price ? currencyPrefix + candidate.sale_price.toFixed(2) : '';
	                candidate.valuePrice = candidate.value_price ? '(' + currencyPrefix + candidate.value_price.toFixed(2) + ' VALUE)' : '';
	                prodRecs = prodRecs.concat(candidate);
	            }
	
	            delete product.skus;
	        });
	
	        return prodRecs;
	    };
	
	    while (schema = recs.resonance.schemes.shift()) {
	        schemas.push({
	            isDisplay: schema.display === 'yes',
	            recommendTitle: schema.explanation,
	            name: schema.scheme,
	            data: reorg(schema)
	        });
	    }
	
	    return {
	        type: TYPES.UPDATE_CAROUSEL,
	        recs: schemas
	    };
	}
	
	function getProductFinderData(items) {
	    var data = updateCarousel(items);
	
	    return {
	        type: TYPES.PRODUCT_FINDER_DATA,
	        productFinderData: data.recs[0].data
	    };
	}
	
	function isQuizSubmitted(value) {
	    return {
	        type: TYPES.IS_QUIZ_SUBMITTED,
	        isQuizSubmitted: value
	    };
	}
	
	module.exports = {
	    TYPES: TYPES,
	    updateCarousel: updateCarousel,
	    updateProductFinderData: getProductFinderData,
	    isQuizSubmitted: isQuizSubmitted
	};

/***/ }),
/* 339 */
/*!*************************************************!*\
  !*** ./public_ufe/js/reducers/inline-basket.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var ACTION_TYPES = __webpack_require__(/*! actions/InlineBasketActions */ 310).TYPES;
	
	var initialState = {
	    justAddedProducts: 0,
	    isOpen: false
	};
	
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.ADDED_PRODUCTS_NOTIFICATION:
	            return Object.assign({}, state, {
	                justAddedProducts: state.justAddedProducts + action.justAddedProducts
	            });
	        case ACTION_TYPES.SHOW_BASKET:
	            return Object.assign({}, state, {
	                isOpen: action.isOpen
	            });
	        case ACTION_TYPES.RESET_PRODUCTS_NOTIFICATION:
	            return Object.assign({}, state, {
	                justAddedProducts: action.justAddedProducts
	            });
	        default:
	            return state;
	    }
	};

/***/ }),
/* 340 */
/*!**********************************************!*\
  !*** ./public_ufe/js/reducers/testTarget.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var TARGET_ACTION_TYPES = __webpack_require__(/*! actions/TestTargetActions */ 341).TYPES;
	
	var initialState = {
	    offers: {},
	    timeout: false,
	    swaps: {}
	};
	
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];
	
	    switch (action.type) {
	        case TARGET_ACTION_TYPES.SET_OFFERS:
	            var offers = Object.assign({}, state.offers, action.offers);
	            return Object.assign({}, state, {
	                offers: offers
	            });
	        case TARGET_ACTION_TYPES.CANCEL_OFFERS:
	            return Object.assign({}, state, {
	                timeout: action.timeout
	            });
	        case TARGET_ACTION_TYPES.SET_SWAP_COMPONENT:
	            var newState = state.swaps[action.testName].slice();
	            newState.push(action.component);
	
	            return Object.assign({}, state, {
	                swaps: _defineProperty({}, action.testName, newState)
	            });
	        case TARGET_ACTION_TYPES.REGISTER_TEST:
	            return Object.assign({}, state, {
	                swaps: _defineProperty({}, action.testName, [])
	            });
	        default:
	            return state;
	    }
	};

/***/ }),
/* 341 */
/*!****************************************************!*\
  !*** ./public_ufe/js/actions/TestTargetActions.js ***!
  \****************************************************/
/***/ (function(module, exports) {

	'use strict';
	
	var TYPES = {
	    SET_OFFERS: 'SET_OFFERS',
	    CANCEL_OFFERS: 'CANCEL_OFFERS',
	    SET_SWAP_COMPONENT: 'SET_SWAP_COMPONENT',
	    REGISTER_TEST: 'REGISTER_TEST'
	};
	
	function setOffers(data) {
	    return {
	        type: TYPES.SET_OFFERS,
	        offers: data
	    };
	}
	
	function cancelOffers(isCanceled) {
	    return {
	        type: TYPES.CANCEL_OFFERS,
	        timeout: isCanceled
	    };
	}
	
	function setSwapComponent(component) {
	    return {
	        type: TYPES.SET_SWAP_COMPONENT,
	        testName: component.testName,
	        component: component
	    };
	}
	
	function registerTest(testName) {
	    return {
	        type: TYPES.REGISTER_TEST,
	        testName: testName
	    };
	}
	
	module.exports = {
	    TYPES: TYPES,
	    setOffers: setOffers,
	    cancelOffers: cancelOffers,
	    setSwapComponent: setSwapComponent,
	    registerTest: registerTest
	};

/***/ }),
/* 342 */
/*!*********************************************!*\
  !*** ./public_ufe/js/reducers/targeters.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var TARGETER_ACTION_TYPES = __webpack_require__(/*! actions/TargeterActions */ 255).TYPES;
	
	var initialState = {
	    results: []
	};
	
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];
	
	    switch (action.type) {
	        case TARGETER_ACTION_TYPES.SET_RESULTS:
	            return Object.assign({}, state, {
	                results: action.results
	            });
	        default:
	            return state;
	    }
	};

/***/ }),
/* 343 */
/*!**********************************************!*\
  !*** ./public_ufe/js/reducers/welcomeMat.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var ACTION_TYPES = __webpack_require__(/*! actions/WelcomePopupActions */ 254).TYPES;
	
	var initialState = {};
	
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.UPDATE_WELCOME:
	            return Object.assign({}, state, action.welcomeMat);
	
	        default:
	            return state;
	    }
	};

/***/ }),
/* 344 */
/*!***************************************************!*\
  !*** ./public_ufe/js/reducers/termsConditions.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var ACTION_TYPES = __webpack_require__(/*! actions/TermsAndConditionsActions */ 345).TYPES;
	
	var initialState = {
	    isOpen: false,
	    mediaId: '',
	    title: ''
	};
	
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    switch (action.type) {
	        case ACTION_TYPES.SHOW_TERMS_CONDITIONS_MODAL:
	            return Object.assign({}, state, {
	                isOpen: action.isOpen,
	                mediaId: action.mediaId,
	                title: action.title
	            });
	
	        default:
	            return state;
	    }
	};

/***/ }),
/* 345 */
/*!************************************************************!*\
  !*** ./public_ufe/js/actions/TermsAndConditionsActions.js ***!
  \************************************************************/
/***/ (function(module, exports) {

	'use strict';
	
	var TYPES = {
	    SHOW_TERMS_CONDITIONS_MODAL: 'SHOW_TERMS_CONDITIONS_MODAL'
	};
	
	module.exports = {
	    TYPES: TYPES,
	
	    showModal: function showModal(isOpen, mediaId, title) {
	        return {
	            type: TYPES.SHOW_TERMS_CONDITIONS_MODAL,
	            isOpen: isOpen,
	            mediaId: mediaId,
	            title: title
	        };
	    }
	};

/***/ }),
/* 346 */
/*!*******************************************!*\
  !*** ./public_ufe/js/reducers/samples.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var ACTION_TYPES = __webpack_require__(/*! actions/SampleActions */ 347).TYPES;
	
	var initialState = {
	    samples: null
	};
	
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.SET_SAMPLES:
	            return Object.assign({}, state, action.samples);
	        default:
	            return state;
	    }
	};

/***/ }),
/* 347 */
/*!************************************************!*\
  !*** ./public_ufe/js/actions/SampleActions.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var basketApi = __webpack_require__(/*! services/api/basket */ 170);
	
	var TYPES = {
	    SET_SAMPLES: 'SET_SAMPLES'
	};
	
	function setSamples(samples) {
	    return {
	        type: TYPES.SET_SAMPLES,
	        samples: samples
	    };
	}
	
	// TODO: Update the fetch to be handled in the Store
	function fetchSamples(callback) {
	    return function (dispatch) {
	        basketApi.getSamples().then(function (data) {
	            return dispatch(setSamples(data));
	        });
	    };
	}
	
	module.exports = {
	    TYPES: TYPES,
	    fetchSamples: fetchSamples
	};

/***/ }),
/* 348 */
/*!*******************************************!*\
  !*** ./public_ufe/js/reducers/rewards.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var ACTION_TYPES = __webpack_require__(/*! actions/RewardActions */ 349).TYPES;
	var initialState = {
	    rewards: null
	};
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.SET_REWARDS:
	            return Object.assign({}, state, {
	                rewards: action.rewards
	            });
	        default:
	            return state;
	    }
	};

/***/ }),
/* 349 */
/*!************************************************!*\
  !*** ./public_ufe/js/actions/RewardActions.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var biApi = __webpack_require__(/*! services/api/beautyInsider */ 260);
	
	var TYPES = { SET_REWARDS: 'SET_REWARDS' };
	
	function setRewards(rewards) {
	    return {
	        type: TYPES.SET_REWARDS,
	        rewards: rewards
	    };
	}
	
	function fetchProfileRewards() {
	    return function (dispatch) {
	        biApi.getBiRewardsGroupForCheckout().then(function (data) {
	            return dispatch(setRewards(data));
	        });
	    };
	}
	
	module.exports = {
	    TYPES: TYPES,
	    fetchProfileRewards: fetchProfileRewards
	};

/***/ }),
/* 350 */
/*!*****************************************!*\
  !*** ./public_ufe/js/reducers/promo.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var ACTION_TYPES = __webpack_require__(/*! actions/PromoActions */ 298).TYPES;
	var initialState = {
	    promo: null,
	    promoCode: null,
	    afterLogin: null,
	    msgPromosSkuList: [],
	    promoErrorMessage: null
	};
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.SET_PROMOS:
	            return Object.assign({}, state, {
	                promo: action.promo,
	                promoApplied: action.promoApplied,
	                showApplyButton: false,
	                promoCode: action.promoCode,
	                afterLogin: null,
	                msgPromosSkuList: []
	            });
	        case ACTION_TYPES.APPLY_PROMO_AFTER_LOGIN:
	            return Object.assign({}, state, { afterLogin: action.promoCode });
	        case ACTION_TYPES.UPDATE_MSG_PROMO_LIST:
	            return Object.assign({}, state, {
	                msgPromosSkuList: action.msgPromosSkuList,
	                promoCode: action.promoCode
	            });
	        case ACTION_TYPES.SHOW_PROMOS_ERROR:
	            return Object.assign({}, state, { promoErrorMessage: action.promoErrorMessage });
	        case ACTION_TYPES.REMOVE_PROMOS:
	            return Object.assign({}, state, {
	                promo: action.promo,
	                promoApplied: action.promoApplied,
	                showApplyButton: true,
	                promoMessage: null
	            });
	        default:
	            return state;
	    }
	};

/***/ }),
/* 351 */
/*!***************************************************!*\
  !*** ./public_ufe/js/reducers/applePaySession.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var ACTION_TYPES = __webpack_require__(/*! actions/Actions */ 175).TYPES;
	var initialState = {
	    isActive: false
	};
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.ENABLE_APPLEPAY_SESSION:
	            return Object.assign({}, state, {
	                isActive: action.isActive
	            });
	        default:
	            return state;
	    }
	};

/***/ }),
/* 352 */
/*!*******************************************!*\
  !*** ./~/redux-action-watch/lib/index.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _middleware = __webpack_require__(/*! ./middleware */ 353);
	
	var _middleware2 = _interopRequireDefault(_middleware);
	
	var _reducer = __webpack_require__(/*! ./reducer */ 356);
	
	var _reducer2 = _interopRequireDefault(_reducer);
	
	var _actionCreators = __webpack_require__(/*! ./actionCreators */ 358);
	
	var _actionCreators2 = _interopRequireDefault(_actionCreators);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = {
	  middleware: _middleware2.default,
	  reducer: _reducer2.default,
	  actionCreators: _actionCreators2.default
	};
	module.exports = exports['default'];

/***/ }),
/* 353 */
/*!************************************************!*\
  !*** ./~/redux-action-watch/lib/middleware.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _lodash = __webpack_require__(/*! lodash.defer */ 354);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _util = __webpack_require__(/*! ./util */ 355);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var watcherMiddleware = function watcherMiddleware(reducerName) {
	  return function (store) {
	    return function (next) {
	      return function (action) {
	        var appState = store.getState();
	        // check for immutable store
	        var watcher = (0, _util.isImmutable)(appState) ? appState.get(reducerName) : appState[reducerName];
	        // check whether reducer has been setup or not.
	        if (!watcher) {
	          throw Error('Reducer has not configured');
	        }
	        var listeners = watcher[action.type] || [];
	        // only call listner if it is function
	        listeners.forEach(function (listener) {
	          return typeof listener === 'function' ? (0, _lodash2.default)(listener, action) : null;
	        });
	        return next(action);
	      };
	    };
	  };
	};
	
	// takes state/reducer name in redux store
	
	exports.default = function () {
	  var reducerName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'watcher';
	  return watcherMiddleware(reducerName);
	};
	
	module.exports = exports['default'];

/***/ }),
/* 354 */
/*!*********************************!*\
  !*** ./~/lodash.defer/index.js ***!
  \*********************************/
/***/ (function(module, exports) {

	/**
	 * lodash (Custom Build) <https://lodash.com/>
	 * Build: `lodash modularize exports="npm" -o ./`
	 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */
	
	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/**
	 * A faster alternative to `Function#apply`, this function invokes `func`
	 * with the `this` binding of `thisArg` and the arguments of `args`.
	 *
	 * @private
	 * @param {Function} func The function to invoke.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} args The arguments to invoke `func` with.
	 * @returns {*} Returns the result of `func`.
	 */
	function apply(func, thisArg, args) {
	  switch (args.length) {
	    case 0: return func.call(thisArg);
	    case 1: return func.call(thisArg, args[0]);
	    case 2: return func.call(thisArg, args[0], args[1]);
	    case 3: return func.call(thisArg, args[0], args[1], args[2]);
	  }
	  return func.apply(thisArg, args);
	}
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * The base implementation of `_.delay` and `_.defer` which accepts `args`
	 * to provide to `func`.
	 *
	 * @private
	 * @param {Function} func The function to delay.
	 * @param {number} wait The number of milliseconds to delay invocation.
	 * @param {Array} args The arguments to provide to `func`.
	 * @returns {number} Returns the timer id.
	 */
	function baseDelay(func, wait, args) {
	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  return setTimeout(function() { func.apply(undefined, args); }, wait);
	}
	
	/**
	 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @returns {Function} Returns the new function.
	 */
	function baseRest(func, start) {
	  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
	  return function() {
	    var args = arguments,
	        index = -1,
	        length = nativeMax(args.length - start, 0),
	        array = Array(length);
	
	    while (++index < length) {
	      array[index] = args[start + index];
	    }
	    index = -1;
	    var otherArgs = Array(start + 1);
	    while (++index < start) {
	      otherArgs[index] = args[index];
	    }
	    otherArgs[start] = array;
	    return apply(func, this, otherArgs);
	  };
	}
	
	/**
	 * Defers invoking the `func` until the current call stack has cleared. Any
	 * additional arguments are provided to `func` when it's invoked.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to defer.
	 * @param {...*} [args] The arguments to invoke `func` with.
	 * @returns {number} Returns the timer id.
	 * @example
	 *
	 * _.defer(function(text) {
	 *   console.log(text);
	 * }, 'deferred');
	 * // => Logs 'deferred' after one or more milliseconds.
	 */
	var defer = baseRest(function(func, args) {
	  return baseDelay(func, 1, args);
	});
	
	module.exports = defer;


/***/ }),
/* 355 */
/*!******************************************!*\
  !*** ./~/redux-action-watch/lib/util.js ***!
  \******************************************/
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var isImmutable = exports.isImmutable = function isImmutable(appState) {
	  return typeof appState.get === 'function';
	};
	
	exports.default = {
	  isImmutable: isImmutable
	};

/***/ }),
/* 356 */
/*!*********************************************!*\
  !*** ./~/redux-action-watch/lib/reducer.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.formatListenerObj = undefined;
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _lodash = __webpack_require__(/*! lodash.foreach */ 357);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _actionCreators = __webpack_require__(/*! ./actionCreators */ 358);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// helper function to convert listners object to acceptable object
	var formatListenerObj = exports.formatListenerObj = function formatListenerObj(listenersObj) {
	  var formated = {};
	  (0, _lodash2.default)(listenersObj, function (listener, action) {
	    return formated[action] = listener instanceof Array ? listener : [listener];
	  });
	
	  return formated;
	};
	
	exports.default = function () {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  var _ref = arguments[1];
	  var type = _ref.type,
	      listenersObj = _ref.listenersObj;
	
	  // ignore if action object is not relievent.
	  if (!new RegExp(_actionCreators.actionNamespace).test(type) || (typeof listenersObj === 'undefined' ? 'undefined' : _typeof(listenersObj)) !== 'object') {
	    return state;
	  }
	
	  // clone the state
	  var newState = Object.assign({}, state);
	  // parse the listenersObj
	  var formattedListenerObj = formatListenerObj(listenersObj);
	  // Check for subcribe or un-subscribe action
	  switch (type) {
	    case _actionCreators.SUBSCRIBE_ACTIONS:
	      {
	        // Add listners
	        (0, _lodash2.default)(formattedListenerObj, function (listeners, actionType) {
	          newState[actionType] = newState[actionType] ? newState[actionType].concat(listeners) : listeners;
	        });
	        return newState;
	      }
	    case _actionCreators.UNSUBSCRIBE_ACTIONS:
	      {
	        // remove listeners
	        (0, _lodash2.default)(formattedListenerObj, function (listeners, actionType) {
	          if (!newState[actionType]) {
	            return;
	          }
	          (0, _lodash2.default)(listeners, function (listener) {
	            var index = newState[actionType].indexOf(listener);
	            newState[actionType].splice(index, 1);
	          });
	        });
	        return newState;
	      }
	    default:
	      {
	        return state;
	      }
	  }
	};

/***/ }),
/* 357 */
/*!***********************************!*\
  !*** ./~/lodash.foreach/index.js ***!
  \***********************************/
/***/ (function(module, exports) {

	/**
	 * lodash (Custom Build) <https://lodash.com/>
	 * Build: `lodash modularize exports="npm" -o ./`
	 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */
	
	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]';
	
	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;
	
	/**
	 * A specialized version of `_.forEach` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns `array`.
	 */
	function arrayEach(array, iteratee) {
	  var index = -1,
	      length = array ? array.length : 0;
	
	  while (++index < length) {
	    if (iteratee(array[index], index, array) === false) {
	      break;
	    }
	  }
	  return array;
	}
	
	/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);
	
	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}
	
	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeKeys = overArg(Object.keys, Object);
	
	/**
	 * Creates an array of the enumerable property names of the array-like `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @param {boolean} inherited Specify returning inherited property names.
	 * @returns {Array} Returns the array of property names.
	 */
	function arrayLikeKeys(value, inherited) {
	  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
	  // Safari 9 makes `arguments.length` enumerable in strict mode.
	  var result = (isArray(value) || isArguments(value))
	    ? baseTimes(value.length, String)
	    : [];
	
	  var length = result.length,
	      skipIndexes = !!length;
	
	  for (var key in value) {
	    if ((inherited || hasOwnProperty.call(value, key)) &&
	        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	/**
	 * The base implementation of `_.forEach` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 */
	var baseEach = createBaseEach(baseForOwn);
	
	/**
	 * The base implementation of `baseForOwn` which iterates over `object`
	 * properties returned by `keysFunc` and invokes `iteratee` for each property.
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @returns {Object} Returns `object`.
	 */
	var baseFor = createBaseFor();
	
	/**
	 * The base implementation of `_.forOwn` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Object} Returns `object`.
	 */
	function baseForOwn(object, iteratee) {
	  return object && baseFor(object, iteratee, keys);
	}
	
	/**
	 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeys(object) {
	  if (!isPrototype(object)) {
	    return nativeKeys(object);
	  }
	  var result = [];
	  for (var key in Object(object)) {
	    if (hasOwnProperty.call(object, key) && key != 'constructor') {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	/**
	 * Creates a `baseEach` or `baseEachRight` function.
	 *
	 * @private
	 * @param {Function} eachFunc The function to iterate over a collection.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseEach(eachFunc, fromRight) {
	  return function(collection, iteratee) {
	    if (collection == null) {
	      return collection;
	    }
	    if (!isArrayLike(collection)) {
	      return eachFunc(collection, iteratee);
	    }
	    var length = collection.length,
	        index = fromRight ? length : -1,
	        iterable = Object(collection);
	
	    while ((fromRight ? index-- : ++index < length)) {
	      if (iteratee(iterable[index], index, iterable) === false) {
	        break;
	      }
	    }
	    return collection;
	  };
	}
	
	/**
	 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseFor(fromRight) {
	  return function(object, iteratee, keysFunc) {
	    var index = -1,
	        iterable = Object(object),
	        props = keysFunc(object),
	        length = props.length;
	
	    while (length--) {
	      var key = props[fromRight ? length : ++index];
	      if (iteratee(iterable[key], key, iterable) === false) {
	        break;
	      }
	    }
	    return object;
	  };
	}
	
	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return !!length &&
	    (typeof value == 'number' || reIsUint.test(value)) &&
	    (value > -1 && value % 1 == 0 && value < length);
	}
	
	/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
	
	  return value === proto;
	}
	
	/**
	 * Iterates over elements of `collection` and invokes `iteratee` for each element.
	 * The iteratee is invoked with three arguments: (value, index|key, collection).
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * **Note:** As with other "Collections" methods, objects with a "length"
	 * property are iterated like arrays. To avoid this behavior use `_.forIn`
	 * or `_.forOwn` for object iteration.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @alias each
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 * @see _.forEachRight
	 * @example
	 *
	 * _([1, 2]).forEach(function(value) {
	 *   console.log(value);
	 * });
	 * // => Logs `1` then `2`.
	 *
	 * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
	 *   console.log(key);
	 * });
	 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	 */
	function forEach(collection, iteratee) {
	  var func = isArray(collection) ? arrayEach : baseEach;
	  return func(collection, typeof iteratee == 'function' ? iteratee : identity);
	}
	
	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	function isArguments(value) {
	  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
	  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
	    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
	}
	
	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;
	
	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(value.length) && !isFunction(value);
	}
	
	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 8-9 which returns 'object' for typed array and other constructors.
	  var tag = isObject(value) ? objectToString.call(value) : '';
	  return tag == funcTag || tag == genTag;
	}
	
	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}
	
	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
	}
	
	/**
	 * This method returns the first argument it receives.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}
	
	module.exports = forEach;


/***/ }),
/* 358 */
/*!****************************************************!*\
  !*** ./~/redux-action-watch/lib/actionCreators.js ***!
  \****************************************************/
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	// package's action namespace
	var actionNamespace = exports.actionNamespace = '@ACTION_WATCHER';
	
	// Actions
	var SUBSCRIBE_ACTIONS = exports.SUBSCRIBE_ACTIONS = actionNamespace + '/ADD';
	var UNSUBSCRIBE_ACTIONS = exports.UNSUBSCRIBE_ACTIONS = actionNamespace + '/REMOVE';
	
	/**
	 * Un-subscribes/remove listeners
	 *
	 * @example
	 *        unsubscribeActions(dispatch)({
	 *          ACTION_A: listenerFn1,
	 *          ACTION_B: [listenerFn2, listenerFn3],
	 *        })
	 *
	 * @param      {Function}  dispatch  Redux dispatch function
	 * @return     {Function}    Action creator to dispatch subcribe action object to redux
	 */
	var unsubscribeActions = exports.unsubscribeActions = function unsubscribeActions(dispatch) {
	  return function (listenersObj) {
	    return dispatch({ type: UNSUBSCRIBE_ACTIONS, listenersObj: listenersObj });
	  };
	};
	/**
	 * Subscribes/add listener for redux action dispatch
	 *
	 * @example
	 *        const unsubscribe = subscribeActions(dispatch)({
	 *          ACTION_A: listenerFn1,
	 *          ACTION_B: [listenerFn2, listenerFn3],
	 *        })
	 *
	 *        unsubscribe();  // un-subscribe
	 *
	 * @param      {Function}  dispatch  Redux dispatch function
	 * @return     {Function}    Action creator to dispatch un-subcribe action object to redux
	 */
	var subscribeActions = exports.subscribeActions = function subscribeActions(dispatch) {
	  return function (listenersObj) {
	    dispatch({ type: SUBSCRIBE_ACTIONS, listenersObj: listenersObj });
	    return function () {
	      return unsubscribeActions(dispatch)(listenersObj);
	    };
	  };
	};
	
	/**
	 * Alise of subscritionActions function, but accept one listner.
	 *
	 * @example
	 *        const unsubscribe = onAction(dispatch)('ACTION_A', actionObj => {console.log(actionObj)})
	 *
	 *        unsubscribe();  // un-subscribe
	 *
	 * @param      {Function}  dispatch  Redux dispatch function
	 * @return     {Function}  Action creator to dispatch subcribe action object to redux
	 */
	var onAction = exports.onAction = function onAction(dispatch) {
	  return function (action, listener) {
	    return subscribeActions(dispatch)(_defineProperty({}, action, listener));
	  };
	};
	
	/**
	 * Alise of subscritionActions function, but accept one listner at a time and automatically unsubcribe
	 * after one call.
	 *
	 * @example
	 *        onActionOnce(dispatch)('ACTION_A', actionObj => {console.log(actionObj)})
	 *
	 * @param      {Function}  dispatch  Redux dispatch function
	 * @return     {Function}  Action creator to dispatch subcribe action object to redux
	 */
	var onActionOnce = exports.onActionOnce = function onActionOnce(dispatch) {
	  return function (actionType, listener) {
	    var unsubscribe = null;
	    var wrapListener = function wrapListener(actionMeta) {
	      if (unsubscribe) {
	        // un-subscribe behalf of coder.
	        unsubscribe();
	      }
	      listener(actionMeta);
	    };
	    unsubscribe = subscribeActions(dispatch)(_defineProperty({}, actionType, wrapListener));
	    // return unsubscribe fn to support termination without any call.
	    return unsubscribe;
	  };
	};
	
	exports.default = {
	  subscribeActions: subscribeActions,
	  unsubscribeActions: unsubscribeActions,
	  onAction: onAction,
	  onActionOnce: onActionOnce
	};

/***/ }),
/* 359 */
/*!************************************************!*\
  !*** ./public_ufe/js/reducers/reservations.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var RESERVATION_ACTION_TYPES = __webpack_require__(/*! ../actions/ReservationActions */ 320).TYPES;
	
	var initialState = {
	    upcoming: [],
	    previous: [],
	    addUrl: '',
	    editUrl: '',
	    error: ''
	};
	
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];
	
	    switch (action.type) {
	        case RESERVATION_ACTION_TYPES.GET_RESERVATIONS:
	            return Object.assign({}, state, {
	                upcoming: action.upcomingReservations,
	                previous: action.previousReservations,
	                addUrl: action.addUrl,
	                editUrl: action.editUrl,
	                error: action.error
	            });
	
	        default:
	            return state;
	    }
	};

/***/ }),
/* 360 */
/*!*******************************************!*\
  !*** ./public_ufe/js/reducers/profile.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var ACTION_TYPES = __webpack_require__(/*! actions/ProfileActions */ 278).TYPES;
	
	var initialState = {
	    biAccount: null,
	    accountHistorySlice: null
	};
	
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];
	
	    switch (action.type) {
	
	        case ACTION_TYPES.UPDATE_BI_ACCOUNT:
	            return Object.assign({}, state, {
	                biAccount: action.biAccount
	            });
	
	        case ACTION_TYPES.SET_ACCOUNT_HISTORY_SLICE:
	            return Object.assign({}, state, {
	                accountHistorySlice: action.accountHistorySlice
	            });
	
	        default:
	            return state;
	    }
	};

/***/ }),
/* 361 */
/*!**********************************************!*\
  !*** ./public_ufe/js/reducers/socialInfo.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var ACTION_TYPES = __webpack_require__(/*! actions/SocialInfoActions */ 256).TYPES;
	
	var initialState = {
	    isLithiumSuccessful: null
	};
	
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];
	
	    switch (action.type) {
	        //TODO: add other social necessary data to socialInfo object
	        case ACTION_TYPES.SET_USER_SOCIAL_INFO:
	            return Object.assign({}, state, action.socialInfo);
	
	        case ACTION_TYPES.SET_LITHIUM_SUCCESS_STATUS:
	            return Object.assign({}, state, {
	                isLithiumSuccessful: action.isLithiumSuccessful
	            });
	
	        default:
	            return state;
	    }
	};

/***/ }),
/* 362 */
/*!*************************************************!*\
  !*** ./public_ufe/js/reducers/virtualArtist.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var ACTION_TYPES = __webpack_require__(/*! actions/VirtualArtistActions */ 363).TYPES;
	
	var initialState = {
	    isVisible: false,
	    skuId: null,
	    model: null
	};
	
	module.exports = function () {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    switch (action.type) {
	        case ACTION_TYPES.SHOW_VIRTUAL_ARTIST:
	            return Object.assign({}, state, {
	                isVisible: action.isVisible
	            });
	        case ACTION_TYPES.UPDATE_MODEL:
	            return Object.assign({}, state, {
	                model: action.model
	            });
	        case ACTION_TYPES.UPDATE_SKU_ID:
	            return Object.assign({}, state, {
	                skuId: action.skuId
	            });
	        case ACTION_TYPES.UPDATE_IMAGE:
	            return Object.assign({}, state, {
	                appliedMakeupImage: action.appliedMakeupImage
	            });
	
	        default:
	            return state;
	    }
	};

/***/ }),
/* 363 */
/*!*******************************************************!*\
  !*** ./public_ufe/js/actions/VirtualArtistActions.js ***!
  \*******************************************************/
/***/ (function(module, exports) {

	'use strict';
	
	var TYPES = {
	    SHOW_VIRTUAL_ARTIST: 'SHOW_VIRTUAL_ARTIST',
	    UPDATE_MODEL: 'UPDATE_MODEL',
	    UPDATE_IMAGE: 'UPDATE_IMAGE',
	    UPDATE_SKU_ID: 'UPDATE_SKU_ID',
	    SWIPE_VIRTUAL_ARTIST: 'SWIPE_VIRTUAL_ARTIST'
	};
	
	module.exports = {
	    TYPES: TYPES,
	    showVirtualArtist: function showVirtualArtist(isVisible) {
	        return {
	            type: TYPES.SHOW_VIRTUAL_ARTIST,
	            isVisible: isVisible
	        };
	    },
	    updateModel: function updateModel(model) {
	        return {
	            type: TYPES.UPDATE_MODEL,
	            model: model
	        };
	    },
	    updateSkuId: function updateSkuId(skuId) {
	        return {
	            type: TYPES.UPDATE_SKU_ID,
	            skuId: skuId
	        };
	    },
	    updateImage: function updateImage(appliedMakeupImage) {
	        return {
	            type: TYPES.UPDATE_IMAGE,
	            appliedMakeupImage: appliedMakeupImage
	        };
	    },
	    swipeVirtualArtist: function swipeVirtualArtist(direction) {
	        return {
	            type: TYPES.SWIPE_VIRTUAL_ARTIST,
	            direction: direction
	        };
	    }
	};

/***/ }),
/* 364 */
/*!************************************!*\
  !*** ./public_ufe/js/utils/BCC.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var store = __webpack_require__(/*! store/Store */ 146);
	var watch = __webpack_require__(/*! redux-watch */ 187);
	
	var COMPONENT_NAMES = {
	    CAROUSEL: 54,
	    GRID: 55,
	    IMAGE: 53,
	    LINK: 58,
	    LINK_GROUP: 59,
	    MARKDOWN: 57,
	    MODAL: 56,
	    REWARDS_CAROUSEL: 62,
	    SLIDESHOW: 52,
	    VIDEO: 61,
	    TARGETER: 63,
	    HTML: 64,
	    PRODUCT_FINDER: 66
	};
	
	var IMAGE_SIZES = {
	    '42': 42,
	    '50': 50,
	    '62': 62,
	    '97': 97,
	    '135': 135,
	    '162': 162,
	    '250': 250,
	    '300': 300,
	    '450': 450,
	    '1500': 1500
	};
	
	var BCC = {
	    COMPONENT_NAMES: COMPONENT_NAMES,
	    IMAGE_SIZES: IMAGE_SIZES,
	    /** Function to process targeters async after userInfo service has completed */
	    processTargeters: function processTargeters(targetersList, callback) {
	        if (!(targetersList instanceof Array)) {
	            targetersList = [targetersList];
	        }
	
	        var _loop = function _loop(i) {
	            var targeterName = targetersList[i];
	            var targeters = store.getState().targeters;
	            if (targeters.results && targeters.results.targeterResult && targeters.results.targeterResult[targeterName]) {
	                callback(targeters.results.targeterResult[targeterName], targeterName);
	            }
	
	            var watchTargeters = watch(store.getState, 'targeters');
	
	            store.subscribe(watchTargeters(function (watchedTargeters) {
	                if (watchedTargeters.results && watchedTargeters.results.targeterResult && watchedTargeters.results.targeterResult[targeterName]) {
	                    callback(watchedTargeters.results.targeterResult[targeterName], targeterName);
	                }
	            }));
	        };
	
	        for (var i = 0; i < targetersList.length; i++) {
	            _loop(i);
	        }
	    }
	};
	
	module.exports = BCC;

/***/ }),
/* 365 */
/*!*******************************************!*\
  !*** ./public_ufe/js/utils/TestTarget.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var LanguageLocale = __webpack_require__(/*! utils/LanguageLocale */ 4);
	var getCurrentCountry = LanguageLocale.getCurrentCountry;
	var LOCAL_STORAGE = __webpack_require__(/*! utils/localStorage/Constants */ 274);
	var Storage = __webpack_require__(/*! utils/localStorage/Storage */ 275);
	
	var getSelected = function getSelected(arr) {
	    try {
	        var choices = arr.filter(function (elem) {
	            return elem.isSelected;
	        }).map(function (choice) {
	            return choice.displayName.toLowerCase();
	        });
	
	        if (choices.length) {
	            return choices.length > 1 ? choices.join(',') : choices[0];
	        } else {
	            return '';
	        }
	    } catch (e) {
	        return '';
	    }
	};
	
	var TEST_TYPES = {
	    TOGGLE: 'toggle',
	    REORDERING: 'reordering'
	};
	
	module.exports = {
	    MBOX_NAME: 'sephora_global',
	    MBOX_TIMEOUT: 5000,
	    TEST_TYPES: TEST_TYPES,
	
	    setUserParams: function setUserParams(user) {
	        /* TODO: support brand, categoryPath, and pageType when UFE rolls out
	         ** to other pages besides HP
	         */
	        var targetParams = {
	            pageName: window.location.pathname,
	            locale: getCurrentCountry().toLowerCase(),
	            brand: '',
	            categoryPath: '',
	            pageType: ''
	        };
	
	        if (user.profileStatus !== 0 && typeof user.beautyInsiderAccount !== 'undefined') {
	            var userData = user.beautyInsiderAccount;
	            var birthDate = userData.birthMonth + '/' + userData.birthDay + '/' + userData.birthYear;
	
	            var addToParams = function addToParams(paramsKey, dataKey) {
	                /* This will not add the parameter if it does not exist in the user info data.
	                 ** This is so user info data saved by Test & Target is not overwritten
	                 ** with blank data.
	                 */
	
	                if (dataKey !== '') {
	                    targetParams[paramsKey] = dataKey;
	                }
	            };
	
	            addToParams('profile.biStatus', userData.vibSegment.toLowerCase());
	            addToParams('profile.biPoints', userData.promotionPoints);
	            addToParams('profile.biYtdSpend', userData.vibSpendingForYear);
	            addToParams('profile.birthday', birthDate);
	            addToParams('profile.biSignUpDate', new Date(userData.signupDate).toLocaleString('en-US', {
	                month: '2-digit',
	                day: '2-digit',
	                year: 'numeric'
	            }));
	            addToParams('gender', getSelected(userData.personalizedInformation.gender));
	            addToParams('eyeColor', getSelected(userData.personalizedInformation.eyeColor));
	            addToParams('skinType', getSelected(userData.personalizedInformation.skinType));
	            addToParams('skinCareConcerns', getSelected(userData.personalizedInformation.skinConcerns));
	            addToParams('skinTone', getSelected(userData.personalizedInformation.skinTone));
	            addToParams('hairColor', getSelected(userData.personalizedInformation.hairColor));
	            addToParams('yourHair', getSelected(userData.personalizedInformation.hairDescrible));
	            addToParams('hairConcerns', getSelected(userData.personalizedInformation.hairConcerns));
	
	            /* cache targetParams only for authenticated users. */
	            Storage.local.setItem(LOCAL_STORAGE.TARGET_PARAMS, targetParams);
	        }
	
	        return targetParams;
	    },
	
	    setComponentArrangement: function setComponentArrangement() {
	        var newArrangement = {};
	
	        /* This property is used to verify that the amount of BCC components assigned to a
	        specific test matches the amount of components prescribed in T&T. */
	        this.componentCount = this.arrangement.length;
	
	        /* We transform the arrangement array into an object where each key will be
	        the original component's name and its value is its replacements component's
	        name. This way, the swapping TestTarget instance can do a look-up like
	        arrangement[this.props.name] to get the name of the component it is supposed
	        to swap with. */
	        this.arrangement.forEach(function (item) {
	            newArrangement[item.originalComponent] = item.replacementComponent;
	        });
	
	        this.arrangement = newArrangement;
	    },
	
	    checkTestAndTargetFlags: function checkTestAndTargetFlags(PPageTestAndTargetData) {
	
	        var isMobile = Sephora.isMobile();
	        var targetResults = {};
	        if (!isMobile && PPageTestAndTargetData && PPageTestAndTargetData.hidePPageChatDesktop) {
	            targetResults.hideChat = true;
	            Sephora.configurationSettings.isPPagesChatEnabled = false;
	        } else if (!isMobile && PPageTestAndTargetData && PPageTestAndTargetData.hidePPageFlashBannerAndChatDesktop) {
	            targetResults.hideChat = true;
	            Sephora.configurationSettings.isPPagesChatEnabled = false;
	        } else if (isMobile && PPageTestAndTargetData && PPageTestAndTargetData.hidePPageChatMW) {
	            targetResults.hideChat = true;
	            Sephora.configurationSettings.isPPagesChatEnabled = false;
	        } else if (isMobile && PPageTestAndTargetData && PPageTestAndTargetData.hidePPageFlashBannerAndChatMW) {
	            targetResults.hideChat = true;
	            Sephora.configurationSettings.isPPagesChatEnabled = false;
	        }
	        return targetResults;
	    }
	};

/***/ }),
/* 366 */
/*!**************************************************************!*\
  !*** ./public_ufe/js/components/TestCertona/TestCertona.jsx ***!
  \**************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	var TestCertona = function TestCertona() {};
	
	TestCertona.prototype.asyncRender = 'Certona';
	
	TestCertona.prototype.render = function () {
	    return React.createElement(
	        'div',
	        {
	            'data-root-comp': this.class,
	            style: { width: '200px', height: '200px', backgroundColor: '#FFAAAA' } },
	        'TestCertonaing!!! isRootRender: ',
	        Sephora.isRootRender.toString()
	    );
	};
	
	// Added by sephora-jsx-loader.js
	TestCertona.prototype.path = 'TestCertona';
	// Added by sephora-jsx-loader.js
	Object.assign(TestCertona.prototype, __webpack_require__(/*! ./TestCertona.c.js */ 367));
	var originalDidMount = TestCertona.prototype.componentDidMount;
	TestCertona.prototype.componentDidMount = function () {
	    //console.log('Non-root componentDidMount Fired: TestCertona');
	    if (originalDidMount) originalDidMount.apply(this);
	    if (TestCertona.prototype.ctrlr) TestCertona.prototype.ctrlr.apply(this, this.props.ctrlrArgs);
	};
	//console.log('Applied non-root componentDidMount: TestCertona');
	// Added by sephora-jsx-loader.js
	TestCertona.prototype.hasCtrlr = 'true';
	// Added by sephora-jsx-loader.js
	TestCertona.prototype.class = 'TestCertona';
	// Added by sephora-jsx-loader.js
	TestCertona.prototype.getInitialState = function () {
	    TestCertona.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	TestCertona.prototype.render = wrapComponentRender(TestCertona.prototype.render);
	// Added by sephora-jsx-loader.js
	var TestCertonaClass = React.createClass(TestCertona.prototype);
	// Added by sephora-jsx-loader.js
	TestCertonaClass.prototype.classRef = TestCertonaClass;
	// Added by sephora-jsx-loader.js
	Object.assign(TestCertonaClass, TestCertona);
	// Added by sephora-jsx-loader.js
	module.exports = TestCertonaClass;

/***/ }),
/* 367 */
/*!***************************************************************!*\
  !*** ./public_ufe/js/components/TestCertona/TestCertona.c.js ***!
  \***************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	var TestCertona = function TestCertona() {};
	
	// Added by sephora-jsx-loader.js
	TestCertona.prototype.shouldComponentUpdate = wrapComponentRenderModule.shouldComponentUpdate;
	var ReactDOM = __webpack_require__(/*! react-dom */ 100);
	
	TestCertona.prototype.ctrlr = function () {
	
	    // var el = this.getDOMNode();
	    var el = ReactDOM.findDOMNode(this);
	    el.addEventListener('click', function () {
	        alert('TestCertona!!!');
	    });
	};
	
	// Added by sephora-jsx-loader.js
	module.exports = TestCertona.prototype;

/***/ }),
/* 368 */
/*!****************************************************************!*\
  !*** ./public_ufe/js/components/InlineBasket/InlineBasket.jsx ***!
  \****************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	var _require = __webpack_require__(/*! style */ 106),
	    colors = _require.colors,
	    dropdown = _require.dropdown,
	    space = _require.space,
	    zIndex = _require.zIndex;
	
	var _require2 = __webpack_require__(/*! components/display */ 369),
	    Box = _require2.Box,
	    Flex = _require2.Flex;
	
	var IconBasket = __webpack_require__(/*! components/Icon/IconBasket */ 377);
	var Dropdown = __webpack_require__(/*! components/Dropdown/Dropdown */ 379);
	var BasketDesktop = __webpack_require__(/*! ./BasketDesktop/BasketDesktop */ 383);
	var BasketMobile = __webpack_require__(/*! ./BasketMobile/BasketMobile */ 396);
	var BasketUtils = __webpack_require__(/*! utils/Basket */ 190);
	
	var InlineBasket = function InlineBasket() {
	    this.state = {
	        basket: { itemCount: 0 },
	        fixed: false,
	        isOpen: false,
	        isLoggedIn: false,
	        renderBasket: Sephora.isDesktop() || Sephora.isMobile() && !Sephora.isLegacyMode,
	        showHover: !Sephora.isThirdPartySite
	    };
	};
	
	InlineBasket.prototype.asyncRender = 'UserInfo';
	
	InlineBasket.prototype.render = function () {
	
	    var basketWidth = 380;
	    var iconPadding = space[2];
	
	    var styles = {
	        dropdown: {
	            boxShadow: this.state.isOpen ? dropdown.SHADOW : null
	        },
	        shadowCover: this.state.isOpen ? {
	            position: 'absolute',
	            zIndex: zIndex.DROPDOWN + 1,
	            bottom: 0,
	            left: 0,
	            right: 0,
	            backgroundColor: colors.white,
	            height: 5,
	            display: this.state.fixed ? 'none' : null
	        } : {},
	        dropdownMenu: this.state.fixed ? {
	            position: 'fixed',
	            top: 0,
	            right: 'auto',
	            left: this.rightOffset() - basketWidth
	        } : {}
	    };
	
	    var basketIcon = React.createElement(
	        Box,
	        {
	            display: 'inline-block',
	            onClick: this.onBasketClick,
	            href: this.state.renderBasket ? BasketUtils.PAGE_URL : null,
	            padding: iconPadding,
	            style: {
	                visibility: this.state.renderBasket ? null : 'hidden'
	            } },
	        React.createElement(
	            Box,
	            {
	                position: 'relative',
	                lineHeight: 0 },
	            React.createElement(IconBasket, {
	                fontSize: Sephora.isMobile() ? 20 : 27 }),
	            this.state.basket.itemCount > 0 && React.createElement(
	                Flex,
	                {
	                    fontSize: 'h5',
	                    justifyContent: 'center',
	                    alignItems: 'center',
	                    circle: true,
	                    fontWeight: 700,
	                    lineHeight: 1,
	                    color: 'white',
	                    backgroundColor: 'red',
	                    position: 'absolute',
	                    top: '50%',
	                    right: '-.5em',
	                    transform: 'translate(0, -50%)',
	                    width: '1.5em', height: '1.5em',
	                    'data-at': Sephora.debug.dataAt('basket_count') },
	                this.state.basket.itemCount
	            )
	        )
	    );
	
	    return React.createElement(
	        Box,
	        { marginRight: -iconPadding },
	        Sephora.isDesktop() ? !this.state.showHover ? basketIcon : React.createElement(
	            Dropdown,
	            {
	                isHover: true,
	                _css: styles.dropdown,
	                onTrigger: this.toggleOpen,
	                syncState: this.state.isOpen },
	            React.createElement(
	                Dropdown.Trigger,
	                null,
	                basketIcon,
	                React.createElement(Box, {
	                    _css: styles.shadowCover })
	            ),
	            React.createElement(
	                Dropdown.Menu,
	                {
	                    right: true,
	                    width: 'auto',
	                    _css: styles.dropdownMenu },
	                React.createElement(BasketDesktop, {
	                    basket: this.state.basket,
	                    width: basketWidth,
	                    isLoggedIn: this.state.isLoggedIn,
	                    signInHandler: this.signInHandler,
	                    justAddedProducts: this.state.justAddedProducts,
	                    onCheckoutClick: this.onCheckoutClick,
	                    onBasketClick: this.onBasketHoverClick })
	            )
	        ) : React.createElement(
	            BasketMobile,
	            {
	                isOpen: this.state.isOpen,
	                basket: this.state.basket,
	                onCheckoutClick: this.onCheckoutClick },
	            basketIcon
	        )
	    );
	};
	
	// Added by sephora-jsx-loader.js
	InlineBasket.prototype.path = 'InlineBasket';
	// Added by sephora-jsx-loader.js
	Object.assign(InlineBasket.prototype, __webpack_require__(/*! ./InlineBasket.c.js */ 398));
	var originalDidMount = InlineBasket.prototype.componentDidMount;
	InlineBasket.prototype.componentDidMount = function () {
	    //console.log('Non-root componentDidMount Fired: InlineBasket');
	    if (originalDidMount) originalDidMount.apply(this);
	    if (InlineBasket.prototype.ctrlr) InlineBasket.prototype.ctrlr.apply(this, this.props.ctrlrArgs);
	};
	//console.log('Applied non-root componentDidMount: InlineBasket');
	// Added by sephora-jsx-loader.js
	InlineBasket.prototype.hasCtrlr = 'true';
	// Added by sephora-jsx-loader.js
	InlineBasket.prototype.class = 'InlineBasket';
	// Added by sephora-jsx-loader.js
	InlineBasket.prototype.getInitialState = function () {
	    InlineBasket.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	InlineBasket.prototype.render = wrapComponentRender(InlineBasket.prototype.render);
	// Added by sephora-jsx-loader.js
	var InlineBasketClass = React.createClass(InlineBasket.prototype);
	// Added by sephora-jsx-loader.js
	InlineBasketClass.prototype.classRef = InlineBasketClass;
	// Added by sephora-jsx-loader.js
	Object.assign(InlineBasketClass, InlineBasket);
	// Added by sephora-jsx-loader.js
	module.exports = InlineBasketClass;

/***/ }),
/* 369 */
/*!*********************************************!*\
  !*** ./public_ufe/js/components/display.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var Box = __webpack_require__(/*! components/Box/Box */ 143);
	var Flex = __webpack_require__(/*! components/Flex/Flex */ 370);
	var Grid = __webpack_require__(/*! components/Grid/Grid */ 371);
	var Image = __webpack_require__(/*! components/Image/Image */ 373);
	var Text = __webpack_require__(/*! components/Text/Text */ 376);
	
	var display = {
	    Box: Box,
	    Flex: Flex,
	    Grid: Grid,
	    Image: Image,
	    Text: Text
	};
	
	module.exports = display;

/***/ }),
/* 370 */
/*!************************************************!*\
  !*** ./public_ufe/js/components/Flex/Flex.jsx ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['Flex'] = function Flex() {
	        return FlexClass;
	    };
	}
	var Box = __webpack_require__(/*! components/Box/Box */ 143);
	
	/** Flexbox component */
	
	var Flex = function Flex() {};
	
	Flex.prototype.render = function () {
	    var _props = this.props,
	        display = _props.display,
	        isInline = _props.isInline,
	        props = _objectWithoutProperties(_props, ['display', 'isInline']);
	
	    var defaultDisplay = isInline ? 'inline-flex' : 'flex';
	
	    return React.createElement(Box, _extends({}, props, {
	        display: display || defaultDisplay }));
	};
	
	// Added by sephora-jsx-loader.js
	Flex.prototype.path = 'Flex';
	// Added by sephora-jsx-loader.js
	Flex.prototype.class = 'Flex';
	// Added by sephora-jsx-loader.js
	Flex.prototype.getInitialState = function () {
	    Flex.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	Flex.prototype.render = wrapComponentRender(Flex.prototype.render);
	// Added by sephora-jsx-loader.js
	var FlexClass = React.createClass(Flex.prototype);
	// Added by sephora-jsx-loader.js
	FlexClass.prototype.classRef = FlexClass;
	// Added by sephora-jsx-loader.js
	Object.assign(FlexClass, Flex);
	// Added by sephora-jsx-loader.js
	module.exports = FlexClass;

/***/ }),
/* 371 */
/*!************************************************!*\
  !*** ./public_ufe/js/components/Grid/Grid.jsx ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['Grid'] = function Grid() {
	        return GridClass;
	    };
	}
	var Cell = __webpack_require__(/*! ./GridCell */ 372);
	var Flex = __webpack_require__(/*! components/Flex/Flex */ 370);
	
	var Grid = function Grid() {};
	
	Grid.prototype.render = function () {
	    var _props = this.props,
	        fit = _props.fit,
	        gutter = _props.gutter,
	        children = _props.children,
	        marginX = _props.marginX,
	        props = _objectWithoutProperties(_props, ['fit', 'gutter', 'children', 'marginX']);
	
	    return React.createElement(
	        Flex,
	        _extends({}, props, {
	            flexFlow: 'row wrap',
	            marginX: gutter ? -(gutter / 2) : marginX }),
	        React.Children.map(children, function (child, index) {
	            return child && React.cloneElement(child, {
	                key: index.toString(),
	                gutter: gutter,
	                equal: fit
	            });
	        })
	    );
	};
	
	Grid.prototype.propTypes = {
	    /** Allow cells to equal distribute width */
	    fit: React.PropTypes.bool,
	    /** Space between cells */
	    gutter: React.PropTypes.number
	};
	
	Grid.Cell = Cell;
	
	// Added by sephora-jsx-loader.js
	Grid.prototype.path = 'Grid';
	// Added by sephora-jsx-loader.js
	Grid.prototype.class = 'Grid';
	// Added by sephora-jsx-loader.js
	Grid.prototype.getInitialState = function () {
	    Grid.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	Grid.prototype.render = wrapComponentRender(Grid.prototype.render);
	// Added by sephora-jsx-loader.js
	var GridClass = React.createClass(Grid.prototype);
	// Added by sephora-jsx-loader.js
	GridClass.prototype.classRef = GridClass;
	// Added by sephora-jsx-loader.js
	Object.assign(GridClass, Grid);
	// Added by sephora-jsx-loader.js
	module.exports = GridClass;

/***/ }),
/* 372 */
/*!****************************************************!*\
  !*** ./public_ufe/js/components/Grid/GridCell.jsx ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['GridCell'] = function GridCell() {
	        return GridCellClass;
	    };
	}
	var Base = __webpack_require__(/*! components/Base/Base */ 105);
	
	var GridCell = function GridCell() {};
	
	GridCell.prototype.render = function () {
	    var _props = this.props,
	        _props$width = _props.width,
	        width = _props$width === undefined ? 1 : _props$width,
	        equal = _props.equal,
	        gutter = _props.gutter,
	        props = _objectWithoutProperties(_props, ['width', 'equal', 'gutter']);
	
	    var fit = width === 'fit';
	    var fill = width === 'fill';
	
	    var styles = {
	
	        // Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
	        // http://git.io/vllMD
	        flexBasis: fill ? '0%' : width ? 'auto' : '100%',
	
	        // Fix issue where elements with overflow extend past the cell
	        // https://git.io/vw5oF
	        minWidth: 0,
	        flex: fill ? 1 : equal ? '1 1 0%' : null,
	        paddingLeft: gutter ? gutter / 2 : null,
	        paddingRight: gutter ? gutter / 2 : null
	    };
	
	    return React.createElement(Base, _extends({}, props, {
	        width: fit || fill ? null : width,
	        baseStyle: styles }));
	};
	
	GridCell.prototype.propTypes = {
	    width: React.PropTypes.oneOfType([React.PropTypes.number, React.PropTypes.oneOf(['fill', // Make cell fill the remaining space
	    'fit' // Make cell shrink wrap its content
	    ])])
	};
	
	// Added by sephora-jsx-loader.js
	GridCell.prototype.path = 'Grid';
	// Added by sephora-jsx-loader.js
	GridCell.prototype.class = 'GridCell';
	// Added by sephora-jsx-loader.js
	GridCell.prototype.getInitialState = function () {
	    GridCell.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	GridCell.prototype.render = wrapComponentRender(GridCell.prototype.render);
	// Added by sephora-jsx-loader.js
	var GridCellClass = React.createClass(GridCell.prototype);
	// Added by sephora-jsx-loader.js
	GridCellClass.prototype.classRef = GridCellClass;
	// Added by sephora-jsx-loader.js
	Object.assign(GridCellClass, GridCell);
	// Added by sephora-jsx-loader.js
	module.exports = GridCellClass;

/***/ }),
/* 373 */
/*!**************************************************!*\
  !*** ./public_ufe/js/components/Image/Image.jsx ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['Image'] = function Image() {
	        return ImageClass;
	    };
	}
	var Base = __webpack_require__(/*! components/Base/Base */ 105);
	var urlUtils = __webpack_require__(/*! utils/Url */ 2);
	
	var ReactDOM = void 0;
	var LazyLoader = void 0;
	var Events = void 0;
	
	var Image = function Image() {
	    if (!Sephora.isRootRender && !this.props.disableLazyLoad && Sephora.isLazyLoadEnabled) {
	        this.state = { globalRef: { instance: this, attrs: {} } };
	        Sephora.Util.InflatorComps.Comps.Image.instances.push(this.state.globalRef);
	
	        var self = this;
	        var originalDidMount = this.componentDidMount;
	        this.componentDidMount = function () {
	            var element = ReactDOM.findDOMNode(this);
	            // Set all the current attributes in the global instance
	            // This is commented out for now since its not needed, however if a use case comes
	            // up in future where the attributes need to be preserved between server and client
	            // this could be useful.
	            // let currentAttrs = element.attributes;
	            // for (let i = 0; i < currentAttrs.length; i++) {
	            //     self.state.globalRef.attrs[currentAttrs[i].nodeName] = currentAttrs[i].nodeValue;
	            // }
	            // Update the global instance when an element attribute it updated
	            var originalSetAttribute = element.setAttribute;
	            element.setAttribute = function (attr, value) {
	                self.state.globalRef.attrs[attr] = value;
	                return originalSetAttribute.apply(this, arguments);
	            };
	
	            if (originalDidMount) {
	                originalDidMount.apply(this);
	            }
	            Image.onInit(element);
	        };
	    }
	};
	
	Image.prototype.globalAccess = true;
	if (!Sephora.isRootRender && Sephora.isLazyLoadEnabled) {
	
	    ReactDOM = __webpack_require__(/*! react-dom */ 100);
	    Events = __webpack_require__(/*! utils/framework/Events */ 95);
	    LazyLoader = __webpack_require__(/*! utils/framework/LazyLoad */ 374);
	
	    Sephora.Util.InflatorComps.Comps.Image.instances = [];
	    Image.onInit = function (InstanceElement) {
	        LazyLoader.addLazyImage(InstanceElement);
	    };
	    Events.onLastLoadEvent(window, [Events.DOMContentLoaded], function () {
	        var backEndImages = document.querySelectorAll('[data-ref~=Image]');
	        for (var i = 0; i < backEndImages.length; i++) {
	            Image.onInit(backEndImages[i]);
	        }
	    });
	}
	
	Image.prototype.getDefaultProps = function () {
	    return { disableLazyLoad: false };
	};
	
	function imgOnLoad() {
	    // console.log('React Image Load Triggered');
	    Sephora.Util.Perf.markPageRenderDedup(ReactDOM.findDOMNode(this));
	}
	Image.prototype.render = function () {
	    var _props = this.props,
	        display = _props.display,
	        disableLazyLoad = _props.disableLazyLoad,
	        _props$maxWidth = _props.maxWidth,
	        maxWidth = _props$maxWidth === undefined ? '100%' : _props$maxWidth,
	        src = _props.src,
	        srcSet = _props.srcSet,
	        customSrc = _props.customSrc,
	        isPageRenderImg = _props.isPageRenderImg,
	        props = _objectWithoutProperties(_props, ['display', 'disableLazyLoad', 'maxWidth', 'src', 'srcSet', 'customSrc', 'isPageRenderImg']);
	
	    var shouldDefault = !Sephora.isLazyLoadEnabled || disableLazyLoad;
	
	    /* TODO: Add event that updates lazy load reference if an image has been rerendered.
	     * If we have to we can give images IDs to sync them up across renders.
	     */
	
	    var imgPath = customSrc ? customSrc : urlUtils.getImagePath(src);
	    var srcProps = {};
	
	    if (shouldDefault) {
	        srcProps = {
	            src: imgPath,
	            srcSet: srcSet
	        };
	        // console.log((performance && performance.now()) + ' Image default rendered: ' + imgPath);
	    } else {
	
	        // if (LazyLoader &&
	        // Sephora.Util.InflatorComps.services.loadEvents.InPageCompsCtrlrsApplied &&
	        // !Sephora.Util.InflatorComps.services.loadEvents.LazyLoadComplete) {
	        //     /* If a new image is rendered after lazy load was initialized but
	        //      * before page render is complete then register it for lazy loading.
	        //      * This covers images added by certona for example.
	        //      * This only applys to images being rendered in the browser.
	        //      */
	        //     this.componentDidMount = function() {
	        //         LazyLoader.addLazyImage(ReactDOM.findDOMNode(this));
	        //     };
	        // }
	
	        srcProps = {
	            src: '/img/ufe/placeholder.gif',
	            srcSet: '',
	            'data-llimg': imgPath,
	            'data-llset': srcSet
	        };
	    }
	
	    var imgElement = React.createElement(Base, _extends({}, props, srcProps, {
	        onLoad: isPageRenderImg ? imgOnLoad : null,
	        is: 'img',
	        display: display || 'inline-block',
	        maxWidth: maxWidth }));
	
	    if (isPageRenderImg) {
	        return React.createElement(
	            'span',
	            null,
	            imgElement,
	            React.createElement('script', { dangerouslySetInnerHTML: { __html: "Sephora.Util.Perf.markPageRender();" } })
	        );
	    } else {
	        return imgElement;
	    }
	};
	
	// Added by sephora-jsx-loader.js
	Image.prototype.path = 'Image';
	// Added by sephora-jsx-loader.js
	Image.prototype.class = 'Image';
	// Added by sephora-jsx-loader.js
	Image.prototype.getInitialState = function () {
	    Image.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	Image.prototype.render = wrapComponentRender(Image.prototype.render);
	// Added by sephora-jsx-loader.js
	var ImageClass = React.createClass(Image.prototype);
	// Added by sephora-jsx-loader.js
	ImageClass.prototype.classRef = ImageClass;
	// Added by sephora-jsx-loader.js
	Object.assign(ImageClass, Image);
	// Added by sephora-jsx-loader.js
	module.exports = ImageClass;

/***/ }),
/* 374 */
/*!***************************************************!*\
  !*** ./public_ufe/js/utils/framework/LazyLoad.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var Events = __webpack_require__(/*! utils/framework/Events */ 95);
	var ServiceUtils = __webpack_require__(/*! utils/Services */ 375);
	var ReactDOM = __webpack_require__(/*! react-dom */ 100);
	var Perf = __webpack_require__(/*! utils/framework/Perf */ 99);
	
	var DATA_ATTRIBUTES = {
	    TARGET: 'data-lload',
	    IMAGE: 'data-llimg',
	    SRCSET: 'data-llset'
	};
	
	var TYPES = {
	    COMPONENT: 'component',
	    IMAGE: 'image'
	};
	
	/**
	 * Creates the lazy loader instance.
	 */
	
	var LazyLoaderInstance = void 0;
	var LazyLoader = function LazyLoader() {
	    this.lastScrollPosition = this._getVerticalOffset();
	
	    /**
	     * The lazy loader instance will have a store of targets. A target can be an individual item
	     * like a component or image, but can also be a container marked to have its inner images or
	     * components lazy loaded. On page scroll we check if the targets are in the viewport, and
	     * handle accordingly. currentTargets only stores targets that haven't been loaded.
	     */
	    this.currentTargets = [];
	    /**
	     * Sometimes images can be added to a target after its been loaded. allTargets is used to
	     * maintain an array of all lazyLoad targets in case a lazy Image is added to a target that
	     * has already loaded.
	     */
	    this.targets = [];
	    this.requestAnimationFrameSupported = 'requestAnimationFrame' in window;
	};
	
	LazyLoader.prototype.requestFrame = function (callback) {
	    if (this.requestAnimationFrameSupported) {
	        return requestAnimationFrame(callback);
	    } else {
	        return callback();
	    }
	};
	
	/**
	 * @param  {number} currentPosition - Current vertical offset
	 * @param  {number} lastPosition - Previous vertical offset
	 * @return {boolean} - True if last position is greater
	 */
	LazyLoader.prototype._scrolledUpwards = function (currentPosition, lastPosition) {
	    return lastPosition > currentPosition;
	};
	
	/**
	 * @return {number} - window's current Y offset.
	 */
	LazyLoader.prototype._getVerticalOffset = function () {
	    return window.pageYOffset;
	};
	
	/** Checks whether a given element is in the viewport
	 * @param  {object} element - A DOM Element object
	 * @param {object} elementRect - Optional getBoundingClientRect return oject to use
	 * @return {boolean} - Whether element is in viewport or not
	 */
	
	LazyLoader.prototype._isInViewport = function (element) {
	    var elementRect = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
	
	    var rect = elementRect ? elementRect : element.getBoundingClientRect();
	    var innerHeight = window.innerHeight;
	    return rect.top >= 0 && rect.top <= innerHeight || rect.bottom >= 0 && rect.bottom <= innerHeight;
	};
	
	/**
	 * @param  {number} elementTop - DOM element getBoundingClientRect().top value
	 * @return {number} - Distance to window top
	 */
	LazyLoader.prototype._getDistanceToTop = function (elementTop) {
	    /* We can determine an element's distance from the top by adding the page's Y offset and the
	    element's top distance from the viewport. We can used the cached value for page Y offset
	    stored in this.lastScrollPosition. */
	    var location = this.lastScrollPosition + elementTop;
	    return location >= 0 ? location : 0;
	};
	
	/**
	 * @param  {obj} child - DOM element
	 * @param  {string} attribute - data-attribute used to find the parent element
	 * @param  {string} value - value of said data-attribute
	 */
	LazyLoader.prototype._findParentByAttribute = function (child, attribute, value) {
	    return new Promise(function (resolve, reject) {
	        var parent = child.parentNode;
	        while (parent && parent !== document.body) {
	            var parentLoadAttribute = parent.getAttribute(attribute);
	
	            if (parentLoadAttribute) {
	                if (parentLoadAttribute === 'false') {
	                    reject();
	                } else if (parentLoadAttribute === value) {
	                    resolve(parent);
	                }
	            }
	
	            parent = parent.parentNode;
	        }
	        resolve(null);
	    });
	};
	
	LazyLoader.prototype._handleScroll = function () {
	    var _this = this;
	
	    var currentTargets = this.currentTargets;
	    var targetsLength = currentTargets.length;
	
	    if (targetsLength) {
	        var i = void 0;
	        var target = void 0;
	
	        this.requestFrame(function () {
	            var currentPosition = _this._getVerticalOffset();
	
	            /**
	             * We loop over the target store in different directions depending whether the user
	             * scrolled upwards or downwards. The reason for this is that since targets are sorted
	             * by their proximity to the top, if the first-checked target is not in the viewport
	             * then we don't really need to check for the following targets. In this case we
	             * break the loop.
	             *
	             * However, in some scenarios an element can have an offsetTop property of 0, so we
	             * don't break the loop until the next element with a positive offseTop property
	             * is confirmed as either in-viewport or out-of-viewport.
	             */
	
	            if (!_this._scrolledUpwards(currentPosition, _this.lastScrollPosition)) {
	
	                // Forward loop
	                for (i = 0; i < targetsLength; i += 1) {
	                    target = currentTargets[i];
	                    if (_this._isInViewport(target.container)) {
	                        target.loadItems();
	                    } else {
	                        if (target.container.offsetTop !== 0) {
	                            break;
	                        }
	                    }
	                }
	            } else {
	                // Backward loop
	                for (i = targetsLength - 1; i >= 0; i -= 1) {
	                    target = currentTargets[i];
	                    if (_this._isInViewport(target.container)) {
	                        target.loadItems();
	                    } else {
	                        if (target.container.offsetTop !== 0) {
	                            break;
	                        }
	                    }
	                }
	            }
	
	            // Update the last scroll position
	            _this.lastScrollPosition = currentPosition;
	
	            /**
	             * Targets that have been loaded are removed from the target store to avoid further
	             * unnecessary checks.
	             */
	            _this.currentTargets = currentTargets.filter(function (item) {
	                return item.loaded === false;
	            });
	        });
	    }
	
	    return;
	};
	
	/**
	 * @param  {object} lazyImage - DOM image object
	 * @param  {string} imagePath - image's source url
	 * @param  {string} srcsetPath - image's srcset
	 */
	LazyLoader.prototype._loadImage = function (lazyImage, imagePath, srcsetPath) {
	    /* We're using setAttribute explicitly instead of lazyImage.src as it looks like this is
	    a probable cause to why some images in iOS Safari fail to set the attribute correctly,
	    which results in no image shown despite being lazy load successfully. */
	    // console.log(performance.now() + ' Lazy Image Loaded: ', lazyImage);
	    if (imagePath) {
	        lazyImage.setAttribute('src', imagePath);
	    }
	    if (srcsetPath) {
	        lazyImage.setAttribute('srcset', srcsetPath);
	    }
	};
	
	/** Registers the lazy-loaded item to its associated target if its target has been stored already,
	 * or else adds a new target (with its lazy-loaded item) to the target store.
	 * @param  {object} itemTarget - DOM element to lazy load
	 * @param  {string} type - Type of element to lazy load (image or component)
	 * @param  {function} callback - Callback to execute when item is ready to load
	 */
	LazyLoader.prototype._registerItem = function (itemTarget, type, callback) {
	    var _this2 = this;
	
	    var targets = this.targets;
	    var currentTargets = this.currentTargets;
	    var i = 0;
	    var target = void 0;
	
	    // If targets have already been registered, but this item has not been added to one of them.
	    while (i < targets.length && target === undefined) {
	
	        /** If the item's target is already in the target store, add it to said
	         * target's item store.
	         */
	        if (targets[i].container === itemTarget) {
	            target = targets[i];
	            target.items.push(callback);
	
	            if (target.loaded) {
	                callback();
	            }
	        }
	
	        i++;
	    }
	
	    /**
	     * If the item was not added per above, then the item's target has not been stored yet.
	     * Add the target and its associated item.
	     */
	    if (target === undefined) {
	        target = {
	            container: itemTarget,
	            items: [callback],
	            type: type,
	            loaded: false,
	            loadItems: function loadItems() {
	                // Resolve all of the target's lazy loaded items
	                for (var x = 0, max = this.items.length; x < max; x += 1) {
	                    this.items[x]();
	                }
	
	                // Mark as loaded
	                this.loaded = true;
	
	                // Visualize what is getting loaded, for development purposes only
	                // this.container.style.border = '3px solid red';
	                Perf.report(['Lazy Target Loaded', this.container], false);
	            }
	        };
	
	        targets.push(target);
	
	        this.requestFrame(function () {
	            // TODO: Calculate location here and cache it so that it does not need to be calculated
	            // on each sort once we disable lazy loading of async components
	            // let itemTargetRect = itemTarget.getBoundingClientRect();
	            // target.loaded = this._isInViewport(itemTarget, itemTargetRect);
	            // target.location = this._getDistanceToTop(itemTargetRect.top);
	
	            target.loaded = _this2._isInViewport(itemTarget);
	
	            if (!target.loaded) {
	                currentTargets.push(target);
	
	                // Sort targets by their proximity to the top.
	                _this2.sortCurrentTargets();
	            } else {
	                // console.log('Lazy Target immediate load.', itemTarget);
	                target.loadItems();
	            }
	        });
	    }
	};
	
	LazyLoader.prototype.sortCurrentTargets = function () {
	    var _this3 = this;
	
	    if (this.currentTargets.length && this.currentTargets.length > 1) {
	        this.currentTargets.sort(function (a, b) {
	            // const positionA = a.location;
	            // const positionB = b.location;
	
	            var positionA = _this3._getDistanceToTop(a.container.getBoundingClientRect().top);
	            var positionB = _this3._getDistanceToTop(b.container.getBoundingClientRect().top);
	
	            if (positionA > positionB) {
	                return 1;
	            } else if (positionA < positionB) {
	                return -1;
	            } else {
	                return 0;
	            }
	        });
	    }
	};
	
	/**
	 * @param  {object} lazyImage - DOM element for image
	 */
	LazyLoader.prototype.addLazyImage = function (lazyImage) {
	    var _this4 = this;
	
	    var imagePath = lazyImage.getAttribute(DATA_ATTRIBUTES.IMAGE);
	    var srcsetPath = lazyImage.getAttribute(DATA_ATTRIBUTES.SRCSET);
	    var callback = this._loadImage.bind(this, lazyImage, imagePath, srcsetPath);
	
	    this._findParentByAttribute(lazyImage, DATA_ATTRIBUTES.TARGET, 'img').then(function (parent) {
	        var lazyTarget = parent || lazyImage;
	        _this4._registerItem(lazyTarget, TYPES.IMAGE, callback);
	    }, function () {
	        return _this4._loadImage(lazyImage, imagePath, srcsetPath);
	    });
	};
	
	/**
	 * @param  {object} lazyComponent - Component instance
	 * @param  {function} callback - Callback to execute when lazy loading
	 */
	LazyLoader.prototype.addLazyComponent = function (component, callback) {
	    var componentElement = ReactDOM.findDOMNode(component);
	
	    if (componentElement) {
	        this._registerItem(componentElement, TYPES.COMPONENT, callback);
	    }
	};
	
	LazyLoader.prototype.start = function () {
	    // Fire lazy load check once initially
	    Perf.report('LazyLoading Start');
	
	    window.addEventListener(Events.DebouncedScroll, this._handleScroll.bind(this));
	
	    /** Disable lazy loading after these load events have fired.
	     * It is assumed that any new images added to the page past this point are a
	     * response to user actions and should therefore be loaded immediately
	     */
	    var shouldServiceRun = ServiceUtils.shouldServiceRun;
	    var dependencies = [Events.UserInfoCtrlrsApplied];
	
	    if (shouldServiceRun.certona()) {
	        dependencies.push(Events.CertonaCtrlrsApplied);
	    }
	
	    if (shouldServiceRun.testTarget()) {
	        dependencies.push(Events.TestTargetCtrlrsApplied);
	    }
	
	    // Trigger lazy load complete
	    Events.onLastLoadEvent(window, dependencies, this._triggerLoadComplete.bind(this));
	
	    // Load images if PostLoad fires and they have not been loaded yet
	    Events.onLastLoadEvent(window, [Events.PostLoad], this._loadAllImages.bind(this));
	};
	
	LazyLoader.prototype._triggerLoadComplete = function () {
	    Perf.report('LazyLoading Complete');
	    Sephora.isLazyLoadEnabled = false;
	    Sephora.Util.InflatorComps.services.loadEvents[Events.LazyLoadComplete] = true;
	    window.dispatchEvent(new CustomEvent(Events.LazyLoadComplete));
	};
	
	LazyLoader.prototype._loadAllImages = function () {
	    this.currentTargets.forEach(function (target) {
	        if (!target.loaded && target.type === TYPES.IMAGE) {
	            target.loadItems();
	        }
	    });
	};
	
	LazyLoader.prototype.DATA_ATTRIBUTES = DATA_ATTRIBUTES;
	
	LazyLoaderInstance = new LazyLoader();
	module.exports = LazyLoaderInstance;

/***/ }),
/* 375 */
/*!*****************************************!*\
  !*** ./public_ufe/js/utils/Services.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var Location = __webpack_require__(/*! utils/Location.js */ 3);
	
	var pageHasCertona = function pageHasCertona() {
	    return Location.isBasketPage() || Location.isHomePage() || Location.isProductPage();
	};
	
	var shouldServiceRun = {
	    certona: function certona() {
	        if (!Sephora.isLegacyMode && pageHasCertona() && Sephora.Certona && Sephora.Certona.isEnabled === 'true') {
	            return true;
	        } else {
	            return false;
	        }
	    },
	
	    testTarget: function testTarget() {
	        return Sephora.isThirdPartySite ? false : true;
	    }
	};
	
	var POST_LOAD_TIMEOUT = 20000;
	
	module.exports = {
	    shouldServiceRun: shouldServiceRun,
	    POST_LOAD_TIMEOUT: POST_LOAD_TIMEOUT
	};

/***/ }),
/* 376 */
/*!************************************************!*\
  !*** ./public_ufe/js/components/Text/Text.jsx ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['Text'] = function Text() {
	        return TextClass;
	    };
	}
	var Base = __webpack_require__(/*! components/Base/Base */ 105);
	
	var Text = function Text() {};
	
	Text.prototype.render = function () {
	    var _props = this.props,
	        _props$is = _props.is,
	        is = _props$is === undefined ? 'span' : _props$is,
	        truncate = _props.truncate,
	        props = _objectWithoutProperties(_props, ['is', 'truncate']);
	
	    return React.createElement(Base, _extends({}, props, {
	        is: is,
	        baseStyle: [{ wordWrap: 'break-word' }, truncate && {
	            maxWidth: '100%',
	            overflow: 'hidden',
	            textOverflow: 'ellipsis',
	            whiteSpace: 'nowrap'
	        }] }));
	};
	
	// Added by sephora-jsx-loader.js
	Text.prototype.path = 'Text';
	// Added by sephora-jsx-loader.js
	Text.prototype.class = 'Text';
	// Added by sephora-jsx-loader.js
	Text.prototype.getInitialState = function () {
	    Text.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	Text.prototype.render = wrapComponentRender(Text.prototype.render);
	// Added by sephora-jsx-loader.js
	var TextClass = React.createClass(Text.prototype);
	// Added by sephora-jsx-loader.js
	TextClass.prototype.classRef = TextClass;
	// Added by sephora-jsx-loader.js
	Object.assign(TextClass, Text);
	// Added by sephora-jsx-loader.js
	module.exports = TextClass;

/***/ }),
/* 377 */
/*!******************************************************!*\
  !*** ./public_ufe/js/components/Icon/IconBasket.jsx ***!
  \******************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['IconBasket'] = function IconBasket() {
	        return IconBasketClass;
	    };
	}
	/* eslint-disable max-len */
	var Icon = __webpack_require__(/*! ./Icon */ 378);
	
	var IconBasket = function IconBasket() {};
	
	IconBasket.prototype.render = function () {
	    return React.createElement(
	        Icon,
	        _extends({}, this.props, {
	            viewBox: '0 0 24 22',
	            width: '1.125em' }),
	        React.createElement('path', { d: 'M23 7.66h-2.84a1 1 0 0 0-.08-.12l-7.15-7a1 1 0 0 0-.15-.25 1.17 1.17 0 0 0-1.55 0 1 1 0 0 0-.15.22l-7.16 7a1 1 0 0 0-.09.13H1a1 1 0 1 0 0 2h22a1 1 0 1 0 0-1.98zM12 2.5l5.25 5.16H6.75zM18.78 15.85H5.22a1 1 0 1 0 0 2h13.56a1 1 0 1 0 0-2zM20.87 11.76H3.13a1 1 0 1 0 0 2h17.74a1 1 0 1 0 0-2zM16.7 20H7.3a1 1 0 1 0 0 2h9.4a1 1 0 1 0 0-2z' })
	    );
	};
	
	// Added by sephora-jsx-loader.js
	IconBasket.prototype.path = 'Icon';
	// Added by sephora-jsx-loader.js
	IconBasket.prototype.class = 'IconBasket';
	// Added by sephora-jsx-loader.js
	IconBasket.prototype.getInitialState = function () {
	    IconBasket.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	IconBasket.prototype.render = wrapComponentRender(IconBasket.prototype.render);
	// Added by sephora-jsx-loader.js
	var IconBasketClass = React.createClass(IconBasket.prototype);
	// Added by sephora-jsx-loader.js
	IconBasketClass.prototype.classRef = IconBasketClass;
	// Added by sephora-jsx-loader.js
	Object.assign(IconBasketClass, IconBasket);
	// Added by sephora-jsx-loader.js
	module.exports = IconBasketClass;

/***/ }),
/* 378 */
/*!************************************************!*\
  !*** ./public_ufe/js/components/Icon/Icon.jsx ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['Icon'] = function Icon() {
	        return IconClass;
	    };
	}
	var Base = __webpack_require__(/*! components/Base/Base */ 105);
	
	var Icon = function Icon() {};
	
	Icon.prototype.render = function () {
	    var _props = this.props,
	        _props$width = _props.width,
	        width = _props$width === undefined ? '1em' : _props$width,
	        _props$height = _props.height,
	        height = _props$height === undefined ? '1em' : _props$height,
	        props = _objectWithoutProperties(_props, ['width', 'height']);
	
	    return React.createElement(Base, _extends({}, props, {
	        is: 'svg',
	        baseStyle: {
	            position: 'relative',
	            display: 'inline-block',
	            verticalAlign: 'text-bottom',
	            fontSize: 'inherit',
	            fill: 'currentColor',
	            width: width,
	            height: height
	        } }));
	};
	
	// Added by sephora-jsx-loader.js
	Icon.prototype.path = 'Icon';
	// Added by sephora-jsx-loader.js
	Icon.prototype.class = 'Icon';
	// Added by sephora-jsx-loader.js
	Icon.prototype.getInitialState = function () {
	    Icon.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	Icon.prototype.render = wrapComponentRender(Icon.prototype.render);
	// Added by sephora-jsx-loader.js
	var IconClass = React.createClass(Icon.prototype);
	// Added by sephora-jsx-loader.js
	IconClass.prototype.classRef = IconClass;
	// Added by sephora-jsx-loader.js
	Object.assign(IconClass, Icon);
	// Added by sephora-jsx-loader.js
	module.exports = IconClass;

/***/ }),
/* 379 */
/*!********************************************************!*\
  !*** ./public_ufe/js/components/Dropdown/Dropdown.jsx ***!
  \********************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['Dropdown'] = function Dropdown() {
	        return DropdownClass;
	    };
	}
	var Base = __webpack_require__(/*! components/Base/Base */ 105);
	
	/**
	 * Position relative container for positioning DropdownMenu component
	 */
	var Dropdown = function Dropdown() {
	    this.state = {
	        isActive: false
	    };
	};
	
	var Menu = __webpack_require__(/*! ./DropdownMenu */ 380);
	var Trigger = __webpack_require__(/*! ./DropdownTrigger */ 381);
	
	var ReactDOM = void 0;
	
	if (!Sephora.isRootRender) {
	    ReactDOM = __webpack_require__(/*! react-dom */ 100);
	}
	
	Dropdown.prototype.render = function () {
	    var _this = this;
	
	    var _props = this.props,
	        isHover = _props.isHover,
	        isStatic = _props.isStatic,
	        onTrigger = _props.onTrigger,
	        syncState = _props.syncState,
	        hasSubmenu = _props.hasSubmenu,
	        delayedHover = _props.delayedHover,
	        props = _objectWithoutProperties(_props, ['isHover', 'isStatic', 'onTrigger', 'syncState', 'hasSubmenu', 'delayedHover']);
	
	    /* onTouchStart is used exclusively for tablets in dropdown. The reason is that in iOS safari
	    element.focus() can only be set programatically when inside an actual touch event. This is
	    needed so that the onBlur event can close it when clicked outside. */
	
	    return React.createElement(
	        Base,
	        _extends({}, props, {
	            baseStyle: {
	                position: isStatic ? 'static' : 'relative',
	                outline: 'none'
	            },
	            tabIndex: !this.isHover ? '0' : null,
	            onTouchStart: !this.isHover && Sephora.isTouch ? this.focusElement : null,
	            onBlur: !this.isHover ? function (e) {
	                if (ReactDOM !== undefined) {
	                    var element = ReactDOM.findDOMNode(_this);
	                    var menu = element.querySelector('[data-comp="DropdownMenu"]');
	
	                    /* Given to differences in how browsers interpret event dispatchers and
	                    targets, we must check what current activeElement per focusout is, or
	                    event.explicitOriginalTarget in the case of FireFox. We close upon blur
	                    if said element is not within the dropdown's menu.
	                    */
	
	                    /* TODO 17.7: Find a more sensible way to handle this differences and address
	                    why trigger is sometimes called twice in the case of Chrome, and handle how the
	                    handler addressed bubbling/propagation. */
	
	                    if (!menu.contains(e.relatedTarget || document.activeElement || e.explicitOriginalTarget)) {
	                        _this.triggerDropdown(e, false);
	                    }
	                }
	            } : null }),
	        React.Children.map(this.props.children, function (child, index) {
	            return child && React.cloneElement(child, {
	                key: index,
	                triggerDropdown: _this.triggerDropdown,
	                open: _this.state.isActive || syncState,
	                isHover: _this.isHover
	            });
	        })
	    );
	};
	
	Dropdown.prototype.propTypes = {
	    /** Do not position dropdown menu relative to this element */
	    isStatic: React.PropTypes.bool
	};
	
	Dropdown.Menu = Menu;
	Dropdown.Trigger = Trigger;
	
	// Added by sephora-jsx-loader.js
	Dropdown.prototype.path = 'Dropdown';
	// Added by sephora-jsx-loader.js
	Object.assign(Dropdown.prototype, __webpack_require__(/*! ./Dropdown.c.js */ 382));
	var originalDidMount = Dropdown.prototype.componentDidMount;
	Dropdown.prototype.componentDidMount = function () {
	    //console.log('Non-root componentDidMount Fired: Dropdown');
	    if (originalDidMount) originalDidMount.apply(this);
	    if (Dropdown.prototype.ctrlr) Dropdown.prototype.ctrlr.apply(this, this.props.ctrlrArgs);
	};
	//console.log('Applied non-root componentDidMount: Dropdown');
	// Added by sephora-jsx-loader.js
	Dropdown.prototype.hasCtrlr = 'true';
	// Added by sephora-jsx-loader.js
	Dropdown.prototype.class = 'Dropdown';
	// Added by sephora-jsx-loader.js
	Dropdown.prototype.getInitialState = function () {
	    Dropdown.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	Dropdown.prototype.render = wrapComponentRender(Dropdown.prototype.render);
	// Added by sephora-jsx-loader.js
	var DropdownClass = React.createClass(Dropdown.prototype);
	// Added by sephora-jsx-loader.js
	DropdownClass.prototype.classRef = DropdownClass;
	// Added by sephora-jsx-loader.js
	Object.assign(DropdownClass, Dropdown);
	// Added by sephora-jsx-loader.js
	module.exports = DropdownClass;

/***/ }),
/* 380 */
/*!************************************************************!*\
  !*** ./public_ufe/js/components/Dropdown/DropdownMenu.jsx ***!
  \************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['DropdownMenu'] = function DropdownMenu() {
	        return DropdownMenuClass;
	    };
	}
	
	var _require = __webpack_require__(/*! style */ 106),
	    colors = _require.colors,
	    dropdown = _require.dropdown,
	    zIndex = _require.zIndex;
	
	var Box = __webpack_require__(/*! components/Box/Box */ 143);
	
	/**
	 * Absolutely positioned Menu component for use within Dropdown component
	 */
	
	var DropdownMenu = function DropdownMenu() {};
	
	DropdownMenu.prototype.render = function () {
	    var arrowSize = dropdown.ARROW_SIZE;
	    var dropdownBg = dropdown.BG;
	
	    var _props = this.props,
	        open = _props.open,
	        right = _props.right,
	        isCentered = _props.isCentered,
	        isHover = _props.isHover,
	        width = _props.width,
	        minWidth = _props.minWidth,
	        withArrow = _props.withArrow,
	        triggerDropdown = _props.triggerDropdown,
	        _props$arrowPosition = _props.arrowPosition,
	        arrowPosition = _props$arrowPosition === undefined ? arrowSize * 2 : _props$arrowPosition,
	        props = _objectWithoutProperties(_props, ['open', 'right', 'isCentered', 'isHover', 'width', 'minWidth', 'withArrow', 'triggerDropdown', 'arrowPosition']);
	
	    var numericWidth = typeof width === 'number';
	
	    var styles = {
	        root: {
	            position: 'absolute',
	            left: right ? null : 0,
	            right: right ? 0 : null,
	            top: '100%',
	            width: width,
	            minWidth: minWidth
	        },
	        rootCentered: {
	            left: '50%',
	            right: 'auto',
	            transform: !numericWidth ? 'translateX(-50%)' : null,
	            marginLeft: numericWidth ? -(width / 2) : null
	        },
	        content: {
	            position: 'relative',
	            boxShadow: dropdown.SHADOW,
	            color: colors.black,
	            backgroundColor: dropdownBg,
	            display: 'flex',
	            flexDirection: 'column'
	        },
	        contentWithArrow: {
	            paddingTop: arrowSize,
	            '&:before, &:after': {
	                content: '""',
	                position: 'absolute',
	                top: 0,
	                left: isCentered ? '50%' : !right ? arrowPosition : null,
	                right: right ? arrowPosition : null,
	                backgroundColor: dropdownBg
	            },
	            '&:before': {
	                boxShadow: dropdown.SHADOW,
	                width: arrowSize,
	                height: arrowSize,
	                transform: 'translate(-' + arrowSize / 2 + 'px,-' + arrowSize / 2 + 'px) rotate(45deg)'
	            },
	            '&:after': {
	                width: arrowSize * 2,
	                height: arrowSize,
	                marginLeft: -arrowSize
	            }
	        }
	    };
	
	    return React.createElement(
	        Box,
	        {
	            'data-lload': this.props.lazyLoad,
	            style: {
	                display: open ? 'block' : 'none',
	                zIndex: open ? zIndex.DROPDOWN : null
	            },
	            _css: [styles.root, isCentered && styles.rootCentered] },
	        React.createElement(Box, _extends({}, props, {
	            baseStyle: [styles.content, withArrow && styles.contentWithArrow] }))
	    );
	};
	
	DropdownMenu.prototype.propTypes = {
	    /** Anchors menu to the right */
	    right: React.PropTypes.bool,
	    /** Centers menu */
	    isCentered: React.PropTypes.bool,
	    /** Change menu width */
	    width: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number]),
	    /** Adds an arrow  */
	    withArrow: React.PropTypes.bool,
	    /** Optional arrow position override  */
	    arrowPosition: React.PropTypes.number
	};
	
	DropdownMenu.prototype.getDefaultProps = function () {
	    return {
	        width: '100%'
	    };
	};
	
	// Added by sephora-jsx-loader.js
	DropdownMenu.prototype.path = 'Dropdown';
	// Added by sephora-jsx-loader.js
	DropdownMenu.prototype.class = 'DropdownMenu';
	// Added by sephora-jsx-loader.js
	DropdownMenu.prototype.getInitialState = function () {
	    DropdownMenu.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	DropdownMenu.prototype.render = wrapComponentRender(DropdownMenu.prototype.render);
	// Added by sephora-jsx-loader.js
	var DropdownMenuClass = React.createClass(DropdownMenu.prototype);
	// Added by sephora-jsx-loader.js
	DropdownMenuClass.prototype.classRef = DropdownMenuClass;
	// Added by sephora-jsx-loader.js
	Object.assign(DropdownMenuClass, DropdownMenu);
	// Added by sephora-jsx-loader.js
	module.exports = DropdownMenuClass;

/***/ }),
/* 381 */
/*!***************************************************************!*\
  !*** ./public_ufe/js/components/Dropdown/DropdownTrigger.jsx ***!
  \***************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['DropdownTrigger'] = function DropdownTrigger() {
	        return DropdownTriggerClass;
	    };
	}
	var Base = __webpack_require__(/*! components/Base/Base */ 105);
	
	var DropdownTrigger = function DropdownTrigger() {};
	
	DropdownTrigger.prototype.render = function () {
	    var _props = this.props,
	        open = _props.open,
	        isHover = _props.isHover,
	        triggerDropdown = _props.triggerDropdown,
	        props = _objectWithoutProperties(_props, ['open', 'isHover', 'triggerDropdown']);
	
	    return React.createElement(Base, props);
	};
	
	// Added by sephora-jsx-loader.js
	DropdownTrigger.prototype.path = 'Dropdown';
	// Added by sephora-jsx-loader.js
	DropdownTrigger.prototype.class = 'DropdownTrigger';
	// Added by sephora-jsx-loader.js
	DropdownTrigger.prototype.getInitialState = function () {
	    DropdownTrigger.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	DropdownTrigger.prototype.render = wrapComponentRender(DropdownTrigger.prototype.render);
	// Added by sephora-jsx-loader.js
	var DropdownTriggerClass = React.createClass(DropdownTrigger.prototype);
	// Added by sephora-jsx-loader.js
	DropdownTriggerClass.prototype.classRef = DropdownTriggerClass;
	// Added by sephora-jsx-loader.js
	Object.assign(DropdownTriggerClass, DropdownTrigger);
	// Added by sephora-jsx-loader.js
	module.exports = DropdownTriggerClass;

/***/ }),
/* 382 */
/*!*********************************************************!*\
  !*** ./public_ufe/js/components/Dropdown/Dropdown.c.js ***!
  \*********************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	var Dropdown = function Dropdown() {};
	
	// Added by sephora-jsx-loader.js
	Dropdown.prototype.shouldComponentUpdate = wrapComponentRenderModule.shouldComponentUpdate;
	var ReactDOM = __webpack_require__(/*! react-dom */ 100);
	var DELAY = 200;
	
	Dropdown.prototype.ctrlr = function () {
	    var _this = this;
	
	    var element = ReactDOM.findDOMNode(this);
	    this.isHover = function () {
	        var value = void 0;
	
	        if (Sephora.isTouch) {
	            value = false;
	        } else if (_this.props.isHover) {
	            value = true;
	        } else {
	            value = false;
	        }
	
	        return value;
	    }();
	
	    if (this.isHover) {
	        var delayedTrigger = null;
	
	        element.addEventListener('mouseenter', this.props.delayedHover ? function (e) {
	            delayedTrigger = setTimeout(_this.triggerDropdown.bind(_this, e, true), DELAY);
	        } : this.triggerDropdown);
	
	        element.addEventListener('mouseleave', this.props.delayedHover ? function (e) {
	            if (delayedTrigger !== null) {
	                clearTimeout(delayedTrigger);
	                delayedTrigger = null;
	            } else {
	                return;
	            }
	
	            _this.triggerDropdown(e, false);
	        } : this.triggerDropdown);
	    } else {
	        var handler = this.props.hasSubmenu ? function (e) {
	            return _this.triggerDropdown(e, true);
	        } : this.triggerDropdown;
	        element.addEventListener('click', handler);
	    }
	};
	
	Dropdown.prototype.componentWillReceiveProps = function (nextProps) {
	    /* syncState prop should be added only when you need to share active state
	     * between the dropdown and its enclosing component.
	     */
	
	    var undefinedProp = typeof nextProps === 'undefined' || typeof nextProps.syncState === 'undefined';
	    var nullProp = nextProps === null || nextProps.syncState === null;
	
	    if (undefinedProp || nullProp) {
	        return null;
	    }
	
	    if (nextProps.syncState !== this.state.isActive) {
	        this.setState({
	            isActive: nextProps.syncState
	        });
	    }
	};
	
	Dropdown.prototype.focusElement = function () {
	    var dropdown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
	
	    if (!this.state.isActive) {
	        var element = dropdown ? dropdown : ReactDOM.findDOMNode(this);
	        element.focus();
	    }
	};
	
	Dropdown.prototype.triggerDropdown = function (e) {
	    var bool = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
	
	    var element = ReactDOM.findDOMNode(this);
	
	    if (!this.isHover && !Sephora.isTouch) {
	
	        /* For click dropdowns we must set focus on the dropdown element when it is opened
	        * because we use the onBlur event to close when clicked outside or on another element.
	        *
	        * We exclude callbacks from tablets since those get focused by onTouchStart.
	        */
	        this.focusElement(element);
	    }
	
	    if (this.state.isActive && element.contains(e.relatedTarget)) {
	        // Don't trigger if element is inside the dropdown and menu is open
	        return;
	    }
	
	    if (bool !== this.state.isActive) {
	        var value = bool ? bool : !this.state.isActive;
	
	        /* A dropdown closed by click will not loose its focus automatically in IE, so we must
	        explicitly remove focus when closing the dropdown.
	        TODO 17.7: Remove this as part of Dropdown improvements
	        */
	        if (value === false && element.contains(document.activeElement)) {
	            document.activeElement.blur();
	        }
	
	        this.setState({
	            isActive: value
	        }, this.props.onTrigger ? this.props.onTrigger(e) : null);
	    } else {
	        if (e) {
	            e.stopPropagation();
	        }
	
	        return;
	    }
	};
	
	// Added by sephora-jsx-loader.js
	module.exports = Dropdown.prototype;

/***/ }),
/* 383 */
/*!*******************************************************************************!*\
  !*** ./public_ufe/js/components/InlineBasket/BasketDesktop/BasketDesktop.jsx ***!
  \*******************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['BasketDesktop'] = function BasketDesktop() {
	        return BasketDesktopClass;
	    };
	}
	
	var _require = __webpack_require__(/*! style */ 106),
	    space = _require.space;
	
	var _require2 = __webpack_require__(/*! components/display */ 369),
	    Box = _require2.Box,
	    Grid = _require2.Grid,
	    Text = _require2.Text;
	
	var skuUtils = __webpack_require__(/*! utils/Sku */ 185);
	var Link = __webpack_require__(/*! components/Link/Link */ 384);
	var ButtonPrimary = __webpack_require__(/*! components/Button/ButtonPrimary */ 386);
	var ButtonRed = __webpack_require__(/*! components/Button/ButtonRed */ 388);
	var Divider = __webpack_require__(/*! components/Divider/Divider */ 389);
	var CustomScroll = __webpack_require__(/*! components/CustomScroll/CustomScroll */ 390);
	var BasketMsg = __webpack_require__(/*! ../BasketMsg/BasketMsg */ 391);
	var BasketItem = __webpack_require__(/*! ./BasketItem */ 392);
	
	var BasketDesktop = function BasketDesktop() {
	    return null;
	};
	
	BasketDesktop.prototype.render = function () {
	    var _props = this.props,
	        basket = _props.basket,
	        isLoggedIn = _props.isLoggedIn,
	        signInHandler = _props.signInHandler,
	        width = _props.width,
	        justAddedProducts = _props.justAddedProducts,
	        onCheckoutClick = _props.onCheckoutClick,
	        onBasketClick = _props.onBasketClick;
	    var _basket$basketItemWar = basket.basketItemWarnings,
	        basketItemWarnings = _basket$basketItemWar === undefined ? [] : _basket$basketItemWar,
	        _basket$error = basket.error,
	        error = _basket$error === undefined ? {} : _basket$error;
	    var _error$errorMessages = error.errorMessages,
	        errorMessages = _error$errorMessages === undefined ? [] : _error$errorMessages;
	
	    var scrollCount = 4;
	    var itemWidth = width - space[5] * 2;
	
	    return React.createElement(
	        Box,
	        {
	            padding: space[5],
	            width: width },
	        errorMessages.length ? React.createElement(
	            Text,
	            {
	                color: 'error',
	                'data-at': Sephora.debug.dataAt('inline_basket_error_message') },
	            errorMessages[0]
	        ) : React.createElement(
	            'div',
	            null,
	            basketItemWarnings && basketItemWarnings.map(function (basketItemWarning) {
	                return React.createElement(
	                    Text,
	                    {
	                        is: 'p',
	                        color: 'error',
	                        'data-at': Sephora.debug.dataAt('inline_basket_item_warning') },
	                    basketItemWarning
	                );
	            }),
	            React.createElement(AddedCountItem, { addedCount: justAddedProducts,
	                itemCount: basket.itemCount }),
	            basket.itemCount > 0 ? React.createElement(
	                Box,
	                {
	                    marginY: space[3],
	                    marginRight: basket.itemCount > scrollCount ? -space[5] : null },
	                React.createElement(Divider, null),
	                React.createElement(
	                    CustomScroll,
	                    {
	                        _css: basket.itemCount > scrollCount ? {
	                            maxHeight: 276,
	                            paddingRight: space[5]
	                        } : {} },
	                    basket.items && basket.items.map(function (item, index) {
	                        return React.createElement(BasketItem, {
	                            key: item.sku ? item.sku.productId : null,
	                            itemWidth: itemWidth,
	                            item: item,
	                            index: index });
	                    })
	                ),
	                React.createElement(Divider, null)
	            ) : React.createElement(Divider, { marginTop: space[3] }),
	            !isLoggedIn && basket.itemCount === 0 && React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    Grid,
	                    {
	                        alignItems: 'center',
	                        paddingY: space[3] },
	                    React.createElement(
	                        Grid.Cell,
	                        { width: 'fill' },
	                        'Sign in to see items you may have added previously.'
	                    ),
	                    React.createElement(
	                        Grid.Cell,
	                        { width: 'fit', marginLeft: space[3] },
	                        React.createElement(
	                            ButtonPrimary,
	                            { onClick: signInHandler },
	                            'Sign In'
	                        )
	                    )
	                ),
	                React.createElement(Divider, null)
	            ),
	            basket.itemCount > 0 && React.createElement(
	                Box,
	                { marginBottom: space[3] },
	                React.createElement(
	                    Box,
	                    {
	                        textAlign: 'right',
	                        'data-at': Sephora.debug.dataAt('inline_basket_total_message') },
	                    'Basket total',
	                    ' ',
	                    '(',
	                    basket.itemCount,
	                    ' item',
	                    basket.itemCount > 1 && 's',
	                    '):',
	                    ' ',
	                    React.createElement(
	                        Text,
	                        { fontWeight: 700 },
	                        basket.subtotal
	                    ),
	                    React.createElement(
	                        Box,
	                        { marginY: space[3] },
	                        React.createElement(
	                            ButtonRed,
	                            {
	                                onClick: onCheckoutClick },
	                            'Checkout'
	                        )
	                    )
	                ),
	                React.createElement(Divider, { color: 'black' })
	            ),
	            React.createElement(
	                Box,
	                {
	                    marginTop: space[3],
	                    'data-at': Sephora.debug.dataAt('inline_basket_promo_message') },
	                'See samples, rewards and promotions in',
	                ' ',
	                React.createElement(
	                    Link,
	                    {
	                        primary: true,
	                        onClick: onBasketClick },
	                    'basket'
	                ),
	                '.'
	            ),
	            basket.itemCount > 0 && React.createElement(
	                'div',
	                null,
	                React.createElement(Divider, { marginY: space[3] }),
	                React.createElement(BasketMsg, { basket: basket })
	            )
	        )
	    );
	};
	
	var AddedCountItem = function AddedCountItem(_ref) {
	    var addedCount = _ref.addedCount,
	        itemCount = _ref.itemCount;
	    return React.createElement(
	        Box,
	        { fontSize: 'h2' },
	        itemCount > 0 ? React.createElement(
	            'span',
	            { 'data-at': Sephora.debug.dataAt('inline_basket_title') },
	            addedCount ? React.createElement(
	                'span',
	                null,
	                addedCount,
	                ' item',
	                addedCount > 1 && 's',
	                ' added to basket'
	            ) : React.createElement(
	                'span',
	                null,
	                itemCount,
	                ' item',
	                itemCount > 1 && 's',
	                ' in basket'
	            )
	        ) : 'Your basket is empty'
	    );
	};
	
	// Added by sephora-jsx-loader.js
	BasketDesktop.prototype.path = 'InlineBasket/BasketDesktop';
	// Added by sephora-jsx-loader.js
	BasketDesktop.prototype.class = 'BasketDesktop';
	// Added by sephora-jsx-loader.js
	BasketDesktop.prototype.getInitialState = function () {
	    BasketDesktop.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	BasketDesktop.prototype.render = wrapComponentRender(BasketDesktop.prototype.render);
	// Added by sephora-jsx-loader.js
	var BasketDesktopClass = React.createClass(BasketDesktop.prototype);
	// Added by sephora-jsx-loader.js
	BasketDesktopClass.prototype.classRef = BasketDesktopClass;
	// Added by sephora-jsx-loader.js
	Object.assign(BasketDesktopClass, BasketDesktop);
	// Added by sephora-jsx-loader.js
	module.exports = BasketDesktopClass;

/***/ }),
/* 384 */
/*!************************************************!*\
  !*** ./public_ufe/js/components/Link/Link.jsx ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['Link'] = function Link() {
	        return LinkClass;
	    };
	}
	
	var _require = __webpack_require__(/*! style */ 106),
	    colors = _require.colors;
	
	var _require2 = __webpack_require__(/*! glamor */ 107),
	    hover = _require2.hover,
	    active = _require2.active;
	
	var Base = __webpack_require__(/*! components/Base/Base */ 105);
	var Chevron = __webpack_require__(/*! components/Chevron/Chevron */ 385);
	
	var Link = function Link() {};
	
	Link.prototype.render = function () {
	    var _props = this.props,
	        _props$is = _props.is,
	        is = _props$is === undefined ? 'button' : _props$is,
	        display = _props.display,
	        primary = _props.primary,
	        muted = _props.muted,
	        arrowDirection = _props.arrowDirection,
	        _props$arrowPosition = _props.arrowPosition,
	        arrowPosition = _props$arrowPosition === undefined ? 'after' : _props$arrowPosition,
	        disabled = _props.disabled,
	        isActive = _props.isActive,
	        children = _props.children,
	        props = _objectWithoutProperties(_props, ['is', 'display', 'primary', 'muted', 'arrowDirection', 'arrowPosition', 'disabled', 'isActive', 'children']);
	
	    var isArrowBefore = arrowPosition === 'before';
	    var isArrowAfter = arrowPosition === 'after';
	
	    var isActiveOrDisabled = isActive || disabled;
	
	    var hoverActiveStyles = !isActiveOrDisabled ? {
	        opacity: muted ? 1 : 0.5
	    } : {};
	
	    var arrow = arrowDirection ? React.createElement(Chevron, {
	        direction: arrowDirection,
	        position: 'relative',
	        top: '-.0625em',
	        marginRight: isArrowBefore ? '.5em' : null,
	        marginLeft: isArrowAfter ? '.5em' : null }) : null;
	
	    return React.createElement(
	        Base,
	        _extends({}, props, {
	            is: this.props.href ? 'a' : is,
	            disabled: disabled,
	            display: display || 'inline-block',
	            baseStyle: [{
	                cursor: 'pointer',
	                transition: 'opacity .2s'
	            }, muted && !isActive && {
	                opacity: 0.5
	            }, primary && {
	                color: colors.linkPrimary
	            }, active(hoverActiveStyles), !Sephora.isTouch && hover(hoverActiveStyles), isActiveOrDisabled && {
	                cursor: 'default'
	            }, disabled && {
	                color: colors.black,
	                opacity: 0.3
	            }] }),
	        isArrowBefore && arrow,
	        children,
	        isArrowAfter && arrow
	    );
	};
	
	// Added by sephora-jsx-loader.js
	Link.prototype.path = 'Link';
	// Added by sephora-jsx-loader.js
	Link.prototype.class = 'Link';
	// Added by sephora-jsx-loader.js
	Link.prototype.getInitialState = function () {
	    Link.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	Link.prototype.render = wrapComponentRender(Link.prototype.render);
	// Added by sephora-jsx-loader.js
	var LinkClass = React.createClass(Link.prototype);
	// Added by sephora-jsx-loader.js
	LinkClass.prototype.classRef = LinkClass;
	// Added by sephora-jsx-loader.js
	Object.assign(LinkClass, Link);
	// Added by sephora-jsx-loader.js
	module.exports = LinkClass;

/***/ }),
/* 385 */
/*!******************************************************!*\
  !*** ./public_ufe/js/components/Chevron/Chevron.jsx ***!
  \******************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['Chevron'] = function Chevron() {
	        return ChevronClass;
	    };
	}
	var Base = __webpack_require__(/*! components/Base/Base */ 105);
	
	/** Chevron arrow for links/link groups + other navs */
	var Chevron = function Chevron() {};
	
	Chevron.prototype.render = function () {
	    var _props = this.props,
	        direction = _props.direction,
	        props = _objectWithoutProperties(_props, ['direction']);
	
	    var up = direction === 'up';
	    var down = direction === 'down';
	    var left = direction === 'left';
	    var right = direction === 'right';
	
	    return React.createElement(
	        Base,
	        _extends({}, props, {
	            is: 'svg',
	            viewBox: up || down ? '0 0 95 57' : '0 95 57 95',
	            baseStyle: {
	                width: up || down ? '1em' : '.5em',
	                height: up || down ? '.5em' : '1em',
	                verticalAlign: 'middle',
	                fill: 'currentColor',
	                transition: 'transform .2s',
	                transform: up || left ? 'rotate(180deg)' : null
	            } }),
	        up || down ? React.createElement('path', { d: 'M47.5 57L95 9.5 85.5 0l-38 38-38-38L0 9.5 47.5 57z' }) : React.createElement('path', { d: 'M57 142.5L9.5 95 0 104.5l38 38-38 38 9.5 9.5L57 142.5z' })
	    );
	};
	
	Chevron.prototype.propTypes = {
	    /** Direction of arrow */
	    direction: React.PropTypes.oneOf(['up', 'down', 'left', 'right'])
	};
	
	// Added by sephora-jsx-loader.js
	Chevron.prototype.path = 'Chevron';
	// Added by sephora-jsx-loader.js
	Chevron.prototype.class = 'Chevron';
	// Added by sephora-jsx-loader.js
	Chevron.prototype.getInitialState = function () {
	    Chevron.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	Chevron.prototype.render = wrapComponentRender(Chevron.prototype.render);
	// Added by sephora-jsx-loader.js
	var ChevronClass = React.createClass(Chevron.prototype);
	// Added by sephora-jsx-loader.js
	ChevronClass.prototype.classRef = ChevronClass;
	// Added by sephora-jsx-loader.js
	Object.assign(ChevronClass, Chevron);
	// Added by sephora-jsx-loader.js
	module.exports = ChevronClass;

/***/ }),
/* 386 */
/*!***********************************************************!*\
  !*** ./public_ufe/js/components/Button/ButtonPrimary.jsx ***!
  \***********************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['ButtonPrimary'] = function ButtonPrimary() {
	        return ButtonPrimaryClass;
	    };
	}
	
	var _require = __webpack_require__(/*! glamor */ 107),
	    active = _require.active,
	    hover = _require.hover;
	
	var _require2 = __webpack_require__(/*! style */ 106),
	    colors = _require2.colors;
	
	// Primary Button: solid background (default black, red hover), white text
	
	var Button = __webpack_require__(/*! components/Button/Button */ 387);
	
	var ButtonPrimary = function ButtonPrimary() {};
	
	ButtonPrimary.prototype.render = function () {
	
	    var hoverActiveStyles = {
	        opacity: 0.75
	    };
	
	    return React.createElement(Button, _extends({}, this.props, {
	        baseStyle: [{
	            transition: 'opacity .2s',
	            ':disabled': {
	                opacity: 1,
	                color: colors.lightSilver,
	                backgroundColor: colors.lightGray
	            }
	        }, active(hoverActiveStyles), !Sephora.isTouch && hover(hoverActiveStyles)] }));
	};
	
	ButtonPrimary.prototype.getDefaultProps = function () {
	    return {
	        color: colors.white,
	        backgroundColor: colors.black
	    };
	};
	
	// Added by sephora-jsx-loader.js
	ButtonPrimary.prototype.path = 'Button';
	// Added by sephora-jsx-loader.js
	ButtonPrimary.prototype.class = 'ButtonPrimary';
	// Added by sephora-jsx-loader.js
	ButtonPrimary.prototype.getInitialState = function () {
	    ButtonPrimary.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	ButtonPrimary.prototype.render = wrapComponentRender(ButtonPrimary.prototype.render);
	// Added by sephora-jsx-loader.js
	var ButtonPrimaryClass = React.createClass(ButtonPrimary.prototype);
	// Added by sephora-jsx-loader.js
	ButtonPrimaryClass.prototype.classRef = ButtonPrimaryClass;
	// Added by sephora-jsx-loader.js
	Object.assign(ButtonPrimaryClass, ButtonPrimary);
	// Added by sephora-jsx-loader.js
	module.exports = ButtonPrimaryClass;

/***/ }),
/* 387 */
/*!****************************************************!*\
  !*** ./public_ufe/js/components/Button/Button.jsx ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['Button'] = function Button() {
	        return ButtonClass;
	    };
	}
	var css = __webpack_require__(/*! glamor */ 107).style;
	
	var _require = __webpack_require__(/*! style */ 106),
	    buttons = _require.buttons,
	    borderRadius = _require.borderRadius,
	    colors = _require.colors,
	    fontSizes = _require.fontSizes,
	    lineHeights = _require.lineHeights,
	    shade = _require.shade,
	    tracking = _require.tracking;
	
	var Base = __webpack_require__(/*! components/Base/Base */ 105);
	
	// Base Button Component
	
	var Button = function Button() {};
	
	Button.prototype.render = function () {
	    var _props = this.props,
	        href = _props.href,
	        borderColor = _props.borderColor,
	        size = _props.size,
	        block = _props.block,
	        multiline = _props.multiline,
	        notCaps = _props.notCaps,
	        minWidth = _props.minWidth,
	        baseStyle = _props.baseStyle,
	        props = _objectWithoutProperties(_props, ['href', 'borderColor', 'size', 'block', 'multiline', 'notCaps', 'minWidth', 'baseStyle']);
	
	    var fontSize = void 0;
	    var paddingY = void 0;
	    var paddingX = void 0;
	
	    switch (size) {
	        case 'sm':
	            fontSize = fontSizes.h6;
	            paddingY = 8;
	            paddingX = 12;
	            break;
	        case 'lg':
	            fontSize = fontSizes.h4;
	            paddingY = 12;
	            paddingX = 24;
	            break;
	        default:
	            fontSize = buttons.FONT_SIZE;
	            paddingY = buttons.PADDING_Y;
	            paddingX = buttons.PADDING_X;
	    }
	
	    var Component = href ? 'a' : 'button';
	
	    var styles = [{
	        display: block ? 'block' : 'inline-block',
	        fontSize: fontSize,
	        fontWeight: '700',
	        lineHeight: multiline ? lineHeights[2] : buttons.LINE_HEIGHT,
	        textAlign: 'center',
	        textTransform: 'uppercase',
	        textDecoration: 'none',
	        verticalAlign: 'middle',
	        letterSpacing: tracking[1],
	        borderWidth: buttons.BORDER_WIDTH,
	        borderColor: borderColor,
	        borderRadius: borderRadius,
	        paddingTop: paddingY,
	        paddingBottom: paddingY,
	        paddingLeft: block ? 0 : paddingX,
	        paddingRight: block ? 0 : paddingX,
	        width: block ? '100%' : null,
	        minHeight: Math.round(fontSize * buttons.LINE_HEIGHT + paddingY * 2 + buttons.BORDER_WIDTH * 2),
	        MozAppearance: 'none',
	        WebkitAppearance: 'none',
	        ':focus': { outline: 0,
	            boxShadow: '0 0 0 1px ' + colors.white + ', 0 0 0 3px ' + shade[4] },
	        ':disabled': {
	            cursor: 'not-allowed',
	            pointerEvents: 'none',
	            opacity: 0.3
	        }
	    }, notCaps && {
	        letterSpacing: 0,
	        textTransform: 'none'
	    }];
	
	    return React.createElement(Base, _extends({}, props, {
	        is: Component,
	        href: href,
	        minWidth: !block ? minWidth : null,
	        baseStyle: [styles, baseStyle] }));
	};
	
	Button.prototype.propTypes = {
	    /** Pass an href prop to make the Button an <a> tag instead of a <button> */
	    href: React.PropTypes.string,
	    /** Border color - can either be a key from the style colors object or any color value */
	    borderColor: React.PropTypes.string,
	    /** Alternate button sizes - `sm`, `lg` */
	    size: React.PropTypes.oneOf(['sm', 'lg']),
	    /** Full width of container; no side padding */
	    block: React.PropTypes.bool
	};
	
	Button.prototype.getDefaultProps = function () {
	    return {
	        color: 'inherit',
	        type: 'button',
	        backgroundColor: 'transparent',
	        borderColor: 'transparent'
	    };
	};
	
	// Added by sephora-jsx-loader.js
	Button.prototype.path = 'Button';
	// Added by sephora-jsx-loader.js
	Button.prototype.class = 'Button';
	// Added by sephora-jsx-loader.js
	Button.prototype.getInitialState = function () {
	    Button.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	Button.prototype.render = wrapComponentRender(Button.prototype.render);
	// Added by sephora-jsx-loader.js
	var ButtonClass = React.createClass(Button.prototype);
	// Added by sephora-jsx-loader.js
	ButtonClass.prototype.classRef = ButtonClass;
	// Added by sephora-jsx-loader.js
	Object.assign(ButtonClass, Button);
	// Added by sephora-jsx-loader.js
	module.exports = ButtonClass;

/***/ }),
/* 388 */
/*!*******************************************************!*\
  !*** ./public_ufe/js/components/Button/ButtonRed.jsx ***!
  \*******************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['ButtonRed'] = function ButtonRed() {
	        return ButtonRedClass;
	    };
	}
	// Red Primary Button
	
	var ButtonPrimary = __webpack_require__(/*! components/Button/ButtonPrimary */ 386);
	
	var ButtonRed = function ButtonRed() {};
	
	ButtonRed.prototype.render = function () {
	    return React.createElement(ButtonPrimary, _extends({}, this.props, {
	        backgroundColor: 'red' }));
	};
	
	// Added by sephora-jsx-loader.js
	ButtonRed.prototype.path = 'Button';
	// Added by sephora-jsx-loader.js
	ButtonRed.prototype.class = 'ButtonRed';
	// Added by sephora-jsx-loader.js
	ButtonRed.prototype.getInitialState = function () {
	    ButtonRed.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	ButtonRed.prototype.render = wrapComponentRender(ButtonRed.prototype.render);
	// Added by sephora-jsx-loader.js
	var ButtonRedClass = React.createClass(ButtonRed.prototype);
	// Added by sephora-jsx-loader.js
	ButtonRedClass.prototype.classRef = ButtonRedClass;
	// Added by sephora-jsx-loader.js
	Object.assign(ButtonRedClass, ButtonRed);
	// Added by sephora-jsx-loader.js
	module.exports = ButtonRedClass;

/***/ }),
/* 389 */
/*!******************************************************!*\
  !*** ./public_ufe/js/components/Divider/Divider.jsx ***!
  \******************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['Divider'] = function Divider() {
	        return DividerClass;
	    };
	}
	var Base = __webpack_require__(/*! components/Base/Base */ 105);
	
	var Divider = function Divider() {};
	
	Divider.prototype.render = function () {
	    var _props = this.props,
	        height = _props.height,
	        color = _props.color,
	        props = _objectWithoutProperties(_props, ['height', 'color']);
	
	    return React.createElement(Base, _extends({}, props, {
	        color: color || 'lightGray',
	        borderBottom: height || 1 }));
	};
	
	Divider.prototype.propTypes = {
	    height: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number])
	};
	
	// Added by sephora-jsx-loader.js
	Divider.prototype.path = 'Divider';
	// Added by sephora-jsx-loader.js
	Divider.prototype.class = 'Divider';
	// Added by sephora-jsx-loader.js
	Divider.prototype.getInitialState = function () {
	    Divider.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	Divider.prototype.render = wrapComponentRender(Divider.prototype.render);
	// Added by sephora-jsx-loader.js
	var DividerClass = React.createClass(Divider.prototype);
	// Added by sephora-jsx-loader.js
	DividerClass.prototype.classRef = DividerClass;
	// Added by sephora-jsx-loader.js
	Object.assign(DividerClass, Divider);
	// Added by sephora-jsx-loader.js
	module.exports = DividerClass;

/***/ }),
/* 390 */
/*!****************************************************************!*\
  !*** ./public_ufe/js/components/CustomScroll/CustomScroll.jsx ***!
  \****************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['CustomScroll'] = function CustomScroll() {
	        return CustomScrollClass;
	    };
	}
	var colors = __webpack_require__(/*! style */ 106).colors;
	var Box = __webpack_require__(/*! components/Box/Box */ 143);
	
	/**
	 * A custom scrollbar design (webkit only)
	 */
	
	var CustomScroll = function CustomScroll() {};
	
	CustomScroll.prototype.render = function () {
	
	    return React.createElement(Box, _extends({}, this.props, {
	        baseStyle: {
	            overflowY: 'auto',
	            overflowX: 'hidden',
	            '&::-webkit-scrollbar': {
	                width: 8,
	                height: 8,
	                backgroundColor: colors.lightGray,
	                borderRadius: 99999
	            },
	            '&::-webkit-scrollbar-thumb': {
	                minHeight: 8,
	                backgroundColor: colors.black,
	                borderRadius: 99999,
	                border: '2px solid transparent',
	                backgroundClip: 'content-box'
	            }
	        } }));
	};
	
	// Added by sephora-jsx-loader.js
	CustomScroll.prototype.path = 'CustomScroll';
	// Added by sephora-jsx-loader.js
	CustomScroll.prototype.class = 'CustomScroll';
	// Added by sephora-jsx-loader.js
	CustomScroll.prototype.getInitialState = function () {
	    CustomScroll.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	CustomScroll.prototype.render = wrapComponentRender(CustomScroll.prototype.render);
	// Added by sephora-jsx-loader.js
	var CustomScrollClass = React.createClass(CustomScroll.prototype);
	// Added by sephora-jsx-loader.js
	CustomScrollClass.prototype.classRef = CustomScrollClass;
	// Added by sephora-jsx-loader.js
	Object.assign(CustomScrollClass, CustomScroll);
	// Added by sephora-jsx-loader.js
	module.exports = CustomScrollClass;

/***/ }),
/* 391 */
/*!***********************************************************************!*\
  !*** ./public_ufe/js/components/InlineBasket/BasketMsg/BasketMsg.jsx ***!
  \***********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['BasketMsg'] = function BasketMsg() {
	        return BasketMsgClass;
	    };
	}
	
	var _require = __webpack_require__(/*! style */ 106),
	    space = _require.space;
	
	var _require2 = __webpack_require__(/*! components/display */ 369),
	    Box = _require2.Box,
	    Image = _require2.Image,
	    Text = _require2.Text;
	
	var BasketMsg = function BasketMsg() {};
	
	BasketMsg.prototype.render = function () {
	    var _props = this.props,
	        basket = _props.basket,
	        props = _objectWithoutProperties(_props, ['basket']);
	
	    var heading = void 0;
	    var message = void 0;
	
	    // select only messages, not warnings or errors
	    var messages = basket.basketLevelMessages && basket.basketLevelMessages.filter(function (item) {
	        return item.type === 'message';
	    });
	
	    if (messages && messages.length) {
	        var lastMessage = messages.pop();
	
	        switch (lastMessage.messageLogo) {
	            case 'freeShipLogo':
	                heading = React.createElement(
	                    Text,
	                    {
	                        fontSize: 'h3',
	                        textTransform: 'uppercase' },
	                    'Free Shipping'
	                );
	                break;
	            case 'vibBiLogo':
	                heading = React.createElement(Image, {
	                    src: '/img/ufe/bi/logo-vib.svg',
	                    width: 41, height: 20,
	                    alt: 'VIB' });
	                break;
	            case 'vibRougeLogo':
	                heading = React.createElement(Image, {
	                    src: '/img/ufe/bi/logo-rouge.svg',
	                    width: 87, height: 20,
	                    alt: 'ROUGE' });
	                break;
	            default:
	                null;
	        }
	        message = React.createElement(Text, {
	            is: 'p',
	            dangerouslySetInnerHTML: { __html: lastMessage.messages[0] } });
	    }
	
	    return heading || message ? React.createElement(
	        Box,
	        _extends({}, props, {
	            fontWeight: 700,
	            lineHeight: 2,
	            textAlign: 'center' }),
	        heading && React.createElement(
	            Box,
	            {
	                paddingTop: space[1],
	                marginBottom: space[2] },
	            heading
	        ),
	        message && message
	    ) : null;
	};
	
	// Added by sephora-jsx-loader.js
	BasketMsg.prototype.path = 'InlineBasket/BasketMsg';
	// Added by sephora-jsx-loader.js
	BasketMsg.prototype.class = 'BasketMsg';
	// Added by sephora-jsx-loader.js
	BasketMsg.prototype.getInitialState = function () {
	    BasketMsg.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	BasketMsg.prototype.render = wrapComponentRender(BasketMsg.prototype.render);
	// Added by sephora-jsx-loader.js
	var BasketMsgClass = React.createClass(BasketMsg.prototype);
	// Added by sephora-jsx-loader.js
	BasketMsgClass.prototype.classRef = BasketMsgClass;
	// Added by sephora-jsx-loader.js
	Object.assign(BasketMsgClass, BasketMsg);
	// Added by sephora-jsx-loader.js
	module.exports = BasketMsgClass;

/***/ }),
/* 392 */
/*!****************************************************************************!*\
  !*** ./public_ufe/js/components/InlineBasket/BasketDesktop/BasketItem.jsx ***!
  \****************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['BasketItem'] = function BasketItem() {
	        return BasketItemClass;
	    };
	}
	
	var _require = __webpack_require__(/*! style */ 106),
	    space = _require.space;
	
	var _require2 = __webpack_require__(/*! components/display */ 369),
	    Box = _require2.Box,
	    Grid = _require2.Grid,
	    Text = _require2.Text;
	
	var ProductImage = __webpack_require__(/*! components/Product/ProductImage/ProductImage */ 393);
	var Link = __webpack_require__(/*! components/Link/Link */ 384);
	var Divider = __webpack_require__(/*! components/Divider/Divider */ 389);
	var ProductVariation = __webpack_require__(/*! components/Product/ProductVariation/ProductVariation */ 394);
	var IMAGE_SIZES = __webpack_require__(/*! utils/BCC */ 364).IMAGE_SIZES;
	
	var BasketItem = function BasketItem() {
	    this.state = {
	        isHover: false
	    };
	};
	
	BasketItem.prototype.render = function () {
	    var _props = this.props,
	        item = _props.item,
	        itemWidth = _props.itemWidth,
	        index = _props.index;
	
	
	    var displayName = React.createElement(
	        'div',
	        null,
	        React.createElement(
	            Box,
	            {
	                fontWeight: 700,
	                textTransform: 'uppercase' },
	            item.sku.brandName
	        ),
	        item.sku.productName
	    );
	
	    return React.createElement(
	        Box,
	        {
	            fontSize: 'h5',
	            lineHeight: 2,
	            width: itemWidth,
	            onMouseEnter: this.onMouseEnterHandler,
	            onMouseLeave: this.onMouseLeaveHandler },
	        index > 0 && React.createElement(Divider, null),
	        React.createElement(
	            Grid,
	            { paddingY: space[3] },
	            React.createElement(
	                Grid.Cell,
	                {
	                    width: 'fit',
	                    marginRight: space[2] },
	                React.createElement(
	                    Box,
	                    {
	                        href: item.sku.targetUrl },
	                    React.createElement(ProductImage, {
	                        skuImages: item.sku.skuImages,
	                        size: IMAGE_SIZES[62],
	                        disableLazyLoad: true })
	                )
	            ),
	            React.createElement(
	                Grid.Cell,
	                {
	                    width: 'fill' },
	                item.sku.targetUrl ? React.createElement(
	                    Link,
	                    {
	                        display: 'block',
	                        href: item.sku.targetUrl,
	                        'data-at': Sephora.debug.dataAt('inline_basket_sku_name') },
	                    displayName
	                ) : displayName,
	                React.createElement(
	                    Box,
	                    {
	                        marginTop: space[1],
	                        fontSize: 'h6',
	                        color: 'gray' },
	                    React.createElement(
	                        'span',
	                        { 'data-at': Sephora.debug.dataAt('inline_basket_sku_id') },
	                        'ITEM ',
	                        item.sku.skuId
	                    ),
	                    React.createElement(
	                        Text,
	                        { marginX: space[2] },
	                        '\u2022'
	                    ),
	                    React.createElement(
	                        'span',
	                        { 'data-at': Sephora.debug.dataAt('inline_basket_sku_qty') },
	                        'QTY ',
	                        item.qty
	                    )
	                ),
	                React.createElement(ProductVariation, {
	                    sku: item.sku,
	                    marginTop: space[1],
	                    fontSize: 'h6',
	                    'data-at': Sephora.debug.dataAt('inline_basket_sku_variation') }),
	                item.sku.isOutOfStock && React.createElement(
	                    Text,
	                    {
	                        fontWeight: 700,
	                        color: 'red',
	                        'data-at': Sephora.debug.dataAt('inline_basket_sku_out_of_stock') },
	                    'out of stock'
	                )
	            ),
	            React.createElement(
	                Grid.Cell,
	                {
	                    display: 'flex',
	                    flexDirection: 'column',
	                    width: 'fit',
	                    marginLeft: space[2],
	                    lineHeight: 2,
	                    fontWeight: 700,
	                    textAlign: 'right',
	                    'data-at': Sephora.debug.dataAt('inline_basket_sku_price') },
	                item.sku.salePrice ? React.createElement(
	                    Text,
	                    {
	                        fontWeight: 400,
	                        color: 'midGray',
	                        textDecoration: 'line-through',
	                        whiteSpace: 'nowrap',
	                        'data-at': Sephora.debug.dataAt('inline_basket_sku_total_price') },
	                    item.listPriceSubtotal
	                ) : item.listPriceSubtotal,
	                item.sku.salePrice && React.createElement(
	                    Text,
	                    {
	                        color: 'red',
	                        whiteSpace: 'nowrap',
	                        'data-at': Sephora.debug.dataAt('inline_basket_sku_sale_price') },
	                    item.salePriceSubtotal
	                ),
	                React.createElement(
	                    Box,
	                    {
	                        marginX: -space[3],
	                        textAlign: 'right',
	                        marginTop: 'auto',
	                        transition: 'opacity .2s',
	                        style: {
	                            opacity: this.state.isHover || Sephora.isTouch ? 1 : 0
	                        } },
	                    React.createElement(
	                        Link,
	                        {
	                            padding: space[3],
	                            marginBottom: -space[3],
	                            muted: true,
	                            textTransform: 'uppercase',
	                            fontSize: 'h6',
	                            fontWeight: 700,
	                            onClick: this.removeItemFromBasket },
	                        'Remove'
	                    )
	                )
	            )
	        )
	    );
	};
	
	// Added by sephora-jsx-loader.js
	BasketItem.prototype.path = 'InlineBasket/BasketDesktop';
	// Added by sephora-jsx-loader.js
	Object.assign(BasketItem.prototype, __webpack_require__(/*! ./BasketItem.c.js */ 395));
	var originalDidMount = BasketItem.prototype.componentDidMount;
	BasketItem.prototype.componentDidMount = function () {
	    //console.log('Non-root componentDidMount Fired: BasketItem');
	    if (originalDidMount) originalDidMount.apply(this);
	    if (BasketItem.prototype.ctrlr) BasketItem.prototype.ctrlr.apply(this, this.props.ctrlrArgs);
	};
	//console.log('Applied non-root componentDidMount: BasketItem');
	// Added by sephora-jsx-loader.js
	BasketItem.prototype.hasCtrlr = 'true';
	// Added by sephora-jsx-loader.js
	BasketItem.prototype.class = 'BasketItem';
	// Added by sephora-jsx-loader.js
	BasketItem.prototype.getInitialState = function () {
	    BasketItem.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	BasketItem.prototype.render = wrapComponentRender(BasketItem.prototype.render);
	// Added by sephora-jsx-loader.js
	var BasketItemClass = React.createClass(BasketItem.prototype);
	// Added by sephora-jsx-loader.js
	BasketItemClass.prototype.classRef = BasketItemClass;
	// Added by sephora-jsx-loader.js
	Object.assign(BasketItemClass, BasketItem);
	// Added by sephora-jsx-loader.js
	module.exports = BasketItemClass;

/***/ }),
/* 393 */
/*!************************************************************************!*\
  !*** ./public_ufe/js/components/Product/ProductImage/ProductImage.jsx ***!
  \************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['ProductImage'] = function ProductImage() {
	        return ProductImageClass;
	    };
	}
	
	var _require = __webpack_require__(/*! components/display */ 369),
	    Box = _require.Box,
	    Image = _require.Image;
	
	var UI = __webpack_require__(/*! utils/UI */ 283);
	var IMAGE_SIZES = __webpack_require__(/*! utils/BCC */ 364).IMAGE_SIZES;
	
	var ProductImage = function ProductImage() {};
	
	ProductImage.prototype.render = function () {
	    var _props = this.props,
	        _props$skuImages = _props.skuImages,
	        skuImages = _props$skuImages === undefined ? {} : _props$skuImages,
	        src = _props.src,
	        _props$size = _props.size,
	        size = _props$size === undefined ? IMAGE_SIZES[97] : _props$size,
	        width = _props.width,
	        _props$maxWidth = _props.maxWidth,
	        maxWidth = _props$maxWidth === undefined ? '100%' : _props$maxWidth,
	        _props$disableLazyLoa = _props.disableLazyLoad,
	        disableLazyLoad = _props$disableLazyLoa === undefined ? false : _props$disableLazyLoa,
	        isPageRenderImg = _props.isPageRenderImg,
	        props = _objectWithoutProperties(_props, ['skuImages', 'src', 'size', 'width', 'maxWidth', 'disableLazyLoad', 'isPageRenderImg']);
	
	    var imageSrc = skuImages['image' + size] || src;
	
	    return React.createElement(
	        Box,
	        _extends({}, props, {
	            position: 'relative',
	            width: width || size,
	            maxWidth: maxWidth }),
	        React.createElement(Box, {
	            paddingBottom: '100%' }),
	        React.createElement(Image, {
	            disableLazyLoad: disableLazyLoad,
	            position: 'absolute',
	            width: '100%',
	            height: '100%',
	            top: 0, left: 0,
	            src: imageSrc,
	            isPageRenderImg: isPageRenderImg
	            /* TODO: rm condition once all product images have retina versions */
	            , srcSet: size === IMAGE_SIZES[97] || size === IMAGE_SIZES[135] || size === IMAGE_SIZES[162] ? UI.getRetinaSrcSet(imageSrc) : null })
	    );
	};
	
	// Added by sephora-jsx-loader.js
	ProductImage.prototype.path = 'Product/ProductImage';
	// Added by sephora-jsx-loader.js
	ProductImage.prototype.class = 'ProductImage';
	// Added by sephora-jsx-loader.js
	ProductImage.prototype.getInitialState = function () {
	    ProductImage.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	ProductImage.prototype.render = wrapComponentRender(ProductImage.prototype.render);
	// Added by sephora-jsx-loader.js
	var ProductImageClass = React.createClass(ProductImage.prototype);
	// Added by sephora-jsx-loader.js
	ProductImageClass.prototype.classRef = ProductImageClass;
	// Added by sephora-jsx-loader.js
	Object.assign(ProductImageClass, ProductImage);
	// Added by sephora-jsx-loader.js
	module.exports = ProductImageClass;

/***/ }),
/* 394 */
/*!********************************************************************************!*\
  !*** ./public_ufe/js/components/Product/ProductVariation/ProductVariation.jsx ***!
  \********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['ProductVariation'] = function ProductVariation() {
	        return ProductVariationClass;
	    };
	}
	
	var _require = __webpack_require__(/*! style */ 106),
	    fontSizes = _require.fontSizes,
	    lineHeights = _require.lineHeights;
	
	var _require2 = __webpack_require__(/*! components/display */ 369),
	    Box = _require2.Box,
	    Text = _require2.Text;
	
	var skuUtils = __webpack_require__(/*! utils/Sku */ 185);
	
	var ProductVariation = function ProductVariation() {};
	
	ProductVariation.prototype.render = function () {
	    var isDesktop = Sephora.isDesktop();
	
	    var _props = this.props,
	        product = _props.product,
	        sku = _props.sku,
	        hasMinHeight = _props.hasMinHeight,
	        _props$fontSize = _props.fontSize,
	        fontSize = _props$fontSize === undefined ? 'h4' : _props$fontSize,
	        props = _objectWithoutProperties(_props, ['product', 'sku', 'hasMinHeight', 'fontSize']);
	
	    return product && product.variationType !== skuUtils.skuVariationType.NONE || sku.variationType !== skuUtils.skuVariationType.NONE ? React.createElement(
	        Box,
	        _extends({}, props, {
	            fontSize: fontSize,
	            lineHeight: lineHeights[2],
	            _css: isDesktop && hasMinHeight ? {
	                minHeight: lineHeights[2] * fontSizes[fontSize] * 2
	            } : {} }),
	        this.getOnlyFewLeftLabel(sku, true),
	        (product || sku).variationType && !skuUtils.isFragrance(product, sku) && (product || sku).variationType.toUpperCase() + ': ',
	        sku.variationValue && sku.variationValue,
	        sku.variationDesc && ' - ' + sku.variationDesc
	    ) : this.getOnlyFewLeftLabel(sku);
	};
	
	ProductVariation.prototype.getOnlyFewLeftLabel = function (sku, isInline) {
	    return sku.isOnlyFewLeft ? React.createElement(
	        Text,
	        {
	            fontSize: 'h5',
	            display: isInline ? 'inline' : 'block',
	            fontWeight: 700 },
	        'only a few left',
	        isInline && ' - '
	    ) : null;
	};
	
	// Added by sephora-jsx-loader.js
	ProductVariation.prototype.path = 'Product/ProductVariation';
	// Added by sephora-jsx-loader.js
	ProductVariation.prototype.class = 'ProductVariation';
	// Added by sephora-jsx-loader.js
	ProductVariation.prototype.getInitialState = function () {
	    ProductVariation.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	ProductVariation.prototype.render = wrapComponentRender(ProductVariation.prototype.render);
	// Added by sephora-jsx-loader.js
	var ProductVariationClass = React.createClass(ProductVariation.prototype);
	// Added by sephora-jsx-loader.js
	ProductVariationClass.prototype.classRef = ProductVariationClass;
	// Added by sephora-jsx-loader.js
	Object.assign(ProductVariationClass, ProductVariation);
	// Added by sephora-jsx-loader.js
	module.exports = ProductVariationClass;

/***/ }),
/* 395 */
/*!*****************************************************************************!*\
  !*** ./public_ufe/js/components/InlineBasket/BasketDesktop/BasketItem.c.js ***!
  \*****************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	var BasketItem = function BasketItem() {};
	
	// Added by sephora-jsx-loader.js
	BasketItem.prototype.shouldComponentUpdate = wrapComponentRenderModule.shouldComponentUpdate;
	var ReactDOM = __webpack_require__(/*! react-dom */ 100);
	var BasketActions = __webpack_require__(/*! actions/BasketActions */ 169);
	var store = __webpack_require__(/*! store/Store */ 146);
	
	BasketItem.prototype.onMouseEnterHandler = function () {
	    this.setState({
	        isHover: true
	    });
	};
	
	BasketItem.prototype.onMouseLeaveHandler = function () {
	    this.setState({
	        isHover: false
	    });
	};
	
	BasketItem.prototype.removeItemFromBasket = function (event) {
	    store.dispatch(BasketActions.removeItemFromBasket(this.props.item));
	};
	
	// Added by sephora-jsx-loader.js
	module.exports = BasketItem.prototype;

/***/ }),
/* 396 */
/*!*****************************************************************************!*\
  !*** ./public_ufe/js/components/InlineBasket/BasketMobile/BasketMobile.jsx ***!
  \*****************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['BasketMobile'] = function BasketMobile() {
	        return BasketMobileClass;
	    };
	}
	
	var _require = __webpack_require__(/*! style */ 106),
	    colors = _require.colors,
	    space = _require.space,
	    shade = _require.shade,
	    dropdown = _require.dropdown;
	
	var _require2 = __webpack_require__(/*! components/display */ 369),
	    Box = _require2.Box,
	    Text = _require2.Text;
	
	var ButtonRed = __webpack_require__(/*! components/Button/ButtonRed */ 388);
	var Arrow = __webpack_require__(/*! components/Arrow/Arrow */ 397);
	var Divider = __webpack_require__(/*! components/Divider/Divider */ 389);
	var BasketMsg = __webpack_require__(/*! ../BasketMsg/BasketMsg */ 391);
	
	var BasketMobile = function BasketMobile() {
	    return null;
	};
	
	BasketMobile.prototype.render = function () {
	    var _props = this.props,
	        onCheckoutClick = _props.onCheckoutClick,
	        basket = _props.basket,
	        children = _props.children,
	        isOpen = _props.isOpen,
	        props = _objectWithoutProperties(_props, ['onCheckoutClick', 'basket', 'children', 'isOpen']);
	
	    var basketItemWarnings = basket.basketItemWarnings,
	        _basket$error = basket.error,
	        error = _basket$error === undefined ? {} : _basket$error;
	    var _error$errorMessages = error.errorMessages,
	        errorMessages = _error$errorMessages === undefined ? [] : _error$errorMessages;
	
	    basketItemWarnings = basketItemWarnings || [];
	    var styles = {
	        popover: {
	            position: 'absolute',
	            top: '100%',
	            display: isOpen ? 'block' : 'none'
	        },
	        popoverBox: {
	            padding: space[3],
	            right: space[2],
	            left: space[2],
	            backgroundColor: colors.white,
	            boxShadow: dropdown.SHADOW,
	            textAlign: 'center',
	            borderWidth: 1,
	            borderColor: shade[3]
	        },
	        popoverArrow: {
	            right: 20,
	            fontSize: 20,
	            transform: 'translate(0, -100%)'
	        }
	    };
	    return React.createElement(
	        Box,
	        { textAlign: 'right' },
	        children,
	        React.createElement(Arrow, {
	            direction: 'up',
	            _css: [styles.popoverArrow, styles.popover] }),
	        React.createElement(
	            Box,
	            {
	                _css: [styles.popoverBox, styles.popover] },
	            errorMessages.length ? React.createElement(
	                Text,
	                {
	                    color: 'error',
	                    'data-at': Sephora.debug.dataAt('inline_basket_error_message') },
	                errorMessages[0]
	            ) : React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    Box,
	                    null,
	                    basketItemWarnings.map(function (basketItemWarning) {
	                        return React.createElement(
	                            Text,
	                            {
	                                color: 'error',
	                                'data-at': Sephora.debug.dataAt('inline_basket_item_warning') },
	                            basketItemWarning
	                        );
	                    })
	                ),
	                React.createElement(
	                    Text,
	                    {
	                        is: 'h3',
	                        fontSize: 'h3',
	                        fontWeight: 700 },
	                    'Item added to basket'
	                ),
	                React.createElement(Divider, { marginY: space[3] }),
	                React.createElement(BasketMsg, { basket: basket }),
	                React.createElement(Divider, { marginY: space[3] }),
	                React.createElement(
	                    ButtonRed,
	                    { onClick: onCheckoutClick },
	                    'Checkout'
	                )
	            )
	        )
	    );
	};
	
	// Added by sephora-jsx-loader.js
	BasketMobile.prototype.path = 'InlineBasket/BasketMobile';
	// Added by sephora-jsx-loader.js
	BasketMobile.prototype.class = 'BasketMobile';
	// Added by sephora-jsx-loader.js
	BasketMobile.prototype.getInitialState = function () {
	    BasketMobile.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	BasketMobile.prototype.render = wrapComponentRender(BasketMobile.prototype.render);
	// Added by sephora-jsx-loader.js
	var BasketMobileClass = React.createClass(BasketMobile.prototype);
	// Added by sephora-jsx-loader.js
	BasketMobileClass.prototype.classRef = BasketMobileClass;
	// Added by sephora-jsx-loader.js
	Object.assign(BasketMobileClass, BasketMobile);
	// Added by sephora-jsx-loader.js
	module.exports = BasketMobileClass;

/***/ }),
/* 397 */
/*!**************************************************!*\
  !*** ./public_ufe/js/components/Arrow/Arrow.jsx ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['Arrow'] = function Arrow() {
	        return ArrowClass;
	    };
	}
	var Box = __webpack_require__(/*! components/Box/Box */ 143);
	
	/** Arrow for use in dropdowns and other UI elements */
	var Arrow = function Arrow() {};
	
	Arrow.prototype.render = function () {
	    var _props = this.props,
	        _props$direction = _props.direction,
	        direction = _props$direction === undefined ? 'down' : _props$direction,
	        props = _objectWithoutProperties(_props, ['direction']);
	
	    var solid = '.4375em solid';
	    var trans = '.375em solid transparent';
	
	    var styles = {
	        width: 0,
	        height: 0,
	        verticalAlign: 'middle',
	        color: 'inherit',
	        borderLeft: direction === 'right' ? solid : direction === 'left' ? 0 : trans,
	        borderRight: direction === 'left' ? solid : direction === 'right' ? 0 : trans,
	        borderTop: direction === 'down' ? solid : direction === 'up' ? 0 : trans,
	        borderBottom: direction === 'up' ? solid : direction === 'down' ? 0 : trans
	    };
	    return React.createElement(Box, _extends({}, props, {
	        is: 'span',
	        display: 'inline-block',
	        baseStyle: styles }));
	};
	
	Arrow.prototype.propTypes = {
	    direction: React.PropTypes.oneOf(['up', 'down', 'left', 'right'])
	};
	
	// Added by sephora-jsx-loader.js
	Arrow.prototype.path = 'Arrow';
	// Added by sephora-jsx-loader.js
	Arrow.prototype.class = 'Arrow';
	// Added by sephora-jsx-loader.js
	Arrow.prototype.getInitialState = function () {
	    Arrow.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	Arrow.prototype.render = wrapComponentRender(Arrow.prototype.render);
	// Added by sephora-jsx-loader.js
	var ArrowClass = React.createClass(Arrow.prototype);
	// Added by sephora-jsx-loader.js
	ArrowClass.prototype.classRef = ArrowClass;
	// Added by sephora-jsx-loader.js
	Object.assign(ArrowClass, Arrow);
	// Added by sephora-jsx-loader.js
	module.exports = ArrowClass;

/***/ }),
/* 398 */
/*!*****************************************************************!*\
  !*** ./public_ufe/js/components/InlineBasket/InlineBasket.c.js ***!
  \*****************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	var InlineBasket = function InlineBasket() {};
	
	// Added by sephora-jsx-loader.js
	InlineBasket.prototype.shouldComponentUpdate = wrapComponentRenderModule.shouldComponentUpdate;
	var store = __webpack_require__(/*! store/Store */ 146);
	var watch = __webpack_require__(/*! redux-watch */ 187);
	var ReactDOM = __webpack_require__(/*! react-dom */ 100);
	var basketActions = __webpack_require__(/*! actions/BasketActions */ 169);
	var inlineBasketActions = __webpack_require__(/*! actions/InlineBasketActions */ 310);
	var auth = __webpack_require__(/*! utils/Authentication */ 173);
	var Location = __webpack_require__(/*! utils/Location */ 3);
	var userUtils = __webpack_require__(/*! utils/User */ 186);
	var BasketUtils = __webpack_require__(/*! utils/Basket */ 190);
	var Events = __webpack_require__(/*! utils/framework/Events */ 95);
	
	var el = null;
	var cleanErrorTimeOut = null;
	var resetNotificationTimeout = null;
	var closeTimeOut = null;
	var isBasketPage = Location.isBasketPage();
	var PAGE_TOP_THRESHOLD = 150;
	
	InlineBasket.prototype.ctrlr = function () {
	    var _this = this;
	
	    var basket = store.getState().basket;
	    var watchBasket = watch(store.getState, 'basket');
	    var watchIsOpen = watch(store.getState, 'inlineBasket.isOpen');
	    var watchUser = watch(store.getState, 'user');
	    var watchJustAdded = watch(store.getState, 'inlineBasket.justAddedProducts');
	
	    store.subscribe(watchJustAdded(function (justAdded) {
	        _this.handleJustAdded(justAdded);
	    }));
	
	    el = ReactDOM.findDOMNode(this);
	
	    this.setState({
	        basket: basket,
	        isLoggedIn: !userUtils.isAnonymous(),
	        renderBasket: Sephora.isDesktop() || !isBasketPage,
	        showHover: !Sephora.isThirdPartySite && location.pathname !== BasketUtils.PAGE_URL
	    });
	
	    window.addEventListener(Events.DebouncedScroll, this.handleScroll);
	
	    store.subscribe(watchUser(function (user) {
	        _this.setState({
	            isLoggedIn: !userUtils.isAnonymous()
	        });
	    }));
	
	    store.subscribe(watchIsOpen(function (isOpen) {
	        _this.toggleOpen(isOpen);
	        var timeToCloseBasket = 5000; // milliseconds
	        if (closeTimeOut) {
	            closeTimeOut = _this.clearTimeout(closeTimeOut);
	        }
	
	        closeTimeOut = setTimeout(function () {
	            store.dispatch(inlineBasketActions.showInlineBasket(false));
	        }, timeToCloseBasket);
	    }));
	
	    store.subscribe(watchBasket(function (newBasket) {
	        _this.updateState(newBasket);
	    }));
	};
	
	InlineBasket.prototype.signInHandler = function (e) {
	    e.stopPropagation();
	
	    //Analytics
	    __webpack_require__.e/* nsure */(1/*! components */, function (require) {
	        var anaUtils = __webpack_require__(/*! analytics/utils */ 179);
	
	        var analyticsData = {
	            eventStrings: ['event14'],
	            navigationInfo: anaUtils.buildNavPath(['top nav', 'basket', 'sign-in'])
	        };
	    });
	
	    auth.requireAuthentication(null, null, analyticsData);
	};
	
	InlineBasket.prototype.componentWillUnmount = function () {
	    window.removeEventListener(Events.DebouncedScroll, this.handleScroll);
	};
	
	InlineBasket.prototype.updateState = function (newBasket) {
	    var _this2 = this;
	
	    this.setState({
	        basket: newBasket,
	        fixed: !this.isPositionTop()
	    }, function () {
	
	        if (isBasketPage) {
	            return;
	        }
	
	        if (cleanErrorTimeOut) {
	            cleanErrorTimeOut = _this2.clearTimeout(cleanErrorTimeOut);
	        }
	
	        if (_this2.state.basket.error) {
	            var timeToCleanError = 5000;
	
	            cleanErrorTimeOut = setTimeout(function () {
	                store.dispatch(basketActions.showError());
	            }, timeToCleanError);
	        }
	    });
	};
	
	InlineBasket.prototype.clearTimeout = function (timeout) {
	    window.clearTimeout(timeout);
	    return null;
	};
	
	InlineBasket.prototype.handleJustAdded = function (justAddedCount) {
	    var timeToResetJustAddedNotification = 6000;
	    this.setState({
	        justAddedProducts: justAddedCount
	    });
	    if (resetNotificationTimeout) {
	        resetNotificationTimeout = this.clearTimeout(resetNotificationTimeout);
	    }
	
	    if (justAddedCount > 0) {
	        resetNotificationTimeout = setTimeout(function () {
	            store.dispatch(inlineBasketActions.resetProductsNotification());
	        }, timeToResetJustAddedNotification);
	    }
	};
	
	InlineBasket.prototype.handleScroll = function () {
	    var isCurrentlyOnTop = !this.isPositionTop();
	
	    if (this.state.isOpen && this.fixed !== isCurrentlyOnTop) {
	        this.setState({
	            fixed: isCurrentlyOnTop
	        });
	    }
	};
	
	InlineBasket.prototype.isPositionTop = function () {
	    return window.pageYOffset < PAGE_TOP_THRESHOLD;
	};
	
	InlineBasket.prototype.onBasketHoverClick = function () {
	
	    if (!this.state.renderBasket) {
	        return;
	    }
	
	    //Analytics
	    __webpack_require__.e/* nsure */(1/*! components */, function (require) {
	        var anaUtils = __webpack_require__(/*! analytics/utils */ 179);
	
	        anaUtils.setNextPageData({
	            navigationInfo: anaUtils.buildNavPath(['top nav', 'hover basket', 'basket link'])
	        });
	    });
	
	    location.href = BasketUtils.PAGE_URL;
	};
	
	InlineBasket.prototype.onBasketClick = function () {
	
	    //Analytics
	    __webpack_require__.e/* nsure */(1/*! components */, function (require) {
	        var anaUtils = __webpack_require__(/*! analytics/utils */ 179);
	
	        anaUtils.setNextPageData({
	            navigationInfo: anaUtils.buildNavPath(['top nav', 'basket'])
	        });
	    });
	
	    location.href = BasketUtils.PAGE_URL;
	};
	
	InlineBasket.prototype.onCheckoutClick = function () {
	
	    //Analytics
	    __webpack_require__.e/* nsure */(1/*! components */, function (require) {
	        var anaUtils = __webpack_require__(/*! analytics/utils */ 179);
	
	        anaUtils.setNextPageData({
	            navigationInfo: anaUtils.buildNavPath(['top nav', 'hover basket', 'checkout'])
	        });
	    });
	
	    location.href = BasketUtils.PAGE_URL;
	};
	
	InlineBasket.prototype.toggleOpen = function (forceIsOpen) {
	
	    if (this.state.renderBasket) {
	
	        var newIsOpenValue = typeof forceIsOpen === 'boolean' ? forceIsOpen : !this.state.isOpen;
	
	        if (forceIsOpen.type === 'mouseenter' && this.state.isOpen === true) {
	            newIsOpenValue = true;
	        } else if (forceIsOpen.type === 'mouseleave' && this.state.isOpen === false) {
	            newIsOpenValue = false;
	        }
	
	        this.setState({
	            isOpen: newIsOpenValue,
	            fixed: !this.isPositionTop()
	        });
	    }
	};
	
	InlineBasket.prototype.rightOffset = function () {
	    return el.getBoundingClientRect().right;
	};
	
	// Added by sephora-jsx-loader.js
	module.exports = InlineBasket.prototype;

/***/ }),
/* 399 */
/*!*************************************************************************************!*\
  !*** ./public_ufe/js/components/Header/Nav/Account/AccountHeader/AccountHeader.jsx ***!
  \*************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	var _require = __webpack_require__(/*! style */ 106),
	    colors = _require.colors,
	    dropdown = _require.dropdown,
	    space = _require.space,
	    zIndex = _require.zIndex;
	
	var _require2 = __webpack_require__(/*! components/display */ 369),
	    Box = _require2.Box,
	    Flex = _require2.Flex;
	
	var Dropdown = __webpack_require__(/*! components/Dropdown/Dropdown */ 379);
	var Arrow = __webpack_require__(/*! components/Arrow/Arrow */ 397);
	
	var AccountGreeting = __webpack_require__(/*! ../AccountGreeting/AccountGreeting */ 400);
	var AccountMenu = __webpack_require__(/*! ../AccountMenu/AccountMenu */ 402);
	
	var AccountHeader = function AccountHeader() {
	    this.state = {
	        user: {},
	        socialProfile: null,
	        isLithiumSuccessful: true,
	        isOpen: false
	    };
	};
	
	AccountHeader.prototype.asyncRender = 'UserInfo';
	
	AccountHeader.prototype.render = function () {
	    var isTablet = Sephora.isTouch && Sephora.isDesktop();
	    var closedIndex = isTablet ? zIndex.DROPDOWN + 2 : null;
	
	    var shouldDisplayAvatar = this.state.isLithiumSuccessful && this.state.socialProfile && this.state.socialProfile.avatar;
	
	    var AVATAR_SIZE = 40;
	
	    return React.createElement(
	        Dropdown,
	        {
	            isHover: true,
	            delayedHover: true,
	            marginRight: space[2],
	            onTrigger: this.toggleOpen },
	        React.createElement(
	            Dropdown.Trigger,
	            null,
	            React.createElement(
	                Flex,
	                {
	                    position: 'relative',
	                    cursor: 'default',
	                    fontSize: 'h5',
	                    alignItems: 'center',
	                    paddingLeft: space[4],
	                    paddingRight: space[6],
	                    borderRight: 1,
	                    minWidth: 180, height: 54,
	                    style: {
	                        boxShadow: this.state.isOpen ? dropdown.SHADOW : null,
	                        zIndex: this.state.isOpen ? zIndex.DROPDOWN : closedIndex,
	                        borderRightColor: this.state.isOpen ? 'transparent' : colors.lightGray
	                    } },
	                React.createElement(Arrow, {
	                    direction: this.state.isOpen ? 'up' : 'down',
	                    _css: {
	                        position: 'absolute',
	                        top: '50%',
	                        right: space[3],
	                        transform: 'translate(0, -50%)'
	                    } }),
	                shouldDisplayAvatar && React.createElement(Box, {
	                    'data-at': Sephora.debug.dataAt('user_avatar_' + this.state.socialProfile.avatar),
	                    circle: true,
	                    border: 2,
	                    width: AVATAR_SIZE,
	                    height: AVATAR_SIZE,
	                    marginLeft: -2,
	                    marginRight: space[2],
	                    backgroundPosition: 'center',
	                    backgroundSize: 'cover',
	                    style: {
	                        backgroundImage: 'url(' + this.state.socialProfile.avatar + ')'
	                    } }),
	                React.createElement(AccountGreeting, {
	                    user: this.state.user,
	                    socialProfile: this.state.socialProfile,
	                    isLithiumSuccessful: this.state.isLithiumSuccessful })
	            ),
	            React.createElement(Box, {
	                style: this.state.isOpen ? {
	                    position: 'absolute',
	                    zIndex: zIndex.DROPDOWN + 1,
	                    bottom: 0,
	                    left: 0,
	                    right: 0,
	                    backgroundColor: colors.white,
	                    height: 5
	                } : null })
	        ),
	        React.createElement(
	            Dropdown.Menu,
	            {
	                paddingBottom: space[3] },
	            React.createElement(AccountMenu, { user: this.state.user })
	        )
	    );
	};
	
	// Added by sephora-jsx-loader.js
	AccountHeader.prototype.path = 'Header/Nav/Account/AccountHeader';
	// Added by sephora-jsx-loader.js
	Object.assign(AccountHeader.prototype, __webpack_require__(/*! ./AccountHeader.c.js */ 404));
	var originalDidMount = AccountHeader.prototype.componentDidMount;
	AccountHeader.prototype.componentDidMount = function () {
	    //console.log('Non-root componentDidMount Fired: AccountHeader');
	    if (originalDidMount) originalDidMount.apply(this);
	    if (AccountHeader.prototype.ctrlr) AccountHeader.prototype.ctrlr.apply(this, this.props.ctrlrArgs);
	};
	//console.log('Applied non-root componentDidMount: AccountHeader');
	// Added by sephora-jsx-loader.js
	AccountHeader.prototype.hasCtrlr = 'true';
	// Added by sephora-jsx-loader.js
	AccountHeader.prototype.class = 'AccountHeader';
	// Added by sephora-jsx-loader.js
	AccountHeader.prototype.getInitialState = function () {
	    AccountHeader.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	AccountHeader.prototype.render = wrapComponentRender(AccountHeader.prototype.render);
	// Added by sephora-jsx-loader.js
	var AccountHeaderClass = React.createClass(AccountHeader.prototype);
	// Added by sephora-jsx-loader.js
	AccountHeaderClass.prototype.classRef = AccountHeaderClass;
	// Added by sephora-jsx-loader.js
	Object.assign(AccountHeaderClass, AccountHeader);
	// Added by sephora-jsx-loader.js
	module.exports = AccountHeaderClass;

/***/ }),
/* 400 */
/*!*****************************************************************************************!*\
  !*** ./public_ufe/js/components/Header/Nav/Account/AccountGreeting/AccountGreeting.jsx ***!
  \*****************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['AccountGreeting'] = function AccountGreeting() {
	        return AccountGreetingClass;
	    };
	}
	/* eslint-disable max-len */
	var space = __webpack_require__(/*! style */ 106).space;
	
	var _require = __webpack_require__(/*! components/display */ 369),
	    Box = _require.Box,
	    Text = _require.Text;
	
	var Link = __webpack_require__(/*! components/Link/Link */ 384);
	var userUtils = __webpack_require__(/*! utils/User */ 186);
	
	var thirdPartySignInLink = 'https://www.sephora.com/profile/login/loginForSocial.jsp?provider=lithium&nextpage=';
	var thirdPartyRegisterLink = 'https://www.sephora.com/profile/registration/registration.jsp?type=sephoraAccountRegistrationSocial&provider=lithium&nextpage=';
	
	var AccountGreeting = function AccountGreeting() {};
	
	AccountGreeting.prototype.render = function () {
	    var user = this.props.user;
	
	    var isMobile = Sephora.isMobile();
	    var isUserReady = user && user.profileLocale !== undefined;
	    return isUserReady ? React.createElement(
	        Box,
	        {
	            fontSize: !isMobile ? 'h5' : null,
	            lineHeight: 2 },
	        React.createElement(
	            Text,
	            {
	                is: 'p',
	                fontSize: isMobile ? 'h4' : 'h3',
	                fontWeight: 700,
	                truncate: true,
	                maxWidth: !isMobile ? '18ch' : null,
	                'data-at': Sephora.debug.dataAt('welcome_text') },
	            'Hi, ',
	            user.firstName ? user.firstName : 'Beautiful'
	        ),
	        user.profileStatus === 0 || !user.profileStatus ? React.createElement(
	            Box,
	            { marginTop: space[1] },
	            React.createElement(
	                Link,
	                {
	                    paddingY: space[1],
	                    marginY: -space[1],
	                    fontWeight: 700,
	                    href: Sephora.isThirdPartySite ? thirdPartySignInLink : '',
	                    onClick: !Sephora.isThirdPartySite ? this.signInHandler : '',
	                    'data-at': Sephora.debug.dataAt('sign_in') },
	                'Sign In'
	            ),
	            ' ',
	            'or',
	            ' ',
	            React.createElement(
	                Link,
	                {
	                    paddingY: space[1],
	                    marginY: -space[1],
	                    fontWeight: 700,
	                    href: Sephora.isThirdPartySite ? thirdPartyRegisterLink : '',
	                    onClick: !Sephora.isThirdPartySite ? this.registerHandler : '',
	                    'data-at': Sephora.debug.dataAt('register') },
	                'Register'
	            )
	        ) : user.beautyInsiderAccount ? React.createElement(
	            Box,
	            { marginTop: space[1] },
	            React.createElement(
	                Text,
	                {
	                    'data-at': Sephora.debug.dataAt('user_status') },
	                userUtils.displayBiStatus(user.beautyInsiderAccount.vibSegment)
	            ),
	            React.createElement(
	                Text,
	                {
	                    marginLeft: space[2],
	                    'data-at': Sephora.debug.dataAt('user_points') },
	                user.beautyInsiderAccount.promotionPoints + ' pt' + (user.beautyInsiderAccount.promotionPoints !== 1 ? 's' : '')
	            )
	        ) : null
	    ) : null;
	};
	
	// Added by sephora-jsx-loader.js
	AccountGreeting.prototype.path = 'Header/Nav/Account/AccountGreeting';
	// Added by sephora-jsx-loader.js
	Object.assign(AccountGreeting.prototype, __webpack_require__(/*! ./AccountGreeting.c.js */ 401));
	var originalDidMount = AccountGreeting.prototype.componentDidMount;
	AccountGreeting.prototype.componentDidMount = function () {
	    //console.log('Non-root componentDidMount Fired: AccountGreeting');
	    if (originalDidMount) originalDidMount.apply(this);
	    if (AccountGreeting.prototype.ctrlr) AccountGreeting.prototype.ctrlr.apply(this, this.props.ctrlrArgs);
	};
	//console.log('Applied non-root componentDidMount: AccountGreeting');
	// Added by sephora-jsx-loader.js
	AccountGreeting.prototype.hasCtrlr = 'true';
	// Added by sephora-jsx-loader.js
	AccountGreeting.prototype.class = 'AccountGreeting';
	// Added by sephora-jsx-loader.js
	AccountGreeting.prototype.getInitialState = function () {
	    AccountGreeting.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	AccountGreeting.prototype.render = wrapComponentRender(AccountGreeting.prototype.render);
	// Added by sephora-jsx-loader.js
	var AccountGreetingClass = React.createClass(AccountGreeting.prototype);
	// Added by sephora-jsx-loader.js
	AccountGreetingClass.prototype.classRef = AccountGreetingClass;
	// Added by sephora-jsx-loader.js
	Object.assign(AccountGreetingClass, AccountGreeting);
	// Added by sephora-jsx-loader.js
	module.exports = AccountGreetingClass;

/***/ }),
/* 401 */
/*!******************************************************************************************!*\
  !*** ./public_ufe/js/components/Header/Nav/Account/AccountGreeting/AccountGreeting.c.js ***!
  \******************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	var AccountGreeting = function AccountGreeting() {};
	
	// Added by sephora-jsx-loader.js
	AccountGreeting.prototype.shouldComponentUpdate = wrapComponentRenderModule.shouldComponentUpdate;
	var anaConsts = __webpack_require__(/*! analytics/constants */ 178);
	var anaUtils = __webpack_require__(/*! analytics/utils */ 179);
	var processEvent = __webpack_require__(/*! analytics/processEvent */ 176);
	var store = __webpack_require__(/*! Store */ 146);
	var auth = __webpack_require__(/*! utils/Authentication */ 173);
	var enableApplePaySession = __webpack_require__(/*! Actions */ 175).enableApplePaySession;
	
	AccountGreeting.prototype.signInHandler = function (e) {
	    e.stopPropagation();
	
	    var analyticsData = {
	        navigationInfo: anaUtils.buildNavPath(['top nav', 'account', 'sign-in'])
	    };
	
	    // Disable applePay session, if it was active
	    // Otherwise there could be issues with showing Default SignIn modal for mobile devices
	    store.dispatch(enableApplePaySession(false));
	
	    auth.requireAuthentication(null, null, analyticsData);
	};
	
	AccountGreeting.prototype.registerHandler = function (e) {
	    e.stopPropagation();
	    var showRegisterModal = __webpack_require__(/*! Actions */ 175).showRegisterModal;
	    store.dispatch(showRegisterModal(true));
	
	    if (!Sephora.isLegacyMode) {
	        // TODO: Remove after legacy removed
	        processEvent.process(anaConsts.ASYNC_PAGE_LOAD, {
	            data: {
	                navigationInfo: anaUtils.buildNavPath(['top nav', 'account', 'register']),
	                pageName: 'register:register:n/a:*',
	                pageType: 'register',
	                pageDetail: 'register',
	                eventStrings: [anaConsts.Event.REGISTRATION_STEP_1]
	            }
	        });
	    }
	};
	
	// Added by sephora-jsx-loader.js
	module.exports = AccountGreeting.prototype;

/***/ }),
/* 402 */
/*!*********************************************************************************!*\
  !*** ./public_ufe/js/components/Header/Nav/Account/AccountMenu/AccountMenu.jsx ***!
  \*********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	if (!Sephora.isRootRender) {
	    Sephora.Util.InflatorComps.Comps['AccountMenu'] = function AccountMenu() {
	        return AccountMenuClass;
	    };
	}
	var space = __webpack_require__(/*! style */ 106).space;
	
	var _require = __webpack_require__(/*! components/display */ 369),
	    Box = _require.Box;
	
	var Link = __webpack_require__(/*! components/Link/Link */ 384);
	var Divider = __webpack_require__(/*! components/Divider/Divider */ 389);
	var UrlUtils = __webpack_require__(/*! utils/Url */ 2);
	
	/* eslint-disable max-len */
	var thirdPartySignOutLink = 'https://www.sephora.com/profile/logout/logoutForSocial.jsp?provider=lithium&nextpage=';
	
	var AccountMenu = function AccountMenu() {
	    this.state = {
	        isAnonymous: null
	    };
	};
	
	AccountMenu.prototype.render = function () {
	    var _this = this;
	
	    var ANON_URL = '/about-beauty-insider';
	    var RECOGNIZED_URL = '/profile/BeautyInsider';
	
	    var isMobile = Sephora.isMobile();
	
	    var linkStyle = {
	        paddingTop: isMobile ? space[3] : space[2],
	        paddingRight: space[4],
	        paddingBottom: isMobile ? space[3] : space[2],
	        paddingLeft: space[4],
	        width: '100%'
	    };
	
	    return React.createElement(
	        Box,
	        {
	            lineHeight: 2,
	            paddingTop: space[1] },
	        React.createElement(
	            Link,
	            {
	                display: 'block',
	                _css: linkStyle,
	                href: '/profile/me',
	                onClick: function onClick() {
	                    return _this.trackNavClick('Profile');
	                } },
	            'Profile'
	        ),
	        React.createElement(
	            Link,
	            {
	                display: 'block',
	                _css: linkStyle,
	                href: this.state.isAnonymous ? ANON_URL : RECOGNIZED_URL,
	                onClick: function onClick() {
	                    return _this.trackNavClick('Beauty Insider');
	                } },
	            'Beauty Insider'
	        ),
	        React.createElement(
	            Link,
	            {
	                display: 'block',
	                _css: linkStyle,
	                href: '/profile/Lists',
	                onClick: function onClick() {
	                    return _this.trackNavClick('Lists');
	                } },
	            'Lists'
	        ),
	        React.createElement(
	            Link,
	            {
	                display: 'block',
	                _css: linkStyle,
	                href: '/profile/MyAccount',
	                onClick: function onClick() {
	                    return _this.trackNavClick('My Account');
	                } },
	            'Account'
	        ),
	        React.createElement(Divider, {
	            marginX: space[4],
	            marginY: space[2] }),
	        React.createElement(
	            Link,
	            {
	                display: 'block',
	                _css: linkStyle,
	                href: '/profile/MyAccount/Orders',
	                onClick: function onClick() {
	                    return _this.trackNavClick('Recent Orders');
	                } },
	            'Orders'
	        ),
	        React.createElement(
	            Link,
	            {
	                display: 'block',
	                _css: linkStyle,
	                href: '/profile/MyAccount/Reservations',
	                onClick: function onClick() {
	                    return _this.trackNavClick('Reservations');
	                } },
	            'Reservations'
	        ),
	        React.createElement(
	            Link,
	            {
	                display: 'block',
	                _css: linkStyle,
	                href: UrlUtils.getLink('/rewards'),
	                onClick: function onClick() {
	                    return _this.trackNavClick('Rewards Bazaar');
	                } },
	            'Rewards Bazaar'
	        ),
	        this.props.user.profileStatus && this.props.user.profileStatus !== 0 ? React.createElement(
	            'div',
	            null,
	            React.createElement(Divider, {
	                marginX: space[4],
	                marginY: space[2] }),
	            React.createElement(
	                Link,
	                {
	                    display: 'block',
	                    _css: linkStyle,
	                    href: Sephora.isThirdPartySite ? thirdPartySignOutLink : '',
	                    onClick: this.signOutClickHandler },
	                'Sign Out'
	            )
	        ) : null
	    );
	};
	
	// Added by sephora-jsx-loader.js
	AccountMenu.prototype.path = 'Header/Nav/Account/AccountMenu';
	// Added by sephora-jsx-loader.js
	Object.assign(AccountMenu.prototype, __webpack_require__(/*! ./AccountMenu.c.js */ 403));
	var originalDidMount = AccountMenu.prototype.componentDidMount;
	AccountMenu.prototype.componentDidMount = function () {
	    //console.log('Non-root componentDidMount Fired: AccountMenu');
	    if (originalDidMount) originalDidMount.apply(this);
	    if (AccountMenu.prototype.ctrlr) AccountMenu.prototype.ctrlr.apply(this, this.props.ctrlrArgs);
	};
	//console.log('Applied non-root componentDidMount: AccountMenu');
	// Added by sephora-jsx-loader.js
	AccountMenu.prototype.hasCtrlr = 'true';
	// Added by sephora-jsx-loader.js
	AccountMenu.prototype.class = 'AccountMenu';
	// Added by sephora-jsx-loader.js
	AccountMenu.prototype.getInitialState = function () {
	    AccountMenu.apply(this, this.props.constructorArgs);
	    return this.state;
	};
	// Added by sephora-jsx-loader.js
	AccountMenu.prototype.render = wrapComponentRender(AccountMenu.prototype.render);
	// Added by sephora-jsx-loader.js
	var AccountMenuClass = React.createClass(AccountMenu.prototype);
	// Added by sephora-jsx-loader.js
	AccountMenuClass.prototype.classRef = AccountMenuClass;
	// Added by sephora-jsx-loader.js
	Object.assign(AccountMenuClass, AccountMenu);
	// Added by sephora-jsx-loader.js
	module.exports = AccountMenuClass;

/***/ }),
/* 403 */
/*!**********************************************************************************!*\
  !*** ./public_ufe/js/components/Header/Nav/Account/AccountMenu/AccountMenu.c.js ***!
  \**********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	var AccountMenu = function AccountMenu() {};
	
	// Added by sephora-jsx-loader.js
	AccountMenu.prototype.shouldComponentUpdate = wrapComponentRenderModule.shouldComponentUpdate;
	var anaUtils = __webpack_require__(/*! analytics/utils */ 179);
	var store = __webpack_require__(/*! Store */ 146);
	var signOut = __webpack_require__(/*! actions/UserActions */ 210).signOut;
	var userUtils = __webpack_require__(/*! utils/User */ 186);
	
	AccountMenu.prototype.ctrlr = function () {
	    var _this = this;
	
	    store.setAndWatch('user', null, function (data) {
	        _this.setState({
	            isAnonymous: userUtils.isAnonymous()
	        });
	    });
	};
	
	AccountMenu.prototype.trackNavClick = function (link) {
	    var path = ['top nav', 'account', link];
	    anaUtils.setNextPageData({
	        navigationInfo: anaUtils.buildNavPath(path)
	    });
	};
	
	AccountMenu.prototype.signOutClickHandler = function (e) {
	    e.preventDefault();
	    e.stopPropagation();
	
	    if (!Sephora.isThirdPartySite) {
	        var redirectTo = window.location.href;
	
	        // This should be read as: users that sign out while on Rich Profile pages,
	        // should always get landed onto the homepage.
	        if (Sephora.pagePath && Sephora.pagePath.split('/')[1] === 'RichProfile') {
	            redirectTo = '/';
	        }
	
	        store.dispatch(signOut(redirectTo));
	        this.trackNavClick('sign out');
	    }
	};
	
	// Added by sephora-jsx-loader.js
	module.exports = AccountMenu.prototype;

/***/ }),
/* 404 */
/*!**************************************************************************************!*\
  !*** ./public_ufe/js/components/Header/Nav/Account/AccountHeader/AccountHeader.c.js ***!
  \**************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	// Added by sephora-jsx-loader.js
	'use strict';
	// Added by sephora-jsx-loader.js
	
	var React = __webpack_require__(/*! react */ 100);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRenderModule = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103);
	
	// Added by sephora-jsx-loader.js
	var wrapComponentRender = __webpack_require__(/*! utils/framework/wrapComponentRender */ 103).wrapComponentRender;
	
	// Added by sephora-jsx-loader.js
	var AccountHeader = function AccountHeader() {};
	
	// Added by sephora-jsx-loader.js
	AccountHeader.prototype.shouldComponentUpdate = wrapComponentRenderModule.shouldComponentUpdate;
	var store = __webpack_require__(/*! Store */ 146);
	
	AccountHeader.prototype.ctrlr = function () {
	    store.setAndWatch(['user', 'socialInfo.socialProfile', 'socialInfo.isLithiumSuccessful'], this);
	};
	
	AccountHeader.prototype.toggleOpen = function () {
	    this.setState({
	        isOpen: !this.state.isOpen
	    });
	};
	
	// Added by sephora-jsx-loader.js
	module.exports = AccountHeader.prototype;

/***/ }),
/* 405 */,
/* 406 */,
/* 407 */,
/* 408 */,
/* 409 */,
/* 410 */,
/* 411 */,
/* 412 */,
/* 413 */,
/* 414 */,
/* 415 */,
/* 416 */,
/* 417 */,
/* 418 */,
/* 419 */,
/* 420 */,
/* 421 */,
/* 422 */,
/* 423 */,
/* 424 */,
/* 425 */,
/* 426 */,
/* 427 */,
/* 428 */,
/* 429 */,
/* 430 */,
/* 431 */,
/* 432 */,
/* 433 */,
/* 434 */,
/* 435 */,
/* 436 */,
/* 437 */,
/* 438 */,
/* 439 */,
/* 440 */,
/* 441 */,
/* 442 */,
/* 443 */,
/* 444 */,
/* 445 */,
/* 446 */,
/* 447 */,
/* 448 */,
/* 449 */,
/* 450 */,
/* 451 */,
/* 452 */,
/* 453 */,
/* 454 */
/*!****************************************!*\
  !*** ./public_ufe/js/utils/certona.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var loadScripts = __webpack_require__(/*! utils/LoadScripts */ 455);
	var Locale = __webpack_require__(/*! utils/LanguageLocale.js */ 4);
	var Perf = __webpack_require__(/*! utils/framework/Perf */ 99);
	
	var CERTONA_DATA_AT_VALUES = {
	    addToBasket: 'add_to_basket',
	    addToBasketRecs: 'add_to_basket_recs',
	    qlAddToBasket: 'add_to_basket_ql',
	    qlAddToBasketRecs: 'add_to_basket_recs_ql',
	    qlLoves: 'add_to_loves_ql',
	    qlButton: 'ql'
	};
	
	var injectCertona = function injectCertona(envPrefix) {
	
	    var topLevelDom = Locale.getCurrentCountry().toUpperCase() === 'US' || Sephora.isMobile() ? 'com' : 'ca';
	    var script = '//edge1.certona.net/cd/1e15a405/' + (envPrefix ? envPrefix : Sephora.isMobile() ? 'm.' : '') + 'sephora.' + topLevelDom + '/scripts/resonance.js';
	
	    loadScripts([script], function () {
	        Sephora.Util.InflatorComps.services.loadEvents.CertonaLoaded = true;
	        Perf.report('Certona loaded');
	    });
	};
	
	var getApplicationId = function getApplicationId() {
	    var appId = void 0;
	
	    if (Locale.getCurrentCountry().toUpperCase() === 'US') {
	        appId = Sephora.isDesktop() ? 'Sephora01' : 'Sephora03';
	    } else {
	        appId = Sephora.isDesktop() ? 'Sephora02' : 'Sephora04';
	    }
	
	    return appId;
	};
	
	module.exports = {
	    CERTONA_DATA_AT_VALUES: CERTONA_DATA_AT_VALUES,
	    injectCertona: injectCertona,
	    getApplicationId: getApplicationId
	};

/***/ }),
/* 455 */
/*!********************************************!*\
  !*** ./public_ufe/js/utils/LoadScripts.js ***!
  \********************************************/
/***/ (function(module, exports) {

	'use strict';
	
	// TODO: Change this to export an object rather than a function to facilitate stubbing
	
	module.exports = function (list, callback) {
	    var waiting = list.slice();
	
	    var loaded = [];
	
	    var done = function done(src) {
	        loaded.push(src);
	
	        if (callback && loaded.length === list.length) {
	            callback();
	        }
	    };
	
	    var load = function load(src) {
	        var script = document.createElement('script');
	
	        script.src = src;
	
	        script.onload = function () {
	            done(src);
	
	            if (waiting.length) {
	                load(waiting.shift());
	            }
	        };
	
	        var firstScript = document.getElementsByTagName('script')[0];
	
	        firstScript.parentNode.insertBefore(script, firstScript);
	    };
	
	    load(waiting.shift());
	};

/***/ }),
/* 456 */,
/* 457 */,
/* 458 */,
/* 459 */,
/* 460 */,
/* 461 */,
/* 462 */,
/* 463 */,
/* 464 */,
/* 465 */,
/* 466 */,
/* 467 */,
/* 468 */,
/* 469 */,
/* 470 */,
/* 471 */,
/* 472 */,
/* 473 */,
/* 474 */,
/* 475 */,
/* 476 */
/*!***************************************************************************!*\
  !*** ./public_ufe/js/analytics/preprocess/preprocessCertonaImpression.js ***!
  \***************************************************************************/
/***/ (function(module, exports) {

	"use strict";
	
	/**
	 * Used later to determine if carousels were actually on the page and whether we should report that.
	 */
	
	module.exports = function () {
	    var isCertonaShown = false;
	
	    var setShownStatus = function setShownStatus(isOn) {
	        return isCertonaShown = isOn;
	    };
	
	    var getShownStatus = function getShownStatus() {
	        return isCertonaShown;
	    };
	
	    /* This function property is used to determine if we should check for this method to return
	    ** true before proceeding with this event. */
	    getShownStatus.isConditional = true;
	
	    return {
	        getShownStatus: getShownStatus,
	        setShownStatus: setShownStatus
	    };
	}();

/***/ }),
/* 477 */,
/* 478 */,
/* 479 */,
/* 480 */,
/* 481 */,
/* 482 */,
/* 483 */,
/* 484 */,
/* 485 */,
/* 486 */,
/* 487 */,
/* 488 */,
/* 489 */,
/* 490 */,
/* 491 */,
/* 492 */,
/* 493 */,
/* 494 */,
/* 495 */,
/* 496 */,
/* 497 */,
/* 498 */,
/* 499 */,
/* 500 */,
/* 501 */,
/* 502 */,
/* 503 */,
/* 504 */,
/* 505 */,
/* 506 */,
/* 507 */,
/* 508 */,
/* 509 */,
/* 510 */,
/* 511 */,
/* 512 */,
/* 513 */,
/* 514 */,
/* 515 */,
/* 516 */,
/* 517 */,
/* 518 */,
/* 519 */,
/* 520 */,
/* 521 */,
/* 522 */,
/* 523 */,
/* 524 */,
/* 525 */,
/* 526 */,
/* 527 */,
/* 528 */,
/* 529 */,
/* 530 */,
/* 531 */,
/* 532 */,
/* 533 */,
/* 534 */,
/* 535 */,
/* 536 */,
/* 537 */,
/* 538 */,
/* 539 */,
/* 540 */,
/* 541 */,
/* 542 */,
/* 543 */,
/* 544 */,
/* 545 */,
/* 546 */,
/* 547 */,
/* 548 */,
/* 549 */,
/* 550 */,
/* 551 */,
/* 552 */,
/* 553 */,
/* 554 */,
/* 555 */,
/* 556 */,
/* 557 */,
/* 558 */,
/* 559 */,
/* 560 */,
/* 561 */,
/* 562 */,
/* 563 */,
/* 564 */,
/* 565 */,
/* 566 */,
/* 567 */,
/* 568 */,
/* 569 */,
/* 570 */,
/* 571 */,
/* 572 */,
/* 573 */,
/* 574 */,
/* 575 */,
/* 576 */,
/* 577 */,
/* 578 */,
/* 579 */,
/* 580 */,
/* 581 */,
/* 582 */,
/* 583 */,
/* 584 */,
/* 585 */,
/* 586 */,
/* 587 */,
/* 588 */,
/* 589 */,
/* 590 */,
/* 591 */,
/* 592 */,
/* 593 */,
/* 594 */,
/* 595 */,
/* 596 */,
/* 597 */,
/* 598 */,
/* 599 */,
/* 600 */,
/* 601 */,
/* 602 */,
/* 603 */,
/* 604 */,
/* 605 */,
/* 606 */,
/* 607 */,
/* 608 */,
/* 609 */,
/* 610 */,
/* 611 */,
/* 612 */,
/* 613 */,
/* 614 */,
/* 615 */,
/* 616 */,
/* 617 */,
/* 618 */,
/* 619 */,
/* 620 */,
/* 621 */,
/* 622 */,
/* 623 */,
/* 624 */,
/* 625 */,
/* 626 */,
/* 627 */,
/* 628 */,
/* 629 */,
/* 630 */,
/* 631 */,
/* 632 */,
/* 633 */,
/* 634 */,
/* 635 */,
/* 636 */,
/* 637 */,
/* 638 */,
/* 639 */,
/* 640 */,
/* 641 */,
/* 642 */,
/* 643 */,
/* 644 */,
/* 645 */,
/* 646 */,
/* 647 */,
/* 648 */,
/* 649 */,
/* 650 */,
/* 651 */,
/* 652 */,
/* 653 */,
/* 654 */,
/* 655 */,
/* 656 */,
/* 657 */,
/* 658 */,
/* 659 */,
/* 660 */,
/* 661 */,
/* 662 */,
/* 663 */,
/* 664 */,
/* 665 */,
/* 666 */,
/* 667 */,
/* 668 */,
/* 669 */,
/* 670 */,
/* 671 */,
/* 672 */,
/* 673 */,
/* 674 */,
/* 675 */,
/* 676 */,
/* 677 */,
/* 678 */,
/* 679 */,
/* 680 */,
/* 681 */,
/* 682 */,
/* 683 */,
/* 684 */,
/* 685 */,
/* 686 */,
/* 687 */,
/* 688 */,
/* 689 */,
/* 690 */,
/* 691 */,
/* 692 */,
/* 693 */,
/* 694 */,
/* 695 */,
/* 696 */,
/* 697 */,
/* 698 */,
/* 699 */,
/* 700 */,
/* 701 */,
/* 702 */,
/* 703 */,
/* 704 */,
/* 705 */,
/* 706 */,
/* 707 */,
/* 708 */,
/* 709 */,
/* 710 */,
/* 711 */,
/* 712 */,
/* 713 */,
/* 714 */,
/* 715 */,
/* 716 */,
/* 717 */,
/* 718 */,
/* 719 */,
/* 720 */,
/* 721 */,
/* 722 */,
/* 723 */,
/* 724 */,
/* 725 */,
/* 726 */,
/* 727 */,
/* 728 */,
/* 729 */,
/* 730 */,
/* 731 */,
/* 732 */,
/* 733 */,
/* 734 */,
/* 735 */,
/* 736 */,
/* 737 */,
/* 738 */,
/* 739 */,
/* 740 */,
/* 741 */,
/* 742 */,
/* 743 */,
/* 744 */,
/* 745 */,
/* 746 */,
/* 747 */,
/* 748 */,
/* 749 */,
/* 750 */,
/* 751 */,
/* 752 */,
/* 753 */,
/* 754 */,
/* 755 */,
/* 756 */,
/* 757 */,
/* 758 */,
/* 759 */,
/* 760 */,
/* 761 */,
/* 762 */,
/* 763 */,
/* 764 */,
/* 765 */,
/* 766 */,
/* 767 */,
/* 768 */,
/* 769 */,
/* 770 */,
/* 771 */,
/* 772 */,
/* 773 */,
/* 774 */,
/* 775 */,
/* 776 */,
/* 777 */,
/* 778 */,
/* 779 */,
/* 780 */,
/* 781 */,
/* 782 */,
/* 783 */,
/* 784 */,
/* 785 */,
/* 786 */,
/* 787 */,
/* 788 */,
/* 789 */,
/* 790 */,
/* 791 */,
/* 792 */,
/* 793 */,
/* 794 */,
/* 795 */,
/* 796 */,
/* 797 */,
/* 798 */,
/* 799 */,
/* 800 */,
/* 801 */,
/* 802 */,
/* 803 */,
/* 804 */,
/* 805 */,
/* 806 */,
/* 807 */,
/* 808 */,
/* 809 */,
/* 810 */,
/* 811 */,
/* 812 */,
/* 813 */,
/* 814 */,
/* 815 */,
/* 816 */,
/* 817 */,
/* 818 */,
/* 819 */,
/* 820 */,
/* 821 */,
/* 822 */,
/* 823 */,
/* 824 */,
/* 825 */,
/* 826 */,
/* 827 */,
/* 828 */,
/* 829 */,
/* 830 */,
/* 831 */,
/* 832 */,
/* 833 */,
/* 834 */,
/* 835 */,
/* 836 */,
/* 837 */,
/* 838 */,
/* 839 */,
/* 840 */,
/* 841 */,
/* 842 */,
/* 843 */,
/* 844 */,
/* 845 */,
/* 846 */,
/* 847 */,
/* 848 */,
/* 849 */,
/* 850 */,
/* 851 */,
/* 852 */,
/* 853 */,
/* 854 */,
/* 855 */,
/* 856 */,
/* 857 */,
/* 858 */,
/* 859 */,
/* 860 */,
/* 861 */,
/* 862 */,
/* 863 */,
/* 864 */,
/* 865 */,
/* 866 */,
/* 867 */,
/* 868 */,
/* 869 */,
/* 870 */,
/* 871 */,
/* 872 */,
/* 873 */,
/* 874 */,
/* 875 */,
/* 876 */,
/* 877 */,
/* 878 */,
/* 879 */,
/* 880 */,
/* 881 */,
/* 882 */,
/* 883 */,
/* 884 */,
/* 885 */,
/* 886 */,
/* 887 */,
/* 888 */,
/* 889 */,
/* 890 */,
/* 891 */,
/* 892 */,
/* 893 */,
/* 894 */,
/* 895 */,
/* 896 */,
/* 897 */,
/* 898 */,
/* 899 */,
/* 900 */,
/* 901 */,
/* 902 */,
/* 903 */,
/* 904 */,
/* 905 */,
/* 906 */,
/* 907 */,
/* 908 */,
/* 909 */,
/* 910 */,
/* 911 */,
/* 912 */,
/* 913 */,
/* 914 */,
/* 915 */,
/* 916 */,
/* 917 */,
/* 918 */,
/* 919 */,
/* 920 */,
/* 921 */,
/* 922 */,
/* 923 */,
/* 924 */,
/* 925 */,
/* 926 */,
/* 927 */,
/* 928 */,
/* 929 */,
/* 930 */,
/* 931 */,
/* 932 */,
/* 933 */,
/* 934 */,
/* 935 */,
/* 936 */,
/* 937 */,
/* 938 */,
/* 939 */,
/* 940 */,
/* 941 */,
/* 942 */,
/* 943 */,
/* 944 */,
/* 945 */,
/* 946 */,
/* 947 */,
/* 948 */,
/* 949 */,
/* 950 */,
/* 951 */,
/* 952 */,
/* 953 */,
/* 954 */,
/* 955 */,
/* 956 */,
/* 957 */,
/* 958 */,
/* 959 */,
/* 960 */,
/* 961 */,
/* 962 */,
/* 963 */,
/* 964 */,
/* 965 */,
/* 966 */,
/* 967 */,
/* 968 */,
/* 969 */,
/* 970 */,
/* 971 */,
/* 972 */,
/* 973 */,
/* 974 */,
/* 975 */,
/* 976 */,
/* 977 */,
/* 978 */,
/* 979 */,
/* 980 */,
/* 981 */,
/* 982 */,
/* 983 */,
/* 984 */,
/* 985 */,
/* 986 */,
/* 987 */,
/* 988 */,
/* 989 */,
/* 990 */,
/* 991 */,
/* 992 */,
/* 993 */,
/* 994 */,
/* 995 */,
/* 996 */,
/* 997 */,
/* 998 */,
/* 999 */,
/* 1000 */,
/* 1001 */,
/* 1002 */,
/* 1003 */,
/* 1004 */,
/* 1005 */,
/* 1006 */,
/* 1007 */,
/* 1008 */,
/* 1009 */,
/* 1010 */,
/* 1011 */,
/* 1012 */,
/* 1013 */,
/* 1014 */,
/* 1015 */,
/* 1016 */,
/* 1017 */,
/* 1018 */,
/* 1019 */,
/* 1020 */,
/* 1021 */,
/* 1022 */,
/* 1023 */,
/* 1024 */,
/* 1025 */,
/* 1026 */,
/* 1027 */,
/* 1028 */,
/* 1029 */,
/* 1030 */,
/* 1031 */,
/* 1032 */,
/* 1033 */,
/* 1034 */,
/* 1035 */,
/* 1036 */,
/* 1037 */,
/* 1038 */,
/* 1039 */,
/* 1040 */,
/* 1041 */,
/* 1042 */,
/* 1043 */,
/* 1044 */,
/* 1045 */,
/* 1046 */,
/* 1047 */,
/* 1048 */,
/* 1049 */,
/* 1050 */,
/* 1051 */,
/* 1052 */,
/* 1053 */,
/* 1054 */,
/* 1055 */,
/* 1056 */,
/* 1057 */,
/* 1058 */,
/* 1059 */,
/* 1060 */,
/* 1061 */,
/* 1062 */,
/* 1063 */,
/* 1064 */,
/* 1065 */,
/* 1066 */,
/* 1067 */,
/* 1068 */,
/* 1069 */,
/* 1070 */,
/* 1071 */,
/* 1072 */,
/* 1073 */,
/* 1074 */,
/* 1075 */,
/* 1076 */,
/* 1077 */,
/* 1078 */,
/* 1079 */,
/* 1080 */,
/* 1081 */,
/* 1082 */,
/* 1083 */,
/* 1084 */,
/* 1085 */,
/* 1086 */,
/* 1087 */,
/* 1088 */,
/* 1089 */,
/* 1090 */,
/* 1091 */,
/* 1092 */,
/* 1093 */,
/* 1094 */,
/* 1095 */,
/* 1096 */,
/* 1097 */,
/* 1098 */,
/* 1099 */,
/* 1100 */,
/* 1101 */,
/* 1102 */,
/* 1103 */,
/* 1104 */,
/* 1105 */,
/* 1106 */,
/* 1107 */,
/* 1108 */,
/* 1109 */,
/* 1110 */,
/* 1111 */,
/* 1112 */,
/* 1113 */,
/* 1114 */,
/* 1115 */,
/* 1116 */,
/* 1117 */,
/* 1118 */,
/* 1119 */,
/* 1120 */,
/* 1121 */,
/* 1122 */,
/* 1123 */,
/* 1124 */,
/* 1125 */,
/* 1126 */,
/* 1127 */,
/* 1128 */,
/* 1129 */,
/* 1130 */,
/* 1131 */,
/* 1132 */,
/* 1133 */,
/* 1134 */,
/* 1135 */,
/* 1136 */,
/* 1137 */,
/* 1138 */,
/* 1139 */,
/* 1140 */,
/* 1141 */,
/* 1142 */,
/* 1143 */,
/* 1144 */,
/* 1145 */,
/* 1146 */,
/* 1147 */,
/* 1148 */,
/* 1149 */,
/* 1150 */,
/* 1151 */,
/* 1152 */,
/* 1153 */,
/* 1154 */,
/* 1155 */,
/* 1156 */,
/* 1157 */,
/* 1158 */,
/* 1159 */,
/* 1160 */,
/* 1161 */,
/* 1162 */,
/* 1163 */,
/* 1164 */,
/* 1165 */,
/* 1166 */,
/* 1167 */,
/* 1168 */,
/* 1169 */,
/* 1170 */,
/* 1171 */,
/* 1172 */,
/* 1173 */,
/* 1174 */,
/* 1175 */,
/* 1176 */
/*!********************************************!*\
  !*** ./public_ufe/js/services/UserInfo.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = function () {
	    'use strict';
	
	    var performance = __webpack_require__(/*! performance-polyfill */ 98);
	    var InflatorComps = __webpack_require__(/*! utils/framework/InflateComponents */ 97);
	    var Events = __webpack_require__(/*! utils/framework/Events */ 95);
	    var store = __webpack_require__(/*! ../store/Store */ 146);
	    var processUserFull = __webpack_require__(/*! actions/UserActions */ 210).processUserFull;
	    var urlUtils = __webpack_require__(/*! utils/Url */ 2);
	    var forceRegisterModal = __webpack_require__(/*! Actions */ 175).forceRegisterModal;
	    var Perf = __webpack_require__(/*! utils/framework/Perf */ 99);
	
	    /** Function for Forced Registration Modal if url contains action=register
	     * @param {object} userInfoData
	     */
	    var handleQueryParamsAction = function handleQueryParamsAction(userInfoData) {
	        var actionParams = urlUtils.getParamsByName('action');
	
	        if (actionParams && actionParams.indexOf('register') > -1) {
	            if (userInfoData.profile.profileStatus !== 0 && !userInfoData.profile.beautyInsiderAccount) {
	                store.dispatch(forceRegisterModal(true));
	            } else if (userInfoData.profile.profileStatus === 0) {
	                store.dispatch(forceRegisterModal(false));
	            }
	        }
	    };
	
	    /* User Info Service */
	    Events.onLastLoadEvent(window, [Events.UserInfoLoaded], function () {
	        var userInfo = InflatorComps.services.UserInfo;
	        var userInfoData = userInfo.data;
	        var dataIsFromCache = userInfo.dataIsFromCache;
	        store.dispatch(processUserFull(userInfoData, true, dataIsFromCache));
	
	        handleQueryParamsAction(userInfoData);
	
	        InflatorComps.services.loadEvents.UserInfoReady = true;
	        window.dispatchEvent(new CustomEvent(Events.UserInfoReady, { detail: {} }));
	        Perf.report('UserInfo Ready');
	
	        InflatorComps.renderQueue('UserInfo');
	    });
	
	    return null;
	}();

/***/ }),
/* 1177 */
/*!**********************************************!*\
  !*** ./public_ufe/js/services/TestTarget.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = function () {
	    'use strict';
	
	    var InflatorComps = __webpack_require__(/*! utils/framework/InflateComponents */ 97);
	    var services = InflatorComps.services;
	    var Events = __webpack_require__(/*! utils/framework/Events */ 95);
	    var TestTargetUtils = __webpack_require__(/*! utils/TestTarget */ 365);
	    var shouldServiceRun = __webpack_require__(/*! utils/Services */ 375).shouldServiceRun;
	
	    var setOffers = __webpack_require__(/*! actions/TestTargetActions */ 341).setOffers;
	    var registerTest = __webpack_require__(/*! actions/TestTargetActions */ 341).registerTest;
	    var cancelOffers = __webpack_require__(/*! actions/TestTargetActions */ 341).cancelOffers;
	    var store = __webpack_require__(/*! store/Store */ 146);
	    var watch = __webpack_require__(/*! redux-watch */ 187);
	
	    var LOCAL_STORAGE = __webpack_require__(/*! utils/localStorage/Constants */ 274);
	    var Storage = __webpack_require__(/*! utils/localStorage/Storage */ 275);
	    var Perf = __webpack_require__(/*! utils/framework/Perf */ 99);
	
	    /* Stop service from loading if not necessary */
	    if (!shouldServiceRun.testTarget()) {
	        return false;
	    }
	
	    /* Adobe Test & Target Service
	     ** The at.js script is loaded asynchronously and contains the following custom code
	     ** which is executed at the end of the script:
	     ** 1. window.dispatchEvent(new CustomEvent('TestTargetLoaded', {'detail': {}}));
	     ** 2. Sephora.Util.InflatorComps.services.loadEvents.TestTargetLoaded = true;
	     */
	
	    var userLocalData = Storage.local.getItem(LOCAL_STORAGE.USER_DATA, true);
	    var targetParamsData = Storage.local.getItem(LOCAL_STORAGE.TARGET_PARAMS);
	
	    var userCacheValid = userLocalData && userLocalData.profileStatus !== 0;
	    var targetCacheValid = targetParamsData !== null;
	
	    /* We check for a localStorage version of sent user target params or user data to avoid relying
	     ** on userInfo if unnecessary. If no cache exists then we load user data from the userInfo
	     ** service data.
	     */
	
	    var serviceDependencies = userCacheValid ? [Events.TestTargetLoaded, Events.VisitorAPILoaded] : [Events.UserInfoReady, Events.TestTargetLoaded, Events.VisitorAPILoaded];
	
	    /** Requests T&T tests and applies them
	     * @param {Object} targetParams - user/page data sent to T&T, refer to utils/TestTarget.js.
	     * @param {Function} callback - optional callback
	     */
	    function getOffer(targetParams, callback) {
	        adobe.target.getOffer({
	            mbox: TestTargetUtils.MBOX_NAME,
	            params: targetParams,
	            success: function success(response) {
	                try {
	                    adobe.target.applyOffer({
	                        mbox: TestTargetUtils.MBOX_NAME,
	                        offer: response
	                    });
	                } catch (e) {
	                    console.error(e);
	                    store.dispatch(cancelOffers(true));
	                }
	
	                if (callback) {
	                    callback();
	                }
	            },
	
	            error: function error(status, _error) {
	                store.dispatch(cancelOffers(true));
	
	                if (callback) {
	                    callback();
	                }
	            },
	
	            timeout: TestTargetUtils.MBOX_TIMEOUT
	        });
	    }
	
	    /**
	     * Sets service as ready
	     */
	    function serviceReady() {
	        Sephora.Util.InflatorComps.services.loadEvents.TestTargetReady = true;
	        Perf.report('TestTarget Ready');
	        window.dispatchEvent(new CustomEvent(Events.TestTargetReady, { detail: {} }));
	    }
	
	    /* Actual service logic */
	    Events.onLastLoadEvent(window, serviceDependencies, function () {
	        var targetParams = void 0;
	        if (targetCacheValid) {
	            targetParams = targetParamsData;
	        } else {
	            var userData = userCacheValid ? userLocalData : services.UserInfo.data.profile;
	            targetParams = TestTargetUtils.setUserParams(userData);
	        }
	
	        /**
	         * Listener that catches test script results and stores them in the Store
	         */
	        window.addEventListener(Events.TestTargetResult, function (data) {
	            var result = data.detail.result;
	            for (var prop in result) {
	                if (Object.prototype.hasOwnProperty.call(result, prop)) {
	                    var currentTest = result[prop];
	                    if (currentTest.testType !== undefined && currentTest.testType === TestTargetUtils.TEST_TYPES.REORDERING) {
	                        /* Transform the component arrangement format prescribed by T&T to ease the
	                        swapping process. */
	                        TestTargetUtils.setComponentArrangement.apply(currentTest);
	
	                        /* Components being swapped in the same test need a common reference object
	                        in the store to exchange data. */
	                        store.dispatch(registerTest(prop));
	                    }
	                }
	            }
	
	            store.dispatch(setOffers(result));
	        });
	
	        getOffer(targetParams, serviceReady);
	
	        /* Apply Test&Target offer each time user is updated, but not if said update means
	        ** the store is being populated for the first time during page load.
	        */
	
	        var userWatch = watch(store.getState, 'user');
	        store.subscribe(userWatch(function (newVal, oldVal) {
	            var userChanged = newVal.profileId !== oldVal.profileId;
	            var userIsPopulating = Object.keys(oldVal).length === 1;
	
	            if (userChanged && !userIsPopulating) {
	                targetParams = TestTargetUtils.setUserParams(newVal);
	                getOffer(targetParams);
	            }
	        }));
	    });
	
	    window.addEventListener(Events.TestTargetReady, function () {
	        InflatorComps.renderQueue(Events.TestTarget);
	    });
	
	    return null;
	}();

/***/ }),
/* 1178 */
/*!*******************************************!*\
  !*** ./public_ufe/js/services/Certona.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var processEvent = __webpack_require__(/*! analytics/processEvent */ 176);
	var anaConsts = __webpack_require__(/*! analytics/constants */ 178);
	var preprocessCertonaImpression = __webpack_require__(/*! analytics/preprocess/preprocessCertonaImpression */ 476);
	var certonaImpression = __webpack_require__(/*! analytics/bindings/pages/all/certonaImpression */ 1179);
	var deepExtend = __webpack_require__(/*! deep-extend */ 180);
	var InflatorComps = __webpack_require__(/*! utils/framework/InflateComponents */ 97);
	var Events = __webpack_require__(/*! utils/framework/Events */ 95);
	var shouldServiceRun = __webpack_require__(/*! utils/Services */ 375).shouldServiceRun;
	var store = __webpack_require__(/*! Store */ 146);
	var watch = __webpack_require__(/*! redux-watch */ 187);
	var Locale = __webpack_require__(/*! utils/LanguageLocale.js */ 4);
	var certonaUtils = __webpack_require__(/*! utils/certona.js */ 454);
	var Location = __webpack_require__(/*! utils/Location.js */ 3);
	var skuUtils = __webpack_require__(/*! utils/Sku.js */ 185);
	var updateCarousel = __webpack_require__(/*! actions/CertonaActions */ 338).updateCarousel;
	var Perf = __webpack_require__(/*! utils/framework/Perf */ 99);
	
	var PAGE_TYPES = {
	    CART: 'CART',
	    HOME: 'HOME',
	    PRODUCT: 'PRODUCT'
	};
	
	module.exports = function () {
	
	    /* Stop service from loading if not necessary */
	    if (!shouldServiceRun.certona()) {
	        return;
	    }
	
	    window.addEventListener(Events.CertonaReady, function () {
	        InflatorComps.renderQueue('Certona');
	    });
	
	    /**
	     * return pagetype string
	     */
	
	    var getPageType = function getPageType() {
	        var pagetype = void 0;
	        if (Location.isBasketPage()) {
	            pagetype = PAGE_TYPES.CART;
	        } else if (Location.isHomePage()) {
	            pagetype = PAGE_TYPES.HOME;
	        } else if (Location.isProductPage()) {
	            pagetype = PAGE_TYPES.PRODUCT;
	        }
	
	        return pagetype;
	    };
	
	    /**
	     * Homepage setup for Certona
	     * TODO: update environment check once BE sets up the flag
	     */
	    window.certona = {
	        pagetype: getPageType(),
	        recommendations: 'TRUE',
	        country: Locale.getCurrentCountry().toUpperCase(),
	        environment: window.process && window.process.env && Sephora.UFE_ENV ? Sephora.UFE_ENV : 'QA'
	    };
	
	    /**
	     * expand Certona object for Desktop, if needed
	     */
	    if (Sephora.isDesktop()) {
	        window.certona = Object.assign({}, window.certona, {
	            language: 'ENGLISH',
	            device: 'DESKTOP',
	            channel: 'WEB'
	        });
	    }
	
	    function setCertonaObject(prop, value) {
	        window.certona[prop] = value;
	    }
	
	    function initiateCertona() {
	
	        var envPrefex = void 0;
	
	        if (Sephora.UFE_ENV !== 'PROD') {
	            envPrefex = (Sephora.isMobile() ? 'm-' : '') + 'qa.';
	        }
	        certonaUtils.injectCertona(envPrefex);
	    }
	
	    var updateCertonaCustomerId = function updateCertonaCustomerId(user) {
	        if (user && user.profileStatus >= 0) {
	            setCertonaObject('customerid', user.profileId);
	        }
	    };
	
	    var updateProductId = function updateProductId(productId) {
	        setCertonaObject('itemid', productId);
	    };
	
	    var updateBasketItems = function updateBasketItems() {
	        var basket = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	        setCertonaObject('itemid', '');
	
	        if (basket.itemCount) {
	            setCertonaObject('itemid', basket.products.filter(function (li) {
	                return skuUtils.isHardGood(li.sku);
	            }).map(function (li) {
	                return li.sku.productId;
	            }).join(';'));
	        }
	    };
	
	    var pageType = getPageType();
	
	    var getBasket = function getBasket() {
	        return new Promise(function (resolve, reject) {
	            if (pageType === PAGE_TYPES.CART) {
	                var basket = store.getState().basket;
	                if (basket.isInitialized) {
	                    updateBasketItems(basket);
	                    resolve();
	                } else {
	                    var unsubscribe = store.subscribe(watch(store.getState, 'basket')(function (newVal) {
	                        if (newVal.isInitialized) {
	                            updateBasketItems(newVal);
	                            unsubscribe();
	                            resolve();
	                        }
	                    }));
	                }
	            } else {
	                resolve();
	            }
	        });
	    };
	
	    var getProduct = function getProduct() {
	        return new Promise(function (resolve, reject) {
	            if (pageType === PAGE_TYPES.PRODUCT) {
	                var _store$getState$produ = store.getState().product.currentProduct,
	                    currentProduct = _store$getState$produ === undefined ? {} : _store$getState$produ;
	
	                var productId = currentProduct.productId;
	                if (productId) {
	                    updateProductId(productId);
	                    resolve();
	                } else {
	                    var unsubscribe = store.subscribe(watch(store.getState, 'product.currentProduct')(function (newVal) {
	                        if (newVal.productId) {
	                            updateProductId(newVal.productId);
	                            unsubscribe();
	                            resolve();
	                        }
	                    }));
	                }
	            } else {
	                resolve();
	            }
	        });
	    };
	
	    var getUser = function getUser() {
	        return new Promise(function (resolve, reject) {
	            var user = store.getState().user;
	            if (user && (user.profileId || user.profileStatus === 0)) {
	                updateCertonaCustomerId(user);
	                resolve();
	            } else {
	                var unsubscribe = store.subscribe(watch(store.getState, 'user')(function (newVal) {
	                    if (newVal && (newVal.profileId || newVal.profileStatus === 0)) {
	                        updateCertonaCustomerId(newVal);
	                        unsubscribe();
	                        resolve();
	                    }
	                }));
	            }
	        });
	    };
	
	    Promise.all([getBasket(), getProduct(), getUser()]).then(initiateCertona);
	
	    /**
	     * This function is called from Certona only.
	     *
	     * If you want to re-initiate this call with fresh recommendations from Sephora side,
	     * use function: certonaResx.run() //TODO: change to callCertona() if lib is updated
	     */
	    Sephora.certona = function (recs) {
	        // Someone is clearing recs with object.assign, I need to save a copy for later
	        var savedRecsForAnalytics = deepExtend({}, recs);
	
	        //Avoid race conditions. Analytics files are not loaded until PostLoad.js
	        Events.onLastLoadEvent(window, [Events.PostLoad], function () {
	            try {
	                var getShownStatus = preprocessCertonaImpression.getShownStatus;
	
	                processEvent.processOnce(anaConsts.LINK_TRACKING_EVENT, {
	                    data: {
	                        recs: savedRecsForAnalytics,
	                        bindingMethods: [getShownStatus, certonaImpression],
	                        eventStrings: ['event71'],
	                        specificEventName: anaConsts.EVENT_NAMES.CERTONA_IMPRESSION
	                    }
	                }, { specificEventName: anaConsts.EVENT_NAMES.CERTONA_IMPRESSION });
	            } catch (e) {
	                console.error('Exception processing link tracking event\n                in Certona service: ' + e);
	            }
	        });
	
	        store.dispatch(updateCarousel(recs));
	        Sephora.Util.InflatorComps.services.loadEvents.CertonaReady = true;
	        Perf.report('Certona Ready');
	        window.dispatchEvent(new CustomEvent(Events.CertonaReady, { detail: {} }));
	    };
	
	    return;
	}();

/***/ }),
/* 1179 */
/*!*************************************************************************!*\
  !*** ./public_ufe/js/analytics/bindings/pages/all/certonaImpression.js ***!
  \*************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(/*! analytics/utils */ 179);
	var anaConsts = __webpack_require__(/*! analytics/constants */ 178);
	var deepExtend = __webpack_require__(/*! deep-extend */ 180);
	
	/**
	* Return the productIds for the first 5 products in Certona recommendations.
	* @param  {Array} products The products to get IDs from
	* @return {String}          A pipe delimited string of product IDs
	*/
	function getFirstFivePIDs(items) {
	    var PIDs = [];
	
	    for (var i = 0; i < 5; i++) {
	        if (items[i].id) {
	            PIDs.push(items[i].id);
	        } else {
	            i = 5; //Stop the loop
	        }
	    }
	
	    return PIDs.join('|');
	}
	
	function populateExternalRecsObject(items) {
	    var externalRecs = window.digitalData.page.attributes.externalRecommendations;
	
	    //Yes, we use these immediately below, but we also need to store them for other things
	    externalRecs.audienceId = items[0].certona_audience_id;
	    externalRecs.experienceId = items[0].certona_experience_id;
	    externalRecs.vendor = 'certona';
	    externalRecs.firstFivePIDs = getFirstFivePIDs(items);
	}
	
	function getFirstVisibleSetOfItems(schemes) {
	    var _iteratorNormalCompletion = true;
	    var _didIteratorError = false;
	    var _iteratorError = undefined;
	
	    try {
	        for (var _iterator = schemes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	            var scheme = _step.value;
	
	            //Check for === 'yes' because the string 'no' can be inferred as true
	            if (scheme.display === 'yes') {
	                if ((scheme.items || []).length) {
	                    return scheme.items;
	                }
	            }
	        }
	    } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	    } finally {
	        try {
	            if (!_iteratorNormalCompletion && _iterator.return) {
	                _iterator.return();
	            }
	        } finally {
	            if (_didIteratorError) {
	                throw _iteratorError;
	            }
	        }
	    }
	}
	
	module.exports = function (data) {
	
	    var currentEvent = utils.getMostRecentEvent(anaConsts.LINK_TRACKING_EVENT);
	    var externalRecs = window.digitalData.page.attributes.externalRecommendations;
	    var schemes = utils.safelyReadProperty('recs.resonance.schemes', data) || [];
	    var firstVisibleSetOfItems = [];
	
	    firstVisibleSetOfItems = getFirstVisibleSetOfItems(schemes);
	
	    if (firstVisibleSetOfItems.length) {
	        populateExternalRecsObject(firstVisibleSetOfItems);
	    }
	
	    deepExtend(currentEvent, {
	        eventInfo: {
	            attributes: {
	                audienceId: externalRecs.audienceId,
	                firstFivePIDs: externalRecs.firstFivePIDs,
	
	                //This gets reset (or not) earlier, so just pass the current value
	                pageName: utils.safelyReadProperty('s.pageName'),
	                urlWithoutQuery: null,
	                linkName: 'certona_impression'
	            }
	        }
	    });
	
	    // This return object is purely for unit testing
	    return {
	        currentEvent: currentEvent,
	        externalRecs: externalRecs
	    };
	};

/***/ }),
/* 1180 */
/*!********************************************!*\
  !*** ./public_ufe/js/services/PostLoad.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var basketActions = __webpack_require__(/*! actions/BasketActions */ 169);
	var inlineBasketActions = __webpack_require__(/*! actions/InlineBasketActions */ 310);
	var store = __webpack_require__(/*! Store */ 146);
	
	module.exports = function () {
	    var InflatorComps = __webpack_require__(/*! utils/framework/InflateComponents */ 97);
	    var Events = __webpack_require__(/*! utils/framework/Events */ 95);
	    var servicesUtils = __webpack_require__(/*! utils/Services */ 375);
	    var shouldServiceRun = servicesUtils.shouldServiceRun;
	    var TIMEOUT = servicesUtils.POST_LOAD_TIMEOUT;
	    var Perf = __webpack_require__(/*! utils/framework/Perf */ 99);
	
	    __webpack_require__.e/* nsure */(1/*! components */, function (require) {
	        var postLoadFired = false;
	
	        var handleExternallyTriggeredEvents = function handleExternallyTriggeredEvents() {
	            // Refreshes the ufe basket information and shows the inline basket
	            // jscs:disable maximumLineLength
	            window.addEventListener('UFE.openInlineBasket', function (e) {
	                var refreshBasket = basketActions.refreshBasket();
	
	                // Need to subscribe for refresh Basket end
	                refreshBasket(store.dispatch).then(function () {
	                    if (e.detail && e.detail.quantity) {
	                        store.dispatch(inlineBasketActions.addedProductsNotification(e.detail.quantity));
	                    }
	
	                    store.dispatch(inlineBasketActions.showInlineBasket(true));
	                    if (e.detail && e.detail.error) {
	                        store.dispatch(basketActions.showError(e.detail.error));
	                    }
	                });
	            });
	
	            window.addEventListener('UFE.refreshInlineBasket', function () {
	                store.dispatch(basketActions.refreshBasket());
	            });
	        };
	
	        handleExternallyTriggeredEvents();
	
	        /* Initialize analytics
	        ** Important: We need to do this before the load event to avoid errors in other files that
	        ** trigger analytics events and depend on objects that are expected to be defined.
	        ** UFE analytics are not used for legacy mode */
	        if (!Sephora.isLegacyMode) {
	            __webpack_require__(/*! analytics/loadAnalytics */ 1181);
	        }
	
	        Events.onLastLoadEvent(window, [Events.load], function () {
	
	            //Put deferred scripts here
	            // UFE analytics are not used for legacy mode
	            if (!Sephora.isLegacyMode) {
	
	                var analyticsConsts = __webpack_require__(/*! analytics/constants */ 178);
	                var processEvent = __webpack_require__(/*! analytics/processEvent */ 176);
	
	                //Populate prequesite properties that other code depends
	                __webpack_require__(/*! analytics/dataLayer/preLoadEventBindings */ 1187);
	
	                //Load Signal
	                __webpack_require__(/*! analytics/loadTagManagementSystem */ 1188);
	
	                processEvent.process(analyticsConsts.PAGE_LOAD, { pageType: Sephora.analytics.backendData.pageType });
	            }
	        });
	
	        var loadDependencies = function () {
	            var dependencies = [];
	            dependencies.push(Events.UserInfoCtrlrsApplied);
	
	            if (shouldServiceRun.certona()) {
	                dependencies.push(Events.CertonaCtrlrsApplied);
	            }
	
	            if (shouldServiceRun.testTarget()) {
	                dependencies.push(Events.TestTargetCtrlrsApplied);
	            }
	
	            dependencies.push(Events.InPageCompsCtrlrsApplied);
	            dependencies.push(Events.load);
	
	            return dependencies;
	        }();
	
	        /* Post Load Service */
	        var firePostLoad = function firePostLoad() {
	            /**
	             * This require.ensure needs to be inside the ensure for components.chunk
	             * so that its components aren't duplicated in both chunks.
	             */
	            if (!postLoadFired) {
	                __webpack_require__.e/* nsure */(2/*! postload */, function () {
	                    postLoadFired = true;
	                    Perf.report('PostLoad Ready');
	
	                    var postLoadComponents = __webpack_require__(/*! ../build/postLoadList */ 1189);
	                    InflatorComps.Comps = Object.assign(InflatorComps.Comps, postLoadComponents);
	
	                    // Trigger post load for components to react to
	                    InflatorComps.services.loadEvents[Events.PostLoad] = true;
	                    window.dispatchEvent(new CustomEvent(Events.PostLoad));
	
	                    InflatorComps.renderQueue('PostLoad');
	                });
	            } else {
	                return;
	            }
	        };
	
	        /* Set a timeout in case dependencies don't fire */
	        setTimeout(function () {
	            firePostLoad();
	        }, TIMEOUT);
	
	        Events.onLastLoadEvent(window, loadDependencies, firePostLoad);
	    });
	
	    return null;
	}();

/***/ })
/******/ ]);


// WEBPACK FOOTER //
// priority.bundle.js