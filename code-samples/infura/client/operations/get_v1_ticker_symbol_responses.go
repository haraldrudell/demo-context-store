// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/INFURA/project-harald-rudell/models"
)

// GetV1TickerSymbolReader is a Reader for the GetV1TickerSymbol structure.
type GetV1TickerSymbolReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1TickerSymbolReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetV1TickerSymbolOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetV1TickerSymbolOK creates a GetV1TickerSymbolOK with default headers values
func NewGetV1TickerSymbolOK() *GetV1TickerSymbolOK {
	return &GetV1TickerSymbolOK{}
}

/*GetV1TickerSymbolOK handles this case with default header values.

Ticker response
*/
type GetV1TickerSymbolOK struct {
	Payload *models.TickerResponse
}

func (o *GetV1TickerSymbolOK) Error() string {
	return fmt.Sprintf("[GET /v1/ticker/{symbol}][%d] getV1TickerSymbolOK  %+v", 200, o.Payload)
}

func (o *GetV1TickerSymbolOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TickerResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
