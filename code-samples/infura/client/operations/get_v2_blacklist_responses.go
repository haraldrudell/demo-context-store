// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/INFURA/project-harald-rudell/models"
)

// GetV2BlacklistReader is a Reader for the GetV2Blacklist structure.
type GetV2BlacklistReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV2BlacklistReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetV2BlacklistOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 502:
		result := NewGetV2BlacklistBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetV2BlacklistOK creates a GetV2BlacklistOK with default headers values
func NewGetV2BlacklistOK() *GetV2BlacklistOK {
	return &GetV2BlacklistOK{}
}

/*GetV2BlacklistOK handles this case with default header values.

Phishing blacklist, whitelist, and fuzzylist
*/
type GetV2BlacklistOK struct {
	Payload *models.BlacklistResponse
}

func (o *GetV2BlacklistOK) Error() string {
	return fmt.Sprintf("[GET /v2/blacklist][%d] getV2BlacklistOK  %+v", 200, o.Payload)
}

func (o *GetV2BlacklistOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BlacklistResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV2BlacklistBadGateway creates a GetV2BlacklistBadGateway with default headers values
func NewGetV2BlacklistBadGateway() *GetV2BlacklistBadGateway {
	return &GetV2BlacklistBadGateway{}
}

/*GetV2BlacklistBadGateway handles this case with default header values.

GitHub is having issues
*/
type GetV2BlacklistBadGateway struct {
}

func (o *GetV2BlacklistBadGateway) Error() string {
	return fmt.Sprintf("[GET /v2/blacklist][%d] getV2BlacklistBadGateway ", 502)
}

func (o *GetV2BlacklistBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
