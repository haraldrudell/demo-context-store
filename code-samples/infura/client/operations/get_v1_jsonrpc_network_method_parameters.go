// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetV1JsonrpcNetworkMethodParams creates a new GetV1JsonrpcNetworkMethodParams object
// with the default values initialized.
func NewGetV1JsonrpcNetworkMethodParams() *GetV1JsonrpcNetworkMethodParams {
	var ()
	return &GetV1JsonrpcNetworkMethodParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetV1JsonrpcNetworkMethodParamsWithTimeout creates a new GetV1JsonrpcNetworkMethodParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetV1JsonrpcNetworkMethodParamsWithTimeout(timeout time.Duration) *GetV1JsonrpcNetworkMethodParams {
	var ()
	return &GetV1JsonrpcNetworkMethodParams{

		timeout: timeout,
	}
}

// NewGetV1JsonrpcNetworkMethodParamsWithContext creates a new GetV1JsonrpcNetworkMethodParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetV1JsonrpcNetworkMethodParamsWithContext(ctx context.Context) *GetV1JsonrpcNetworkMethodParams {
	var ()
	return &GetV1JsonrpcNetworkMethodParams{

		Context: ctx,
	}
}

// NewGetV1JsonrpcNetworkMethodParamsWithHTTPClient creates a new GetV1JsonrpcNetworkMethodParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetV1JsonrpcNetworkMethodParamsWithHTTPClient(client *http.Client) *GetV1JsonrpcNetworkMethodParams {
	var ()
	return &GetV1JsonrpcNetworkMethodParams{
		HTTPClient: client,
	}
}

/*GetV1JsonrpcNetworkMethodParams contains all the parameters to send to the API endpoint
for the get v1 jsonrpc network method operation typically these are written to a http.Request
*/
type GetV1JsonrpcNetworkMethodParams struct {

	/*Method
	  JSON-RPC method. Use the `/v1/jsonrpc/{network}/methods` endpoint to get the list of permitted methods.

	*/
	Method string
	/*Network
	  Ethereum network in lowercase

	*/
	Network string
	/*Params
	  This is the `params` field that would normally be part of the JSON-RPC POST body. Use the exact same format. If it's omitted, it will default to an empty array.

	*/
	Params []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get v1 jsonrpc network method params
func (o *GetV1JsonrpcNetworkMethodParams) WithTimeout(timeout time.Duration) *GetV1JsonrpcNetworkMethodParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get v1 jsonrpc network method params
func (o *GetV1JsonrpcNetworkMethodParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get v1 jsonrpc network method params
func (o *GetV1JsonrpcNetworkMethodParams) WithContext(ctx context.Context) *GetV1JsonrpcNetworkMethodParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get v1 jsonrpc network method params
func (o *GetV1JsonrpcNetworkMethodParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get v1 jsonrpc network method params
func (o *GetV1JsonrpcNetworkMethodParams) WithHTTPClient(client *http.Client) *GetV1JsonrpcNetworkMethodParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get v1 jsonrpc network method params
func (o *GetV1JsonrpcNetworkMethodParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMethod adds the method to the get v1 jsonrpc network method params
func (o *GetV1JsonrpcNetworkMethodParams) WithMethod(method string) *GetV1JsonrpcNetworkMethodParams {
	o.SetMethod(method)
	return o
}

// SetMethod adds the method to the get v1 jsonrpc network method params
func (o *GetV1JsonrpcNetworkMethodParams) SetMethod(method string) {
	o.Method = method
}

// WithNetwork adds the network to the get v1 jsonrpc network method params
func (o *GetV1JsonrpcNetworkMethodParams) WithNetwork(network string) *GetV1JsonrpcNetworkMethodParams {
	o.SetNetwork(network)
	return o
}

// SetNetwork adds the network to the get v1 jsonrpc network method params
func (o *GetV1JsonrpcNetworkMethodParams) SetNetwork(network string) {
	o.Network = network
}

// WithParams adds the params to the get v1 jsonrpc network method params
func (o *GetV1JsonrpcNetworkMethodParams) WithParams(params []string) *GetV1JsonrpcNetworkMethodParams {
	o.SetParams(params)
	return o
}

// SetParams adds the params to the get v1 jsonrpc network method params
func (o *GetV1JsonrpcNetworkMethodParams) SetParams(params []string) {
	o.Params = params
}

// WriteToRequest writes these params to a swagger request
func (o *GetV1JsonrpcNetworkMethodParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param method
	if err := r.SetPathParam("method", o.Method); err != nil {
		return err
	}

	// path param network
	if err := r.SetPathParam("network", o.Network); err != nil {
		return err
	}

	valuesParams := o.Params

	joinedParams := swag.JoinByFormat(valuesParams, "")
	// query array param params
	if err := r.SetQueryParam("params", joinedParams...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
