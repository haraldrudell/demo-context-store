// test-serverwrapper.js
// Copyright Â© 2013 Harald Rudell <harald.rudell@therudells.com> (http://haraldrudell.com) MIT License

var serverwrapper = require('../lib/serverwrapper')

// http://nodejs.org/api/events.html
var events = require('events')

// https://github.com/haraldrudell/mochawrapper
var assert = require('mochawrapper')

exports['Server Wrapper:'] = {
	'Exports': function () {
		assert.exportsTest(serverwrapper, 4)
	},
	'RegisterHandler': function () {
		serverwrapper.testReset()

		serverwrapper.registerHandler('/', function () {})
	},
	'RegisterHandler Not String Error': function () {
		serverwrapper.testReset()

		var aE = []
		var emitter = new events.EventEmitter
		emitter.on('error', function (e) {aE.push(e)})
		serverwrapper.setEmitter(emitter)

		serverwrapper.registerHandler(null, function () {})

		assert.ok(aE.length)
	},
	'RegisterHandler Not Function Error': function () {
		serverwrapper.testReset()

		var aE = []
		var emitter = new events.EventEmitter
		emitter.on('error', function (e) {aE.push(e)})
		serverwrapper.setEmitter(emitter)

		serverwrapper.registerHandler('')

		assert.ok(aE.length)
	},
	'AddUriHandler': function () {
		var uris = [
			{uri: '/0', handler: function () {}},
			{uri: '/1', handler: function () {}},
		]

		serverwrapper.testReset()

		serverwrapper.registerHandler(uris[0].uri, uris[0].handler)

		var aRoutes = []
		var eRoutes = [
			[uris[0].uri, uris[0].handler],
			[uris[1].uri, uris[1].handler],
		]
		function mockRegisterFn(u, f) {aRoutes.push([u, f])}
		serverwrapper.addUriHandler(mockRegisterFn)

		assert.deepEqual(aRoutes.length, 1)

		serverwrapper.registerHandler(uris[1].uri, uris[1].handler)

		assert.deepEqual(aRoutes, eRoutes)
	},
	'after': function () {
		serverwrapper.testReset()
		serverwrapper.setEmitter(null)
	}
}
