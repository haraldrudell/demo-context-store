// escapechar.js
// convert unprintable characters to printable character sequences
// Â© 2011 Harald Rudell <harald@therudells.com> MIT License

exports.escapedChar = escapedChar

/*
the sensitive character codes
printable: space 32 - tilde 126, excluding single quote
*/
var minPrinted = ' '.charCodeAt(0)
var maxPrinted = '~'.charCodeAt(0)
var quoteCode = '\''.charCodeAt(0)

/*
JavaScript string literals single escape characters
key: unprintable character
value: escaped printable sequence
*/
var characterEscapeSequences = {
	'\r': '\\r',
	'\'': '\\\'',
	'\b': '\\b',
	'\\': '\\\\',
	'\f': '\\f',
	'\n': '\\n',
	'\t': '\\t',
	'\v': '\\v',
}

/*
Escape a single character
ch: string of at least one character

return value: printable string representing ch

'\\u0000' (6-character string) for illegal ch values or non-utf8
*/
function escapedChar(ch) {
	// number, integer, >= 0, < 2**16: unicode character code or 0
	var code = typeof ch === 'string' && ch ?
		ch.charCodeAt(0) || 0 : // number (NaN becomes 0)
		0 // if ch not a string of at least one character: 0

	if (code < minPrinted || code > maxPrinted || code === quoteCode) { // the character needs escaping

		// single-character escapes like \r
		var escape = characterEscapeSequences[ch]
		if (escape) ch = escape
		else {

			// unicode escape sequence \u1234
			escape = code.toString(16)
			var padChars = 4 - escape.length
			if (padChars > 0) escape = '0000'.substring(0, padChars) + escape
			ch = '\\u' + escape
		}
	}
	return ch
}
