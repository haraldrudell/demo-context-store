var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);
        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);
        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);
    }
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
/// <reference path="../../typings/tsd.d.ts" />
var nodeUrl = require('url');
var angular2_1 = require('angular2/angular2');
var router_1 = require('angular2/router');
var server_http_1 = require('../http/server_http');
// TODO: see https://github.com/angular/universal/issues/60#issuecomment-130463593
var MockServerHistory = (function () {
    function MockServerHistory() {
    }
    MockServerHistory.prototype.back = function (distance) { };
    MockServerHistory.prototype.forward = function (distance) { };
    MockServerHistory.prototype.go = function (delta) { };
    MockServerHistory.prototype.pushState = function (statedata, title, url) { };
    MockServerHistory.prototype.replaceState = function (statedata, title, url) { };
    return MockServerHistory;
})();
var MockServerLocation = (function () {
    function MockServerLocation() {
    }
    MockServerLocation.prototype.assign = function (url) {
        var parsed = nodeUrl.parse(url);
        this.hash = parsed.hash;
        this.host = parsed.host;
        this.hostname = parsed.hostname;
        this.href = parsed.href;
        this.pathname = parsed.pathname;
        this.port = parsed.port;
        this.protocol = parsed.protocol;
        this.search = parsed.search;
        this.origin = parsed.protocol + '//' + parsed.hostname + ':' + parsed.port;
    };
    MockServerLocation.prototype.reload = function (forcedReload) { };
    MockServerLocation.prototype.replace = function (url) {
        this.assign(url);
    };
    MockServerLocation.prototype.toString = function () { return ''; };
    return MockServerLocation;
})();
var ServerLocationStrategy = (function (_super) {
    __extends(ServerLocationStrategy, _super);
    function ServerLocationStrategy(baseUrl) {
        _super.call(this);
        this._location = new MockServerLocation();
        this._history = new MockServerHistory();
        this._baseHref = '/';
        this._location.assign(baseUrl);
    }
    ServerLocationStrategy.prototype.onPopState = function (fn) { };
    ServerLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };
    ServerLocationStrategy.prototype.path = function () { return this._location.pathname; };
    ServerLocationStrategy.prototype.pushState = function (state, title, url) { };
    ServerLocationStrategy.prototype.forward = function () {
        this._history.forward();
    };
    ServerLocationStrategy.prototype.back = function () {
        this._history.back();
    };
    ServerLocationStrategy = __decorate([
        angular2_1.Injectable(),
        __param(0, angular2_1.Inject(server_http_1.BASE_URL)), 
        __metadata('design:paramtypes', [String])
    ], ServerLocationStrategy);
    return ServerLocationStrategy;
})(router_1.LocationStrategy);
exports.ServerLocationStrategy = ServerLocationStrategy;
exports.SERVER_LOCATION_PROVIDERS = [
    angular2_1.provide(router_1.LocationStrategy, { useClass: ServerLocationStrategy })
];
//# sourceMappingURL=server_router.js.map