{"version":3,"sources":["allstore/plainStore.js","allstore/Store.js","App.js","allstore/connect.js","allstore/useAllstore.js","index.js"],"names":["store","notify","_subscriptions","forEach","v","getSubscribeFn","invoke","Object","next","Error","storeContext","createContext","StoreProvider","Provider","contextValue","Consumer","getState","subscribe","push","unsubscribe","i","indexOf","splice","memo","_ref","children","storeProp","useMemo","assign","objectSpread","react_default","a","createElement","value","list","incValue","recordsSelector","state","id","record","get","getRecord","r","toJS","isNaN","OrderedMap","map","o","Map","idAction","setId","e","valueAction","fetchValue","catch","console","error","_callee2","regenerator_default","wrap","_context2","prev","second","stop","this","mapStateToProps","options","_ref2","asyncToGenerator","mark","_callee","_context","abrupt","Promise","resolve","setTimeout","apply","arguments","DisplayValue","ConnectedComponent","length","undefined","displayName","String","name","pure","Connect","_getPrototypeOf2","_this","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","concat","getSelectors","props","componentDidMount","subscription","context","assertThisInitialized","lastProps","componentWillUnmount","inherits","createClass","key","newProps","entries","keys","every","_ref3","slicedToArray","setState","PureComponent","Component","contextType","connect2","DisplayRecord","_ref4","selectorFn","useContext","getPropsFromStore","propsFromStore","values","_useState","useState","_useState2","count","setCount","useEffect","useAllstore","ReactDOM","render","idActionBind","bind","style","padding","display","height","flexDirection","alignContent","href","onClick","marginBlockStart","marginBlockEnd","marginBottom","Store","document","getElementById"],"mappings":"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","file":"static/js/main.f93b5b1c.chunk.js","sourcesContent":["/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nThis source code is licensed under the ISC-style license found in the LICENSE file in the root directory of this source tree.\n*/\nexport const store = {}\nexport const getState = () => store\n\nexport const notify = () => _subscriptions.forEach(v => getSubscribeFn(v, true))\nexport const subscribe = v => getSubscribeFn(v) && _subscriptions.push(v) && ({unsubscribe: () => unsubscribe(v)})\nfunction getSubscribeFn(v, invoke) {\n  if (typeof Object(v).next === 'function') return invoke ? v.next(store) : true\n  if (typeof v === 'function') return invoke ? v(store) : true\n  throw new Error('plainStore: bad argument to subscribe')\n}\nexport const _subscriptions = []\nfunction unsubscribe(v) {\n  const i = _subscriptions.indexOf(v)\n  if (i >= 0) _subscriptions.splice(i, 1)\n}\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nThis source code is licensed under the ISC-style license found in the LICENSE file in the root directory of this source tree.\n*/\nimport React, { memo, useMemo, createContext } from 'react'\nimport { store, getState, subscribe, notify } from './plainStore'\n\nexport const storeContext = createContext()\nexport const {Provider: StoreProvider, Consumer: StoreConsumer} = storeContext\n\nconst contextValue = { store, getState, subscribe, notify }\n\nexport default memo(({children, store: storeProp}) => useMemo(() => Object.assign(store, {...storeProp}), [storeProp]) &&\n  <StoreProvider value={contextValue}>{children}</StoreProvider>)\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nThis source code is licensed under the ISC-style license found in the LICENSE file in the root directory of this source tree.\n*/\nimport React, { useState, useMemo } from 'react'\nimport { OrderedMap, Map } from 'immutable'\n\nimport { store, Store, connect, notify, useAllstore } from './allstore'\n\n// the value slice\nlet sliceName = 'value' // modifiable to avoid collisions setSlicename(s)\nconst setValue = v => !isNaN(v = +v) && (store[sliceName] = v)\nconst incValue = () => ++store[sliceName]\nconst valueSelector = state => ({value: state[sliceName]})\n\n// the records slice\nlet sliceName1 = 'records' // modifiable to avoid collisions setSlicename(s)\nconst setRecords = list => store[sliceName1] = OrderedMap(list.map(o => [o.id, Map(o)]))\nconst recordsSelector = (state, {id}) => ({record: state[sliceName1].get(id)})\nconst getRecord = r => (r && r.toJS()) || {}\n\n// initialize the store\nsetValue(1)\nsetRecords([{id: 1, record: 'One'}, {id: 2, record: 'Two'}])\n\nexport default function App() {\n  const [id, setId] = useState(2)\n  const idActionBind = useMemo(() => idAction.bind(undefined, setId, id), [id])\n  return <div style={{padding: '3em', display: 'flex', height: '30em', flexDirection: 'column', alignContent: 'start'}}>\n    <h1>Demonstration of Allstore single-truth store</h1>\n    <p>94% less code-lines<br />\n      &emsp;<a href=\"https://www.npmjs.com/package/allstore\">Allstore at npm</a><br />\n      &emsp;<a href=\"https://github.com/haraldrudell/demo-context-store/tree/master/src/allstore\">Allstore source code</a><br />\n    </p>\n    <p>Click Increment to update value with 1 s delay via connect store-subscription<br />\n      <button onClick={valueAction}>Increment</button></p>\n    Click Change Id to display another record via:\n    <ul style={{marginBlockStart: 0, marginBlockEnd: 0}}>\n      <li>useAllstore React 16.7 hook-subscription and</li>\n      <li>OrderedMap access</li>\n    </ul>\n    <div style={{marginBottom: '1em'}}><button onClick={idActionBind}>Change Id</button></div>\n    <Store>\n      <DisplayValue />\n      <DisplayRecord id={id} />\n    </Store>\n    <p>Written by Harald Rudell harald.rudell@gmail.com (http://www.haraldrudell.com)</p>\n  </div>\n}\nconst idAction = (setId, id, e) => setId(3 - id)\nconst valueAction = () => fetchValue().catch(console.error)\n\n// fetch function, like a thunk\nasync function fetchValue() {\n  await second() // faked fetch delay\n  incValue(); notify()\n}\nconst second = async () => new Promise(resolve => setTimeout(resolve, 1e3))\n\nconst DisplayValue = connect(valueSelector)(({value}) =>\n  <div>value: {String(value)}</div>)\n\nfunction DisplayRecord({id}) {\n  const {record: map} = useAllstore(recordsSelector, {id})\n  const {record} = getRecord(map)\n  return <div>id: {id} record: {record || ''}</div>\n}\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nThis source code is licensed under the ISC-style license found in the LICENSE file in the root directory of this source tree.\n*/\nimport React, { Component, PureComponent } from 'react'\nimport { storeContext } from './Store'\n\nexport const connect = (mapStateToProps, options) => ConnectedComponent => connect2(mapStateToProps, ConnectedComponent, options)\n\nexport function connect2(mapStateToProps = store => store, ConnectedComponent, options) {\n  if (!options) options = {}\n  const displayName = String(options.displayName || ConnectedComponent.displayName || ConnectedComponent.name || 'Connect')\n  const pure = options.pure !== false\n  if (typeof mapStateToProps !== 'function') throw new Error('connect: mapStateToProps not function')\n  class Connect extends (pure ? PureComponent : Component) {\n    getSelectors = state => Object(mapStateToProps(state, this.props))\n    componentDidMount = () => (this.subscription = this.context.subscribe(this)) + (this.lastProps = this.getSelectors(this.context.getState()))\n    componentWillUnmount = () => this.subscription.unsubscribe()\n    next(state) {\n      if (pure) {\n        const {lastProps} = this\n        const newProps = this.getSelectors(state)\n        const list = Object.entries(newProps)\n        if (Object.keys(lastProps).length === list.length && list.every(([key, value]) => value === lastProps[key])) return // no change\n        this.lastProps = newProps\n      }\n      this.setState({a: this.a ? ++this.a : (this.a = 1)})\n    }\n\n    render() {\n      const {props, context: store} = this\n      return <ConnectedComponent {...props} {...Object(mapStateToProps(store.getState(), props))} />\n    }\n  }\n  Connect.contextType = storeContext\n  displayName && (Connect.displayName = displayName)\n  return Connect\n}\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nThis source code is licensed under the ISC-style license found in the LICENSE file in the root directory of this source tree.\n*/\nimport { useState, useContext, useMemo, useEffect } from 'react'\nimport { storeContext } from './Store'\n\n// use like: useAllstore(selector, {props})\nexport function useAllstore(selectorFn, props, pure) {\n  pure = pure !== false // default is pure component\n\n  // get context containing store\n  const contextValue = useContext(storeContext)\n  if (!contextValue) throw new Error('useAllstore: store context missing, did Store component render?')\n  const { subscribe, store } = contextValue\n\n  // current propsFromStore\n  const getPropsFromStore = () => selectorFn(store, props)\n  const propsFromStore = useMemo(() => getPropsFromStore(), pure ? [Object.values(props)] : undefined)\n\n  // redraw on store updates\n  const [count, setCount] = useState(0)\n  function next(state) {\n    const newProps = getPropsFromStore()\n    if (pure) {\n      const list = Object.entries(newProps)\n      if (Object.keys(propsFromStore).length === list.length && list.every(([key, value]) => value === propsFromStore[key])) return // no change\n    }\n    return setCount(count + 1)\n  }\n\n  // subscribe to store\n  useEffect(() => subscribe(next).unsubscribe, [contextValue])\n\n  return propsFromStore\n}\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nThis source code is licensed under the ISC-style license found in the LICENSE file in the root directory of this source tree.\n*/\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}