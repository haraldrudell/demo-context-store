{"version":3,"sources":["allstore/plainStore.js","allstore/Store.js","allstore/useAllstore.js","App.js","allstore/connect.js","UseAllstoreTest.js","index.js"],"names":["store","notify","_subscriptions","forEach","v","getSubscribeFn","invoke","Object","next","Error","storeContext","createContext","StoreProvider","Provider","contextValue","Consumer","getState","subscribe","push","unsubscribe","i","indexOf","splice","memo","_ref","children","storeProp","useMemo","getOwnPropertyNames","p","assign","objectSpread","applyStoreProp","react_default","a","createElement","value","useAllstore","selectorFn","arguments","length","undefined","props","pure","useContext","lastCompProps","useRef","console","log","current","lastCount","lastStoreProps","_useState","useState","_useState2","slicedToArray","count","setCount","storeProps","concat","toConsumableArray","values","subscription","state","lastProps","newEntries","entries","keys","every","_ref2","key","useEffect","list","incValue","recordsSelector","id","record","get","isNaN","OrderedMap","map","o","Map","setId","idActionBind","idAction","bind","Store","style","padding","display","height","flexDirection","alignContent","href","onClick","valueAction","marginBlockStart","marginBlockEnd","marginBottom","DisplayValue","DisplayRecord","e","fetchValue","catch","error","_callee2","regenerator_default","wrap","_context2","prev","second","stop","this","mapStateToProps","options","asyncToGenerator","mark","_callee","_context","abrupt","Promise","resolve","setTimeout","apply","ConnectedComponent","displayName","String","name","Connect","_getPrototypeOf2","_this","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","getSelectors","getStoreProps","context","componentDidMount","assertThisInitialized","componentWillUnmount","render","inherits","createClass","newProps","_ref3","setState","PureComponent","Component","contextType","connect2","_ref4","r","toJS","valueSelector","getValue","incFn","intervalTime","valueHideFn","FnContainer","showFn","setShowFn","timer","setInterval","hideFn","useCallback","clearInterval","Fn","ReactDOM","process","REACT_APP_TESTHOOK","App","document","getElementById"],"mappings":"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","file":"static/js/main.f93997ad.chunk.js","sourcesContent":["/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nThis source code is licensed under the ISC-style license found in the LICENSE file in the root directory of this source tree.\n*/\nexport const store = {}\nexport const getState = () => store\nexport const notify = () => _subscriptions.forEach(v => getSubscribeFn(v, true))\nexport const subscribe = v => _subscriptions.push(getSubscribeFn(v)) && ({unsubscribe: () => unsubscribe(v)})\n\nexport const _subscriptions = []\nfunction getSubscribeFn(v, invoke) {\n  if (typeof Object(v).next === 'function') return invoke ? v.next(store) : v\n  if (typeof v === 'function') return invoke ? v(store) : v\n  throw new Error('plainStore: bad argument to subscribe')\n}\nfunction unsubscribe(v) {\n  const i = _subscriptions.indexOf(v)\n  if (i >= 0) _subscriptions.splice(i, 1)\n}\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nThis source code is licensed under the ISC-style license found in the LICENSE file in the root directory of this source tree.\n*/\nimport React, { memo, useMemo, createContext } from 'react'\nimport { store, getState, subscribe, notify } from './plainStore'\n\nexport const storeContext = createContext()\nexport const {Provider: StoreProvider, Consumer: StoreConsumer} = storeContext\n\nconst contextValue = { store, getState, subscribe, notify }\n\nfunction applyStoreProp(storeProp) {\n  if (!storeProp) return\n  Object.getOwnPropertyNames(store).forEach(p => delete store[p])\n  Object.assign(store, {...storeProp})\n}\n\nexport default memo(({children, store: storeProp}) => useMemo(() => applyStoreProp(storeProp), [storeProp]) ||\n  <StoreProvider value={contextValue}>{children}</StoreProvider>)\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nThis source code is licensed under the ISC-style license found in the LICENSE file in the root directory of this source tree.\n*/\nimport {useState, useContext, useMemo, useEffect, useRef} from 'react'\nimport {storeContext} from './Store'\n\nexport function useAllstore(selectorFn = store => store, props, pure) {\n  if (typeof selectorFn !== 'function') throw new Error('useAllstore: selector not function')\n  props = {...props}\n  pure = pure !== false // default is pure component\n\n  // get context containing store\n  const contextValue = useContext(storeContext)\n  if (!contextValue) throw new Error('useAllstore: store context missing, did Store component render?')\n  const {subscribe, store} = contextValue\n\n  // generate memoized props, count and propsFromStore\n  const lastCompProps = useRef()\n  console.log('CURRENT', typeof lastCompProps.current, lastCompProps.current)\n  const lastCount = useRef()\n  const lastStoreProps = useRef() // static lastProps mechanic\n  lastCompProps.current = props\n  const [count, setCount] = useState(0) // force redraw mechanic\n  lastCount.current = count\n  const storeProps = useMemo(() => lastStoreProps.current = selectorFn(store, props), pure ? [count, ...Object.values(props)] : undefined)\n\n  // subscribe to store and redraw on updates\n  const subscription = useMemo(() => subscribe(next), [1])\n  function next(state) {\n    if (pure) {\n      const lastProps = lastStoreProps.current\n      const newEntries = Object.entries(selectorFn(state, lastCompProps.current))\n      if (Object.keys(lastProps).length === newEntries.length && newEntries.every(([key, value]) => value === lastProps[key])) return // no change\n    }\n    setCount(lastCount.current + 1)\n  }\n  useEffect(() => () => subscription.unsubscribe(), [1])\n\n  return storeProps\n}\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nThis source code is licensed under the ISC-style license found in the LICENSE file in the root directory of this source tree.\n*/\nimport React, {useState, useMemo, memo} from 'react'\nimport {OrderedMap, Map} from 'immutable'\n\nimport {store, Store, connect, notify, useAllstore} from './allstore'\n\n// the value slice\nlet sliceName = 'value' // modifiable to avoid collisions setSliceName(s)\nconst setValue = v => !isNaN(v = +v) && (store[sliceName] = v)\nconst incValue = () => ++store[sliceName]\nconst valueSelector = state => ({value: state[sliceName]})\n\n// the records slice\nlet sliceName1 = 'records' // modifiable to avoid collisions setSliceName(s)\nconst setRecords = list => store[sliceName1] = OrderedMap(list.map(o => [o.id, Map(o)]))\nconst recordsSelector = (state, {id}) => ({record: state[sliceName1].get(id)})\nconst getRecord = r => (r && r.toJS()) || {}\n\n// initialize the store\nsetValue(1)\nsetRecords([{id: 1, record: 'One'}, {id: 2, record: 'Two'}])\n\nexport default memo(() => {\n  const [id, setId] = useState(2)\n  const idActionBind = useMemo(() => idAction.bind(undefined, setId, id), [id])\n  return <Store>\n    <div style={{padding: '3em', display: 'flex', height: '30em', flexDirection: 'column', alignContent: 'start'}}>\n      <h1>Demonstration of Allstore Single-Truth Store</h1>\n      <p>94% less code-lines<br />\n        &emsp;<a href=\"https://www.npmjs.com/package/allstore\">Allstore at npm</a><br />\n        &emsp;<a href=\"https://github.com/haraldrudell/demo-context-store/tree/master/src/allstore\">Allstore source code</a><br />\n      </p>\n      <p>Click Increment to update value with 1 s delay via connect store-subscription<br />\n        <button onClick={valueAction}>Increment</button></p>\n      Click Change Id to display another record via:\n      <ul style={{marginBlockStart: 0, marginBlockEnd: 0}}>\n        <li>useAllstore React 16.7 hook-subscription and</li>\n        <li>OrderedMap access</li>\n      </ul>\n      <div style={{marginBottom: '1em'}}><button onClick={idActionBind}>Change Id</button></div>\n      <DisplayValue />\n      <DisplayRecord id={id} />\n      <p>Written by Harald Rudell harald.rudell@gmail.com (http://www.haraldrudell.com)</p>\n    </div>\n  </Store>\n})\nconst idAction = (setId, id, e) => setId(3 - id)\nconst valueAction = e => fetchValue().catch(console.error)\n\n// fetch function, like a thunk\nasync function fetchValue() {\n  await second() // faked fetch delay\n  incValue(); notify()\n}\nconst second = async () => new Promise(resolve => setTimeout(resolve, 1e3))\n\nconst DisplayValue = connect(valueSelector)(memo(({value}) =>\n  <div>value: {String(value)}</div>))\n\nconst DisplayRecord = memo(({id}) => {\n  const {record} = getRecord(useAllstore(recordsSelector, {id}).record)\n  return <div>id: {id} record: {record || ''}</div>\n})\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nThis source code is licensed under the ISC-style license found in the LICENSE file in the root directory of this source tree.\n*/\nimport React, { Component, PureComponent } from 'react'\nimport { storeContext } from './Store'\n\nexport const connect = (mapStateToProps, options) => ConnectedComponent => connect2(mapStateToProps, ConnectedComponent, options)\n\nexport function connect2(mapStateToProps = store => store, ConnectedComponent, options) {\n  if (!options) options = {}\n  const displayName = String(options.displayName || ConnectedComponent.displayName || ConnectedComponent.name || 'Connect')\n  const pure = options.pure !== false\n  if (typeof mapStateToProps !== 'function') throw new Error('connect: mapStateToProps not function')\n  class Connect extends (pure ? PureComponent : Component) {\n    getSelectors = state => Object(mapStateToProps(state, this.props))\n    getStoreProps = () => this.getSelectors(this.context.getState())\n    componentDidMount = () => (this.subscription = this.context.subscribe(this)) && (this.lastProps = this.getStoreProps())\n    componentWillUnmount = () => this.subscription.unsubscribe()\n    next(state) {\n      if (pure) {\n        const {lastProps} = this\n        const newProps = this.getSelectors(state)\n        const list = Object.entries(newProps)\n        if (Object.keys(lastProps).length === list.length && list.every(([key, value]) => value === lastProps[key])) return // no change\n        this.lastProps = newProps\n      }\n      this.setState({a: Object(this.state).a + 1 || 1})\n    }\n    render = () => <ConnectedComponent {...this.props} {...this.getStoreProps()} />\n  }\n  Connect.contextType = storeContext\n  displayName && (Connect.displayName = displayName)\n  return Connect\n}\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nThis source code is licensed under the ISC-style license found in the LICENSE file in the root directory of this source tree.\n*/\nimport React, {useEffect, useState, useCallback, useMemo} from 'react'\n\nimport {store, Store, notify, useAllstore} from './allstore'\n\n// the value slice\nlet sliceName = 'value' // modifiable to avoid collisions setSlicename(s)\nconst incValue = () => ++store[sliceName]\nconst valueSelector = state => ({value: state[sliceName]})\nconst getValue = () => store[sliceName]\n\n// after 6 intervals, the browser slows them down\nconst incFn = () => console.log('inc') || (incValue() && notify())\nconst intervalTime = 5e2\nconst valueHideFn = 3\n\nexport default () => console.log('UseAllstoreTest.render') ||\n  <Store store={{value: 1}}>\n    <FnContainer />\n  </Store>\n\nfunction FnContainer() {\n  const [showFn, setShowFn] = useState(true)\n  const timer = useMemo(() => setInterval(incFn, intervalTime), [1])\n  console.log('FnContainer.render', showFn)\n  const hideFn = useCallback(() => console.log('FnContainer.hideFn') || clearInterval(timer) || setShowFn(false), [1])\n  return <div>\n    Check browser log for progress\n    {showFn && <Fn hideFn={hideFn} />}\n  </div>\n}\n\nfunction Fn({hideFn}) {\n  console.log('Fn.render')\n  useEffect(() => getValue() >= valueHideFn ? console.log('Fn.hideFn') || hideFn() : undefined)\n  const {value} = useAllstore(valueSelector)\n  console.log('Fn.render value:', value)\n  return value\n}\n","/*\n© 2018-present Harald Rudell <harald.rudell@gmail.com> (http://www.haraldrudell.com)\nThis source code is licensed under the ISC-style license found in the LICENSE file in the root directory of this source tree.\n*/\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport UseAllstoreTest from './UseAllstoreTest'\n\nReactDOM.render(!process.env.REACT_APP_TESTHOOK ? <App /> : <UseAllstoreTest />, document.getElementById('root'))\n"],"sourceRoot":""}